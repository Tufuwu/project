```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.8-dev']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip, setuptools, and wheel
        run: |
          pip install -U pip
          pip install -U setuptools
          pip install -U wheel

      - name: Install dependencies
        run: pip install -r test-requirements.txt

      - name: Install package
        run: pip install tox-travis .[devel]

      - name: Run tests
        run: tox

      - name: Run niet commands
        run: |
          python setup.py install
          niet project.meta.name tests/samples/sample.yaml
          niet .project.meta.name tests/samples/sample.yaml
          niet project.list tests/samples/sample.yaml
          niet .project.list tests/samples/sample.json
          niet . tests/samples/sample.json
          niet -f squote project.list tests/samples/sample.yaml
          niet -f squote project.meta.name tests/samples/sample.yaml
          niet -f dquote project.list tests/samples/sample.yaml
          niet -f dquote project.meta.name tests/samples/sample.yaml
          niet -f ifs project.list tests/samples/sample.yaml
          niet --format newline project.list tests/samples/sample.yaml
          niet --format yaml project.list tests/samples/sample.yaml
          niet --format json project.list tests/samples/sample.yaml
          niet project.'"test-dash"' tests/samples/sample.yaml
          niet project.'"test-dash"' tests/samples/sample.json
          niet project.'"test-dash"' tests/samples/sample.json -f eval
          niet project.list tests/samples/sample.json -f eval
          niet project tests/samples/sample.json -f eval
          eval $(niet project tests/samples/sample.json -f eval) && test "${project__foo}" = "bar"
          niet -f yaml .project tests/samples/sample.yaml -o test.yaml && test -f test.yaml && ! grep '^project:$' test.yaml
          cp test.yaml test.old.yaml && niet -f yaml .list test.yaml -i && ! diff test.old.yaml
          niet -f yaml .project tests/samples/sample.yaml --output test2.yaml && test -f test2.yaml && ! grep '^project:$' test2.yaml
          cp test2.yaml test2.old.yaml && niet -f yaml .list test2.yaml --in-place && ! diff test2.old.yaml

      - name: Deploy to PyPI
        if: github.event_name == 'release' && github.event.action == 'created'
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          username: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          distributions: sdist bdist_wheel
```