```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - VIM_VERSION: "7.4"
            PYTHON_IMAGE: "3.5-stretch"
            TAG: "vim_74_py35"
          - VIM_VERSION: "8.0"
            PYTHON_IMAGE: "3.5-stretch"
            TAG: "vim_80_py35"
          - VIM_VERSION: "8.1"
            PYTHON_IMAGE: "3.5-stretch"
            TAG: "vim_81_py35"
          - VIM_VERSION: "git"
            PYTHON_IMAGE: "3.5-stretch"
            TAG: "vim_git_py35"
          - VIM_VERSION: "7.4"
            PYTHON_IMAGE: "3.6-stretch"
            TAG: "vim_74_py36"
          - VIM_VERSION: "8.0"
            PYTHON_IMAGE: "3.6-stretch"
            TAG: "vim_80_py36"
          - VIM_VERSION: "8.1"
            PYTHON_IMAGE: "3.6-stretch"
            TAG: "vim_81_py36"
          - VIM_VERSION: "git"
            PYTHON_IMAGE: "3.6-stretch"
            TAG: "vim_git_py36"
          - VIM_VERSION: "8.1"
            PYTHON_IMAGE: "3.7-stretch"
            TAG: "vim_81_py37"
          - VIM_VERSION: "git"
            PYTHON_IMAGE: "3.7-stretch"
            TAG: "vim_git_py37"
          - VIM_VERSION: "8.1"
            PYTHON_IMAGE: "3.8-buster"
            TAG: "vim_81_py38"
          - VIM_VERSION: "git"
            PYTHON_IMAGE: "3.8-buster"
            TAG: "vim_git_py38"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t ultisnips:${{ matrix.TAG }} --build-arg PYTHON_IMAGE=${{ matrix.PYTHON_IMAGE }} --build-arg VIM_VERSION=${{ matrix.VIM_VERSION }} .

      - name: Run tests
        run: docker run -it ultisnips:${{ matrix.TAG }} docker/run_tests.sh

  notify:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Send notification
        uses: joelwmale/webhook-action@v1.0.0
        with:
          url: https://webhooks.gitter.im/e/558acac434012ba838cd
          on_success: change
          on_failure: always
          on_start: false
```