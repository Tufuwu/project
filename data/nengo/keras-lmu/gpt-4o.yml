```yaml
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.8]
        tf-version: [tensorflow, tensorflow==2.1.0, tensorflow~=2.6.0]
        script: [test, static, remote-test, remote-docs, remote-examples]
    env:
      TEST_ARGS: ""
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install "importlib-metadata>=0.21"
          pip install git+https://github.com/nengo/nengo-bones#egg=nengo-bones
          bones-generate --output-dir .ci ci-scripts
          bones-check --verbose
          pip freeze
      - name: Run install script
        run: .ci/${{ matrix.script }}.sh install
      - name: Run script
        run: .ci/${{ matrix.script }}.sh script
      - name: After success
        if: success()
        run: .ci/${{ matrix.script }}.sh after_success
      - name: After failure
        if: failure()
        run: .ci/${{ matrix.script }}.sh after_failure
      - name: After script
        run: .ci/${{ matrix.script }}.sh after_script

  deploy:
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install "importlib-metadata>=0.21"
          pip install git+https://github.com/nengo/nengo-bones#egg=nengo-bones
          bones-generate --output-dir .ci ci-scripts
          bones-check --verbose
          pip freeze
      - name: Run deploy script
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: .ci/deploy.sh
```