```yaml
name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.6']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install ffmpeg
      run: sudo apt-get install -y ffmpeg

    - name: Install Miniconda
      shell: bash
      run: |
        wget ${{ env.MINICONDA_URL }} -O miniconda.sh
        bash miniconda.sh -b -f -p $HOME/miniconda
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH
        conda config --set always_yes yes
        conda update conda
        conda config --add channels conda-forge
        conda install python=${{ matrix.python-version }} ${{ env.CONDA_DEPS }}
        pip install ${{ env.PIP_DEPS }}

    - name: Install dependencies
      run: |
        pip install codecov
        pip install -r requirements.txt
        pip install -e .

    - name: Lint with flake8
      run: |
        flake8 --ignore N802,N806,W503 --select W504 `find . -name \*.py | grep -v setup.py | grep -v version.py | grep -v __init__.py | grep -v /doc/`

    - name: Test with pytest
      run: |
        mkdir for_test
        cd for_test
        pytest --pyargs pulse2percept --cov-report term-missing --cov=pulse2percept --doctest-modules

    - name: Upload coverage to Codecov
      run: codecov

env:
  CONDA_DEPS: "pip flake8 numpy scipy numba joblib dask scikit-image"
  PIP_DEPS: "pytest coveralls mock pytest-cov"
  MINICONDA_URL: "https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
```