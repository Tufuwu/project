```yaml
name: CI

on:
  push:
    branches:
      - master
      - devel
      - 'refs/tags/*'
  pull_request:
    branches:
      - master
      - devel

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7, 3.4, 3.5, 3.6]
        optlang-use-symengine: [false, true]
        include:
          - python-version: 3.6
            optlang-use-symengine: false
    env:
      GITHUB_REPO: biosustain/optlang
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Upgrade pip
      run: pip install --upgrade pip
    - name: Install dependencies
      run: |
        export SYMPY_USE_CACHE=no
        echo "this is a build for: ${{ github.ref }}"
        if [[ "${{ matrix.python-version }}" < "3.5" ]]; then bash ./.travis/install_cplex.sh; fi
        pip install nose nose-progressive colorama==0.3.9 rednose coverage docutils flake8 codecov jsonschema
        pip install -r requirements.txt
        pip install scipy
        if [[ "${{ matrix.optlang-use-symengine }}" == "true" ]]; then pip install symengine; fi
        python setup.py install
    - name: Lint with flake8
      run: flake8 .
    - name: Test with nosetests
      run: nosetests
    - name: Upload coverage to Codecov
      if: success()
      run: codecov

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Deploy to GitHub Releases
      if: matrix.optlang-use-symengine == 'false'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Deploy to PyPI
      if: matrix.optlang-use-symengine == 'false'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
```