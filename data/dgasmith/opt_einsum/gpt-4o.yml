```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: MINIMAL 3.5
            python-version: 3.5
            environ: MINIMAL
          - name: MINIMAL 3.8
            python-version: 3.8
            environ: MINIMAL
          - name: FULL 3.5
            python-version: 3.5
            environ: FULL
          - name: FULL 3.6
            python-version: 3.6
            environ: FULL
          - name: FULL 3.7
            python-version: 3.7
            environ: FULL
          - name: OLD_VERSIONS 3.6
            python-version: 3.6
            environ: OLD_VERSIONS

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display system info
      run: |
        uname -a
        free -m
        df -h
        ulimit -a

    - name: Setup environment
      run: |
        source devtools/travis-ci/before_install.sh

    - name: Install dependencies
      run: |
        echo ${{ matrix.environ }}
        if [ "${{ matrix.environ }}" == "FULL" ]; then
          python devtools/scripts/conda_env.py -n=test -p=${{ matrix.python-version }} devtools/conda-envs/full_test.yaml
        elif [ "${{ matrix.environ }}" == "MINIMAL" ]; then
          python devtools/scripts/conda_env.py -n=test -p=${{ matrix.python-version }} devtools/conda-envs/minimal.yaml
        elif [ "${{ matrix.environ }}" == "OLD_VERSIONS" ]; then
          python devtools/scripts/conda_env.py -n=test -p=${{ matrix.python-version }} devtools/conda-envs/old_versions.yaml
        else
          echo "ERROR: No match for ENVIRON (${{ matrix.environ }})."
          exit 1
        fi
        source activate test
        python setup.py develop --no-deps

    - name: Before script
      run: |
        python -V
        conda list

    - name: Run tests
      run: |
        pytest -v --cov=opt_einsum opt_einsum/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
```