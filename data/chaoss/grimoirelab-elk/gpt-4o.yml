```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 3306:3306

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8"]
        es-version: ["6.1.0", "7.2.0"]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install --upgrade setuptools==49.6.0
        pip install --upgrade pip==18.1
        pip install flake8
        pip install coveralls
        pip install -r "requirements.txt"
        pip install -r "requirements_tests.txt"

    - name: Set up Elasticsearch ${{ matrix.es-version }}
      run: |
        if [ "${{ matrix.es-version }}" == "6.1.0" ]; then
          curl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.1.0.deb
          sudo dpkg -i --force-confnew elasticsearch-6.1.0.deb
          sudo service elasticsearch restart
        else
          curl -s -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.2.0-amd64.deb
          sudo dpkg -i --force-confnew elasticsearch-7.2.0-amd64.deb
          sudo sed -i.old 's/-Xms1g/-Xms128m/' /etc/elasticsearch/jvm.options
          sudo sed -i.old 's/-Xmx1g/-Xmx128m/' /etc/elasticsearch/jvm.options
          echo -e '-XX:+DisableExplicitGC\n-Djdk.io.permissionsUseCanonicalPath=true\n-Dlog4j.skipJansi=true\n-server\n' | sudo tee -a /etc/elasticsearch/jvm.options
          sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
          sudo systemctl start elasticsearch
        fi

    - name: Wait for services to start
      run: sleep 20

    - name: Run flake8
      run: flake8 .

    - name: Set up MySQL databases
      run: |
        mysqladmin -u root create test_sh
        mysqladmin -u root create test_projects
        mysql -u root test_projects < tests/test_projects.sql

    - name: Run tests
      run: |
        cd tests
        coverage run --source=grimoire_elk run_tests.py

    - name: Upload coverage to Coveralls
      if: success()
      run: coveralls
```