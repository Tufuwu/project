```yaml
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-18.04
    if: github.event_name != 'push' || github.ref != 'refs/heads/master'
    services:
      xvfb:
        image: selenium/standalone-chrome
        options: >-
          --shm-size 2g
    env:
      SELENIUM_WEBDRIVER: default
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          python-version: 3.6.7
      - name: Install dependencies
        run: |
          pip install -U setuptools
          pip install codecov
          pip install pytest-cov
          pip install pipenv
          pipenv install --dev --system
          pip install -U rapid-router
          pip install -U --pre aimmo
      - name: Set up ChromeDriver
        run: |
          wget https://chromedriver.storage.googleapis.com/86.0.4240.22/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip -d ${{ runner.tool_cache }}/python/3.6.7/x64/bin/
          google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost &
      - name: Collect static files
        run: python example_project/manage.py collectstatic --noinput --settings test_settings
      - name: Run tests
        run: SELENIUM_HEADLESS=True pytest --cov=. --cov-report=xml
      - name: Upload coverage to Codecov
        run: codecov

  deploy:
    runs-on: ubuntu-18.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          python-version: 3.6.7
      - name: Install dependencies
        run: |
          pip install python-semantic-release==4.*
          pip install twine
      - name: Configure Git
        run: |
          git config --global user.name "semantic-release (via GitHub Actions)"
          git config --global user.email "semantic-release@github"
      - name: Publish with semantic-release
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: semantic-release publish
      - name: Build and upload PyPi packages
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pushd cfl_common
          python setup.py sdist bdist_wheel
          twine upload --skip-existing --username $PYPI_USERNAME --password $PYPI_PASSWORD dist/*
          popd
      - name: Trigger SemaphoreCI build
        env:
          SEMAPHORE_PROJECT_ID: ${{ secrets.SEMAPHORE_PROJECT_ID }}
          SEMAPHORE_API_AUTH: ${{ secrets.SEMAPHORE_API_AUTH }}
        run: curl -d POST -v https://semaphoreci.com/api/v1/projects/${SEMAPHORE_PROJECT_ID}/master/build?auth_token=${SEMAPHORE_API_AUTH}
```