```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ZOPE_INTERFACE_STRICT_IRO: 1
  TWINE_USERNAME: zope.wheelbuilder
  TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9, pypy2, pypy3]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install --upgrade coveralls coverage
          python -m pip install --upgrade -e ".[test]"
      - name: Run tests
        run: |
          which python
          python --version
          python -m coverage run -m unittest discover -s src
          python setup.py -q bdist_wheel
      - name: Upload coverage to Coveralls
        if: success()
        run: python -m coveralls

  documentation:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install dependencies
        run: pip install -U -e .[docs]
      - name: Build documentation
        run: |
          sphinx-build -b html -d docs/_build/doctrees docs docs/_build/html
          sphinx-build -b doctest -d docs/_build/doctrees docs docs/_build/doctest

  manylinux_wheels:
    runs-on: ubuntu-20.04
    services:
      docker:
        image: ${{ matrix.docker-image }}
        options: --privileged
    strategy:
      matrix:
        docker-image: [quay.io/pypa/manylinux2010_x86_64, quay.io/pypa/manylinux2010_i686, quay.io/pypa/manylinux2014_aarch64]
    steps:
      - uses: actions/checkout@v2
      - name: Pull Docker image
        run: docker pull ${{ matrix.docker-image }}
      - name: Build wheels
        run: bash .manylinux.sh

  macos_wheels:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [2.7.17, 3.5, 3.6.2, 3.7.0, 3.8.0, 3.9.0]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        run: |
          git clone https://github.com/MacPython/terryfy
          source terryfy/travis_tools.sh
          get_python_environment "macpython ${{ matrix.python-version }}" venv
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install --upgrade coveralls coverage
          python -m pip install --upgrade -e ".[test]"
      - name: Run tests
        run: |
          which python
          python --version
          python -m coverage run -m unittest discover -s src
          python setup.py -q bdist_wheel
      - name: Upload coverage to Coveralls
        if: success()
        run: python -m coveralls

  upload:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: [test, documentation, manylinux_wheels, macos_wheels]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Twine
        run: pip install twine
      - name: Check and upload wheels
        run: |
          twine check dist/*
          twine upload --skip-existing dist/*
          twine check wheelhouse/*
          twine upload --skip-existing wheelhouse/*
```