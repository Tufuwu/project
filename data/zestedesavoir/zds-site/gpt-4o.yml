```yaml
name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: ./scripts/install_zds.sh --answer-yes --detect-os-version --travis-output ${{ matrix.zds_test_job }}

      - name: Run script
        run: |
          source ./scripts/travis_header.sh
          source ./scripts/travis_run.sh
          ./scripts/travis_overview/travis_overview.sh --travis-output

  job1:
    runs-on: ubuntu-20.04
    needs: setup
    env:
      ZDS_TEST_JOB: "zds.tutorialv2"
    steps:
      - name: Run tests for Job 1
        run: echo "Running tests for $ZDS_TEST_JOB"

  job2:
    runs-on: ubuntu-20.04
    needs: setup
    env:
      ZDS_TEST_JOB: "zds.member zds.utils zds.forum zds.middlewares"
    steps:
      - name: Run tests for Job 2
        run: echo "Running tests for $ZDS_TEST_JOB"

  job3:
    runs-on: ubuntu-20.04
    needs: setup
    env:
      ZDS_TEST_JOB: "zds.mp zds.gallery zds.pages zds.featured zds.notification zds.searchv2"
    steps:
      - name: Run tests for Job 3
        run: echo "Running tests for $ZDS_TEST_JOB"

  job4:
    runs-on: ubuntu-20.04
    needs: setup
    env:
      ZDS_TEST_JOB: "front fixture selenium"
    steps:
      - name: Run tests for Job 4
        run: echo "Running tests for $ZDS_TEST_JOB"

  job5:
    runs-on: ubuntu-20.04
    needs: setup
    env:
      ZDS_TEST_JOB: "doc"
    steps:
      - name: Run tests for Job 5
        run: echo "Running tests for $ZDS_TEST_JOB"

  after_success:
    runs-on: ubuntu-20.04
    needs: [job1, job2, job3, job4, job5]
    steps:
      - name: Upload coverage
        if: ${{ env.ZDS_TEST_JOB != 'none' && !contains(env.ZDS_TEST_JOB, 'ci_turbo') }}
        run: coveralls

      - name: Upload documentation to GitHub Pages
        if: ${{ env.ZDS_TEST_JOB == 'doc' && github.ref == 'refs/heads/dev' }}
        run: |
          echo -e "machine github.com login $BOT_LOGIN\n password $BOT_PASSWORD" > $HOME/.netrc
          git config --global url."https://".insteadOf git://
          git config --global user.name "Build bot"
          git config --global user.email "zestedesavoir@gmail.com"
          git config --global push.default simple
          ./scripts/push_doc.sh

services:
  memcached:
    image: memcached
    options: --entrypoint memcached

env:
  global:
    COVERALLS_PARALLEL: true
    secure: "azmDZZQZzf88zpbkYpLpxI66vpEVyv+kniW0QdWAt4qlys8P5OcO3VJBR5YT85vlvnjN9b6raWQAL1ymee0WmVdTmzXed8XjZv7t9QXVw7pfezxMKlEftVp/4Cu4wtvbew0ViZXNWV2hNXHzEqlhgnoIOq94i0UzZ7grMrI0xm0="

cache:
  paths:
    - ${{ runner.os }}-pip-
    - ${{ runner.os }}-yarn-
    - ${{ runner.os }}-npm-
    - $HOME/.local/share/fonts
    - $HOME/.texlive
    - $HOME/.cache/pip
    - $HOME/virtualenv/python3.7/bin
    - $HOME/build/zestedesavoir/zds-site/zdsenv
    - $HOME/.nvm
    - $HOME/node_modules
    - $HOME/build/zestedesavoir/zds-site/node_modules
    - $HOME/build/zestedesavoir/zds-site/zmd/node_modules
```