```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CONFIG_URL: https://raw.githubusercontent.com/ros-infrastructure/ros_buildfarm_config/production/index.yaml
  CONFIG2_URL: https://raw.githubusercontent.com/ros2/ros_buildfarm_config/ros2/index.yaml
  ROS_DISTRO_NAME: melodic
  ROS2_DISTRO_NAME: dashing
  OS_NAME: ubuntu
  OS_CODE_NAME: bionic
  OS_CODE_NAME2: bionic
  ARCH: amd64

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.5, 3.4, 2.7]
        job-type: [devel, doc, release, prerelease, external_prerelease, status_pages, rosdistro_audit]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          if [[ "${{ matrix.python-version }}" == "3.4" || "${{ matrix.python-version }}" == "2.7" ]]; then
            pip install pyparsing==2.4.7
          fi
          pip install -U importlib-metadata
          pip install colcon-core colcon-test-result
          python setup.py install

      - name: Prepare job
        run: |
          mkdir job && cd job
          ln -s .. ros_buildfarm

      - name: Run script
        run: |
          case "${{ matrix.job-type }}" in
            devel)
              generate_devel_script.py $CONFIG_URL $ROS_DISTRO_NAME default roscpp_core $OS_NAME $OS_CODE_NAME $ARCH > job.sh
              . /opt/ros/kinetic/setup.sh
              . job.sh -y
              ;;
            doc)
              generate_doc_script.py $CONFIG_URL $ROS_DISTRO_NAME default roscpp_core $OS_NAME $OS_CODE_NAME $ARCH > job.sh
              sh job.sh -y
              ;;
            release)
              generate_release_script.py $CONFIG_URL $ROS_DISTRO_NAME default rostime $OS_NAME $OS_CODE_NAME $ARCH > job.sh
              sh job.sh -y
              ;;
            prerelease)
              generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH roscpp_core --pkg roscpp --output-dir .
              . /opt/ros/kinetic/setup.sh
              . prerelease.sh -y
              ;;
            external_prerelease)
              git clone -b dummy_package https://github.com/ros-infrastructure/ros_buildfarm ws/src/ros_buildfarm
              generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH --output-dir .
              ./prerelease.sh -y
              ;;
            status_pages)
              build_blocked_releases_page.py $CONFIG_URL $ROS_DISTRO_NAME
              build_release_compare_page.py $CONFIG_URL kinetic melodic
              build_release_status_page.py $CONFIG_URL $ROS_DISTRO_NAME default
              build_repos_status_page.py $ROS_DISTRO_NAME http://packages.ros.org/ros-shadow-fixed/ubuntu http://packages.ros.org/ros/ubuntu --os-code-name-and-arch-tuples bionic:source bionic:amd64 bionic:arm64 bionic:armhf bionic:i386 --cache-dir ./debian_repo_cache --output-name melodic_bionic
              ;;
            rosdistro_audit)
              audit_rosdistro.py $CONFIG_URL $ROS_DISTRO_NAME --return-zero
              audit_rosdistro.py $CONFIG2_URL $ROS2_DISTRO_NAME --return-zero
              check_sync_criteria.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH
              check_sync_criteria.py $CONFIG2_URL $ROS2_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH
              ;;
          esac
```