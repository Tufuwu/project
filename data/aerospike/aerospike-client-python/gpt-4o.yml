```yaml
name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev python3-dev
        wget -O aerospike-server.tgz https://aerospike.com/download/server/latest/artifact/tgz
        tar xvzf aerospike-server.tgz
        cp -f .travis/aerospike.conf ./aerospike-server/share/etc
        cd aerospike-server
        sed -i -e 's/\${me}/"root"/' share/libexec/aerospike-start
        sed -i -e 's/set_shmall$/#set_shmall/' share/libexec/aerospike-start
        sed -i -e 's/set_shmmax$/#set_shmmax/' share/libexec/aerospike-start
        mkdir instance1
        mkdir instance2
        ./bin/aerospike init --home instance1 --instance 1 --service-port 3000
        ./bin/aerospike init --home instance2 --instance 2 --service-port 3010
        cd instance1
        ./bin/aerospike start
        ../../scripts/wait-for-node.sh var/log/aerospike.log
        cd ..
        cd instance2
        ./bin/aerospike start
        ../../scripts/wait-for-node.sh var/log/aerospike.log
        cd ../..

    - name: Run tests
      run: |
        python setup.py install
        cd test
        ./run -v

    - name: Notify Slack
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Notify HipChat
      if: always()
      run: |
        curl -X POST -H "Content-Type: application/json" \
        -d '{"color": "green", "message": "Build ${{ job.status }}", "notify": true, "message_format": "text"}' \
        "https://api.hipchat.com/v2/room/${{ secrets.HIPCHAT_ROOM_ID }}/notification?auth_token=${{ secrets.HIPCHAT_AUTH_TOKEN }}"

    - name: Send email notifications
      if: always()
      run: |
        echo "Build ${{ job.status }}" | mail -s "Build Notification" qe-notices@aerospike.com
        echo "Build ${{ job.status }}" | mail -s "Build Notification" qe-notices-clients@aerospike.com
```