```yaml
name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Run linters
        run: |
          poetry run tox -e black
          poetry run tox -e flake8
          poetry run tox -e yamllint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Run tests
        run: poetry run tox -e py36,py37,py38

  deploy-github:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install poetry
      - name: Build package
        run: |
          poetry version ${{ github.ref_name }}
          poetry build
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_AUTH_TOKEN }}

  deploy-pypi:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install poetry
      - name: Publish to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          echo Deploying the release to PyPI
          poetry version ${{ github.ref_name }}
          poetry publish --build -u __token__ -p $PYPI_TOKEN
```