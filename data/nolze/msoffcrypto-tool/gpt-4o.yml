```yaml
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9']
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install poetry codecov
          poetry install

      - name: Run tests
        run: poetry run coverage run -m pytest -v

      - name: Upload coverage to Codecov
        run: codecov

  deploy:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - name: Install Poetry
        run: pip install poetry

      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
        run: |
          poetry config pypi-token.pypi "${POETRY_PYPI_TOKEN_PYPI}"
          poetry publish --no-interaction --build
```