```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  flake8:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox codecov
      - name: Run flake8
        run: tox -e flake8
      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v2

  black:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox codecov
      - name: Run black
        run: tox -e black
      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v2

  mysql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox codecov
      - name: Set up MySQL
        run: |
          sleep 30
          mysql -u root -proot -e "DROP DATABASE IF EXISTS app; CREATE DATABASE app DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci"
          mysql -u root -proot -e "CREATE USER 'mysqluser'@'localhost' IDENTIFIED BY 'mysqluserpassword';"
          mysql -u root -proot -e "GRANT ALL ON app.* TO 'mysqluser'@'localhost';"
      - name: Run MySQL tests
        run: tox -e mysql
      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v2

  mssql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2017-CU8-ubuntu
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Password_123
        ports:
          - 1433:1433
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox codecov
      - name: Wait for MSSQL to start
        run: |
          sleep 60
          docker logs -t mssql
      - name: Run MSSQL tests
        run: tox -e mssql
      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v2
      - name: Print MSSQL logs on failure
        if: failure()
        run: docker logs -t mssql

  postgres:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox codecov
      - name: Set up PostgreSQL
        run: |
          sleep 15
          psql -U postgres -c "CREATE DATABASE app;"
          psql -U postgres -c "CREATE USER pguser WITH PASSWORD 'pguserpassword';"
      - name: Run PostgreSQL tests
        run: tox -e postgres
      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v2

  mongodb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox codecov
      - name: Run MongoDB tests
        run: tox -e mongodb
      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v2
```