```yaml
name: CI

on:
  push:
    branches:
      - master
      - staging
  pull_request:

jobs:
  build:
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        pip install codecov pytest-cov
        sudo mkdir -p /tmp/coverage
        sudo chmod a+w /tmp/coverage

    - name: Pull Docker image
      run: sudo docker pull crccheck/hello-world

    - name: Build and Migrate
      run: |
        make -j2 build
        docker-compose run --rm web python manage.py migrate
        docker-compose up -d

    - name: Run tests
      run: |
        docker-compose run --rm -v /tmp/coverage:/tmp/coverage web bash -c "COVERAGE_FILE=/tmp/coverage/.coverage.non-transactions pytest --cov-report= --cov=. -n 2"
        docker-compose run --rm -v /tmp/coverage:/tmp/coverage web bash -c "COVERAGE_FILE=/tmp/coverage/.coverage.transactions pytest --cov-report= --cov=. --transactions"

    - name: Combine coverage reports
      run: coverage combine /tmp/coverage/

    - name: Upload coverage to Codecov
      run: codecov

  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging'
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo $DOCKER_PASSWORD | docker login -u grandchallenge --password-stdin

    - name: Push Docker image
      run: make push
```