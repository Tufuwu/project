```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7.15, 3.7]
        plone-version: [4.3.x, 5.1.x, 5.2.x]
        exclude:
          - python-version: 3.7
            plone-version: 4.3.x
          - python-version: 3.7
            plone-version: 5.1.x

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache buildout
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/buildout-cache
        key: ${{ runner.os }}-buildout-${{ matrix.plone-version }}-${{ matrix.python-version }}
        restore-keys: |
          ${{ runner.os }}-buildout-

    - name: Install dependencies
      run: |
        mkdir -p $HOME/buildout-cache/{eggs,downloads}
        pip install -r requirements.txt

    - name: Buildout
      run: |
        sed -ie "s#plone-x.x.x.cfg#plone-${{ matrix.plone-version }}.cfg#" travis.cfg
        buildout -N -t 3 -c travis.cfg

    - name: Run black
      if: ${{ matrix.python-version == '3.7' }}
      run: |
        if [ -f "bin/black" ]; then bin/black src/ --check ; fi

    - name: Run code analysis
      run: bin/code-analysis

    - name: Run tests
      run: bin/test

    - name: Run test coverage
      run: bin/test-coverage

    - name: Coveralls
      if: ${{ matrix.python-version == '3.7' }}
      run: |
        pip install -q coveralls
        coveralls
```