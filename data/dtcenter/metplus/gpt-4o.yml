```yaml
name: CI

on:
  push:
    branches:
      - develop
      - main_
      - feature_
      - bugfix_
  pull_request:
    branches:
      - develop
      - main_
      - feature_
      - bugfix_

jobs:
  setup:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 25

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install Python packages
        run: |
          echo Installing ${{ env.PYTHON_PACKAGES }}
          pip install --upgrade pip
          pip install ${{ env.PYTHON_PACKAGES }}
          pip list

      - name: Print environment variables
        run: |
          echo ${{ env.CURRENT_BRANCH }}
          echo ${{ env.DOCKERHUB_TAG }}
          echo ${{ env.GITHUB_REPO_ORG }}
          echo ${{ github.repository }}
          echo ${{ github.workspace }}
          echo ${{ env.OWNER_BUILD_DIR }}

  documentation:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Documentation Packages
        run: |
          pip install sphinx_rtd_theme doc8

      - name: Run Documentation Checks
        run: |
          doc8 --ignore D001 docs/index.rst docs/Users_Guide/ docs/Contributors_Guide/

  docker_setup:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker Setup Packages
        run: |
          pip install bs4 python-dateutil

      - name: Update Data Volumes
        run: |
          ${{ github.workspace }}/ci/travis_jobs/docker_update_data_volumes.py

      - name: Get METplus Image
        run: |
          ${{ github.workspace }}/ci/travis_jobs/docker_setup.sh

  tests:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        test_name:
          - "Pytest Unit Tests"
          - "Use Case Tests - met_tool_wrapper"
          - "Use Case Tests - data_assimilation"
          - "Use Case Tests - cryosphere"
          - "Use Case Tests - convection_allowing_models"
          - "Use Case Tests - climate"
          - "Use Case Tests - medium_range 0-4"
          - "Use Case Tests - medium_range 5"
          - "Use Case Tests - medium_range 6+"
          - "Use Case Tests - precipitation"
          - "Use Case Tests - s2s, space_weather, tc_and_extra_tc"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run ${{ matrix.test_name }}
        run: |
          if [ "${{ matrix.test_name }}" == "Pytest Unit Tests" ]; then
            ${{ github.workspace }}/ci/travis_jobs/test_unit.sh
          elif [ "${{ matrix.test_name }}" == "Use Case Tests - cryosphere" ]; then
            timeout 30m ${{ github.workspace }}/ci/travis_jobs/run_use_cases.py cryosphere
          else
            ${{ github.workspace }}/ci/travis_jobs/run_use_cases.py $(echo "${{ matrix.test_name }}" | sed 's/Use Case Tests - //')
          fi

env:
  DO_GIT_CLONE: false
  CURRENT_BRANCH: ${{ github.event.pull_request.head.ref || github.ref_name }}
  GH_PAGES_DIR: ${{ runner.temp }}/gh-pages
  PYTHON_PACKAGES: "python-dateutil requests"
  OWNER_BUILD_DIR: ${{ github.workspace }}
  DOCKER_WORK_DIR: /metplus
  GITHUB_REPO_ORG: DTCenter
  DOCKERHUB_DEV_REPO: dtcenter/metplus-dev
  DOCKERHUB_MET_TAGNAME: develop
  DOCKER_DATA_DIR: /data
  DOCKERHUB_TAG: ${{ env.DOCKERHUB_DEV_REPO }}:${{ env.CURRENT_BRANCH }}
```