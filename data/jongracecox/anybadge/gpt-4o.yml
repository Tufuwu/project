```yaml
name: Python package

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11-dev']
        run-pre-commit: [0, 0, 1, 0, 0]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -U setuptools pip -r build-requirements.txt
    - name: Run pre-commit
      if: matrix.run-pre-commit == 1
      run: |
        pip install -U pre-commit==2.20.0
        pre-commit install
        pre-commit run --all
    - name: Build and test
      run: |
        python setup.py bdist_wheel
        pip install dist/anybadge*.whl
        mkdir tmp && cd tmp
        pytest --doctest-modules --cov=anybadge --cov-report html:htmlcov ../anybadge ../tests

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install -U setuptools pip -r build-requirements.txt
    - name: Update version
      run: |
        sed -i "s/^version = .*/version = __version__ = \"${GITHUB_REF##*/}\"/" anybadge/__init__.py
    - name: Build package
      run: |
        python setup.py sdist bdist_wheel
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        pip install twine
        twine upload dist/*
```