```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Set up Node.js 10
      uses: actions/setup-node@v2
      with:
        node-version: 10

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gdal-bin libgdal-dev postgresql-10-postgis-2.4
        sudo add-apt-repository -y ppa:timescale/timescaledb-ppa
        sudo apt-get update
        sudo apt-get install -y timescaledb-postgresql-10
        sudo bash -c "echo \"shared_preload_libraries = 'timescaledb'\" >>/etc/postgresql/10/main/postgresql.conf"
        sudo service postgresql restart
        CPLUS_INCLUDE_PATH=/usr/include/gdal C_INCLUDE_PATH=/usr/include/gdal pip install 'gdal==2.2.3'
        pip install psycopg2==2.7.4
        pip install codecov coverage
        wget -O chromedriver_version https://chromedriver.storage.googleapis.com/LATEST_RELEASE_`google-chrome --version|awk '{ print $3 }'|awk -F. '{ print $1 }'`
        wget https://chromedriver.storage.googleapis.com/`cat chromedriver_version`/chromedriver_linux64.zip
        sudo unzip chromedriver_linux64.zip -d /usr/local/bin
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install isort flake8 black
        npm install

    - name: Set up database
      run: |
        psql -U postgres -c "create extension postgis"
        psql -U postgres -c "create database openmeteo"
        cp enhydris_project/settings/travis.py enhydris_project/settings/local.py

    - name: Run tests
      env:
        SELENIUM_WEBDRIVER: headless
      run: |
        python manage.py makemigrations --check
        black --check .
        flake8 --max-line-length=88 .
        isort --check-only --diff .
        npm run lint
        coverage run --include="./*" --omit="*/tests/*","*/tests.py","*/migrations/*","./enhydris_project/*" manage.py test -v2
        npm run test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
```