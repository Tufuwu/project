language: python

stages:
  - tests
  - wheels
  - deploy

cache:
  - pip

jobs:
  include:
    ### Tests ###

    # bionic python3.5 Tarantool 1.10
    - stage: tests
      dist: bionic
      python: '3.5'
      os: linux
      sudo: required
      language: python
      before_install: ".ci/travis-before-install-${TRAVIS_OS_NAME}.sh"
      install: ".ci/travis-install.sh"
      script: ".ci/travis-tests.sh"
      env: BUILD=quicktests TARANTOOL_VERSION=1.10

    # bionic python3.6 Tarantool 1.10
    - stage: tests
      dist: bionic
      python: '3.6'
      os: linux
      sudo: required
      language: python
      before_install: ".ci/travis-before-install-${TRAVIS_OS_NAME}.sh"
      install: ".ci/travis-install.sh"
      script: ".ci/travis-tests.sh"
      env: BUILD=quicktests TARANTOOL_VERSION=1.10

    # bionic python3.7 Tarantool 1.10
    - stage: tests
      dist: bionic
      python: '3.7'
      os: linux
      sudo: required
      language: python
      before_install: ".ci/travis-before-install-${TRAVIS_OS_NAME}.sh"
      install: ".ci/travis-install.sh"
      script: ".ci/travis-tests.sh"
      env: BUILD=quicktests TARANTOOL_VERSION=1.10

    # focal python3.8 Tarantool 1.10
    - stage: tests
      dist: focal
      python: '3.8'
      os: linux
      sudo: required
      language: python
      before_install: ".ci/travis-before-install-${TRAVIS_OS_NAME}.sh"
      install: ".ci/travis-install.sh"
      script: ".ci/travis-tests.sh"
      env: BUILD=quicktests TARANTOOL_VERSION=1.10

    # focal python3.8 Tarantool 2x
    - stage: tests
      dist: focal
      python: '3.8'
      os: linux
      sudo: required
      language: python
      before_install: ".ci/travis-before-install-${TRAVIS_OS_NAME}.sh"
      install: ".ci/travis-install.sh"
      script: ".ci/travis-tests.sh"
      env: BUILD=quicktests TARANTOOL_VERSION=2.5

    # focal python3.9 Tarantool 1.10
    - stage: tests
      dist: focal
      python: '3.9'
      os: linux
      sudo: required
      language: python
      before_install: ".ci/travis-before-install-${TRAVIS_OS_NAME}.sh"
      install: ".ci/travis-install.sh"
      script: ".ci/travis-tests.sh"
      env: BUILD=quicktests TARANTOOL_VERSION=1.10

    # focal python3.9 Tarantool 2x
    - stage: tests
      dist: focal
      python: '3.9'
      os: linux
      sudo: required
      language: python
      before_install: ".ci/travis-before-install-${TRAVIS_OS_NAME}.sh"
      install: ".ci/travis-install.sh"
      script: ".ci/travis-tests.sh"
      env: BUILD=tests,coverage TARANTOOL_VERSION=2.5

    # osx

    - stage: tests
      os: osx
      osx_image: xcode12.2
      language: generic
      before_install: ".ci/travis-before-install-${TRAVIS_OS_NAME}.sh"
      install: ".ci/travis-install.sh"
      script: ".ci/travis-tests.sh"
      env: BUILD=quicktests PYTHON_VERSION=3.9.0 TARANTOOL_VERSION=1.10

    - stage: tests
      os: osx
      osx_image: xcode12.2
      language: generic
      before_install: ".ci/travis-before-install-${TRAVIS_OS_NAME}.sh"
      install: ".ci/travis-install.sh"
      script: ".ci/travis-tests.sh"
      env: BUILD=quicktests PYTHON_VERSION=3.9.0 TARANTOOL_VERSION=2_x

    ## Wheels ###

    - stage: wheels
      sudo: required
      services:
        - docker
      dist: xenial
      python: "3.8"

      env:
        - CIBW_BUILD="cp35-* cp36-* cp37-* cp38-* cp39-*"

      before_install:
        - if [ "${TRAVIS_TAG:-}" = "" ]; then exit 0; fi
        - echo "TRAVIS_BUILD_NUMBER=${TRAVIS_BUILD_NUMBER}"

      install:
        - pip3 install --upgrade cibuildwheel
        - touch .cibuildwheel

      script:
        - cibuildwheel --output-dir wheelhouse

      after_success:
        - pip install awscli
        - aws s3 sync wheelhouse s3://asynctnt/${TRAVIS_BUILD_NUMBER}

    - stage: wheels
      os: osx
      osx_image: xcode12.2
      language: generic

      env:
        - CIBW_BUILD="cp35-* cp36-* cp37-* cp38-* cp39-*"

      before_install:
        - if [ "${TRAVIS_TAG:-}" = "" ]; then exit 0; fi
        - echo "TRAVIS_BUILD_NUMBER=${TRAVIS_BUILD_NUMBER}"

      install:
        - pip3 install --upgrade cibuildwheel
        - touch .cibuildwheel

      script:
        - cibuildwheel --output-dir wheelhouse

      after_success:
        - pip install awscli
        - aws s3 sync wheelhouse s3://asynctnt/${TRAVIS_BUILD_NUMBER}

    - stage: wheels
      os: windows
      language: shell

      env:
        - CIBW_BUILD="cp36-* cp37-* cp38-* cp39-*"

      before_install:
        - if [ "${TRAVIS_TAG:-}" = "" ]; then exit 0; fi
        - echo "TRAVIS_BUILD_NUMBER=${TRAVIS_BUILD_NUMBER}"

      install:
        - choco install python --version 3.7.0
        - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"
        - pip3 install --upgrade cibuildwheel
        - touch .cibuildwheel

      script:
        - cibuildwheel --output-dir wheelhouse

      after_success:
        - pip install awscli
        - aws s3 sync wheelhouse s3://asynctnt/${TRAVIS_BUILD_NUMBER}

    ### Deploy ###

    - stage: deploy
      sudo: false
      dist: xenial
      python: "3.8"
      addons:
        apt: {packages: [tree, pandoc]}

      before_install:
        - if [ "${TRAVIS_TAG:-}" = "" ]; then exit 0; fi
        - echo "TRAVIS_BUILD_NUMBER=${TRAVIS_BUILD_NUMBER}"

      install:
        - mkdir -p wheelhouse
        - pip install --upgrade pip setuptools awscli twine pypandoc
        - aws s3 sync s3://asynctnt/${TRAVIS_BUILD_NUMBER} wheelhouse

      script:
        - python setup.py sdist
        - tree wheelhouse
        - tree dist
        - twine upload dist/* && twine upload wheelhouse/*

      after_success:
        - aws s3 rm --recursive s3://asynctnt/$TRAVIS_BUILD_NUMBER # clean up

      deploy:
        - provider: releases
          skip_cleanup: true
          api_key:
            secure: 10qOBRZ6duGCBw2SXJbJLxkBhfPKnnwvGmS6tBS59BixqjWJOhEAMHws+GQxmNY6rYiGMFKCzMLB7lJwZfycf2oD110qcoubjM4Unrc/iRZeWXazyzbm4zL4m9Ubfdbc6TI59CSTCVeeK6g7EWewDs+5VkTbCZCteim9L5dD8iG+i3w+0F9yE/m3iZTZBCIKkZEpofijc3FHjly1bZ8CLJLEVya8wzMjZuHdQimam9ur/Hn27M96uNyHgqlk8V9jbchdHfMhy6pKmTbXGNk4CcgRr2Uy0vX3pRFYrV5Y9tVL5q7BnKmn6nQgIC79OGKQysWP7zal8UgE66qwsrGVLBUsj8ij7hw/apdZ0Wg+0fkdQqPghsoGSO9n2VCn2hPd/dolc2seceFuy7znvpYyoE++ysXWGaU4ExfUvJmNRR+35nRvJqncpaOAQcAXAQ59sy0bc4I0K/sjL4DgIkiKnhF13yMF3fqsfu2oYBk6UUlF13AdOaizDwqGZ/KO5OlozCG2naQocaSg5L/DXLFgcKNmUg60vixrnMW0rnGAS64JkGBHqASp+J6xSv7h1tA9Az0CLmKFqEaPr9vt0nfxYFI/GNRzIvYGv5bznDtLek0dsHkKZXIyZW/9w+zyp6ja9F1Q22Xr0wHolnqtYAJa1EcoUAfxyByLu6N1TsWXihU=
          file_glob: true
          file: dist/asynctnt*.tar.gz
          on:
            repo: igorcoding/asynctnt
            tags: true

    - stage: deploy
      os: linux
      dist: xenial
      sudo: false
      language: python
      python: '3.8'
      script:
        - pip install -r docs/requirements.txt
        - make docs
      deploy:
        provider: pages
        local-dir: docs/_build/html
        skip-cleanup: true
        github-token: $GITHUB_TOKEN
        keep-history: true
        verbose: true
        on:
          branch: master
