```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fence_test_tmp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        curl -sSL https://install.python-poetry.org | python -
        export PATH="$HOME/.local/bin:$PATH"
        poetry install --all-extras -vv --no-interaction

    - name: Configure PostgreSQL
      run: |
        sudo cp travis/postgresql.conf /etc/postgresql/13/main/postgresql.conf
        sudo cp travis/pg_hba.conf /etc/postgresql/13/main/pg_hba.conf
        sudo pg_ctlcluster 13 main restart
        psql -c 'SELECT version();' -U postgres

    - name: Prepare test database
      run: |
        psql -U postgres -c "create database fence_test_tmp"

    - name: Generate test keys
      run: |
        mkdir -p tests/resources/keys
        cd tests/resources/keys
        openssl genrsa -out test_private_key.pem 2048
        openssl rsa -in test_private_key.pem -pubout -out test_public_key.pem
        openssl genrsa -out test_private_key_2.pem 2048
        openssl rsa -in test_private_key_2.pem -pubout -out test_public_key_2.pem
        cd -

    - name: Run tests
      run: |
        poetry run pytest -vv --cov=fence --cov=migrations/versions --cov-report xml tests

    - name: Upload coverage to Codacy
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      run: python-codacy-coverage -r coverage.xml

    - name: Upload coverage to Coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: coveralls
```