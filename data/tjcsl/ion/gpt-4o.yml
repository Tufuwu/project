```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.6', '3.7']
    services:
      postgres:
        image: postgres:10
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: ion
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y rabbitmq-server
        npm install sass
        pip install -U pip setuptools
        pip install -U -r requirements.txt
        pip install -U coveralls flake8 pylint pylint-django pylint-plugin-utils codacy-coverage isort black autopep8

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '11'

    - name: Prepare environment
      run: |
        cp intranet/settings/travis_secret.py intranet/settings/secret.py
        sudo systemctl start rabbitmq-server
        psql -U postgres -c 'create database ion'
        ./scripts/build_ensure_no_changes.sh ./scripts/build_sources.sh
        ./scripts/validate-commit-messages.py ${{ github.event.before }}..${{ github.sha }}

    - name: Lint and Test
      run: |
        if [ "${{ matrix.python-version }}" == "3.7" ]; then
          flake8 --max-line-length 150 --exclude=*/migrations/* .
        fi
        if [ "${{ matrix.python-version }}" == "3.6" ]; then
          pylint --jobs=0 --disable=fixme,broad-except,global-statement,attribute-defined-outside-init,cyclic-import intranet/
        fi
        coverage run ./setup.py test
        coverage run -a ./manage.py migrate
        ./manage.py collectstatic --noinput -v 0
        ./scripts/build_ensure_no_changes.sh ./scripts/build_docs.sh
        ./scripts/build_ensure_no_changes.sh ./scripts/format.sh
        ./scripts/build_ensure_no_changes.sh ./scripts/static_templates_format.sh
        isort --check --recursive intranet

    - name: After Success
      if: success()
      run: |
        ./scripts/push_docs.sh
        coverage xml
        python-codacy-coverage -r coverage.xml
        coveralls

    - name: Notifications
      if: failure()
      run: |
        echo "Sending notifications..."
        # Add your notification logic here
```