```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
        include:
          - os: ubuntu-latest
            python-version: 3.7
            env: TOXENV='py37-test'
            name: "Python 3.7 with minimal dependencies"
          - os: ubuntu-latest
            python-version: 3.7
            env: TOXENV='py37-test-all'
            name: "Python 3.7 with all dependencies (except CASA)"
          - os: ubuntu-latest
            python-version: 3.6
            env: TOXENV='py36-test-casa'
            name: "Python 3.6 with minimal dependencies and CASA"
          - os: ubuntu-latest
            python-version: 3.6
            env: TOXENV='py36-test-casa-dev'
            name: "Python 3.6, CASA, and dev versions of key dependencies"
          - os: ubuntu-latest
            python-version: 3.8
            env: TOXENV='py38-test-all-dev'
            name: "Python 3.8, all dependencies, and dev versions of key dependencies"
          - os: macos-latest
            python-version: 3.7
            env: TOXENV='py37-test-all'
            name: "Python 3.7 with all dependencies (except CASA) on MacOS X"
          - os: windows-latest
            python-version: 3.7
            env: TOXENV='py37-test-all-dev'
            name: "Python 3.7, all dependencies, and dev versions of key dependencies on Windows"
          - os: ubuntu-latest
            python-version: 3.8
            env: TOXENV='build_docs'
            name: "Documentation"

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        if [[ ${{ matrix.os }} == 'ubuntu-latest' ]]; then
          sudo apt-get update
          sudo apt-get install -y graphviz libgfortran3
        fi
        pip install tox

    - name: Run tests
      run: tox $TOXARGS -- $TOXPOSARGS

    - name: Upload coverage to Coveralls
      if: success()
      run: |
        pip install coveralls coverage
        coverage combine .tmp/*/.coverage
        coverage report
        coveralls
```