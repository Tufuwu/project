```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7, 3.6]
        firefox-version: [nightly, dev, beta, release, esr]
    env:
      GECKODRIVER_VERSION: 0.24.0
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jwm
        pip install tox
    - name: Set up Firefox ${{ matrix.firefox-version }}
      run: |
        if [ "${{ matrix.firefox-version }}" == "nightly" ]; then
          sudo apt-get install -y firefox
        elif [ "${{ matrix.firefox-version }}" == "dev" ]; then
          sudo apt-get install -y firefox
        elif [ "${{ matrix.firefox-version }}" == "beta" ]; then
          sudo apt-get install -y firefox
        elif [ "${{ matrix.firefox-version }}" == "release" ]; then
          sudo apt-get install -y firefox
        elif [ "${{ matrix.firefox-version }}" == "esr" ]; then
          sudo apt-get install -y firefox
        fi
    - name: Download Geckodriver
      run: |
        wget -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v${GECKODRIVER_VERSION}/geckodriver-v${GECKODRIVER_VERSION}-linux64.tar.gz
        mkdir $HOME/geckodriver && tar xvf /tmp/geckodriver.tar.gz -C $HOME/geckodriver
        echo "$HOME/geckodriver" >> $GITHUB_PATH
    - name: Check Firefox and Geckodriver versions
      run: |
        firefox --version
        geckodriver --version
    - name: Run Tox
      run: tox

  flake8:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: pip install tox
    - name: Run flake8
      run: tox -e flake8

  docs:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: pip install tox
    - name: Build docs
      run: tox -e docs

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/tags/*'
    steps:
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Deploy to PyPI
      env:
        TWINE_USERNAME: davehunt
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        python setup.py sdist bdist_wheel
        twine upload dist/*
```