```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  python36-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -r requirements/console-dev.txt
          pip install -e .
      - name: Run tests
        run: |
          coverage run -m pytest tests && mv .coverage .coverage.core
          coverage combine
          pip install coveralls
          coveralls

  python3-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get install -y x11-utils libxkbcommon-x11-0
          pip install -r requirements/console-dev.txt
          pip install -e .
      - name: Run tests
        run: |
          coverage run -m pytest tests && mv .coverage .coverage.core
          coverage run gui/build.py test && mv .coverage .coverage.gui
          coverage combine
          pip install coveralls
          coveralls
          python3 gui/build.py bundle
          ls -alh gui/mozregression-gui.tar.gz

  gui-macosx:
    runs-on: macos-10.13
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python3 --version
          pip install -U pip virtualenv
          virtualenv -p python3 venv
          source venv/bin/activate
      - name: Run tests
        run: |
          coverage run -m pytest tests && mv .coverage .coverage.core
          coverage run gui/build.py test && mv .coverage .coverage.gui
          coverage combine
          pip install coveralls
          coveralls
          python3 gui/build.py bundle
          ls -alh gui/dist/mozregression-gui.dmg

  linters:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run linters
        run: |
          ./bin/lint-check.sh || (echo "Lint fix results:" && ./bin/lint-fix.sh && git diff && false)
          bin/update-glean-documentation.sh
          if [[ $(git diff docs/glean | head -c1 | wc -c) -ne 0 ]]; then echo "Unexpected glean changes! Please regenerate glean documentation via `./bin/update-glean-documentation.sh`." && false; fi

  deploy:
    runs-on: ubuntu-latest
    needs: [python36-linux, python3-linux, gui-macosx, linters]
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v2
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: gui/mozregression-gui.tar.gz
          asset_name: mozregression-gui.tar.gz
          asset_content_type: application/gzip
      - name: Upload Release Asset (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: gui/dist/mozregression-gui.dmg
          asset_name: mozregression-gui.dmg
          asset_content_type: application/x-apple-diskimage
```