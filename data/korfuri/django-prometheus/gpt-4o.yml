```yaml
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-20.04
    services:
      memcached:
        image: memcached
        ports:
          - 11211:11211
      redis:
        image: redis
        ports:
          - 6379:6379
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      postgres:
        image: postgres:9.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgis
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-9.5-postgis-2.4 gdal-bin
        pip install tox-travis coverage coveralls codacy-coverage

    - name: Prepare databases
      run: |
        mysql -h 127.0.0.1 -e 'create database django_prometheus_1;'
        psql -h 127.0.0.1 -U postgres -c 'CREATE DATABASE postgis'
        psql -h 127.0.0.1 -U postgres postgis -c 'CREATE EXTENSION IF NOT EXISTS postgis;'

    - name: Run tests
      run: tox

    - name: Coverage and reporting
      if: success()
      run: |
        coverage combine .coverage django_prometheus/tests/end2end/.coverage
        coveralls
        coverage xml
        python-codacy-coverage -r coverage.xml

  deploy:
    runs-on: ubuntu-20.04
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: pip install tox-travis

    - name: Prepare for deployment
      run: |
        git fetch --unshallow
        python update_version_from_git.py

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python -m pip install --upgrade twine
        python setup.py sdist bdist_wheel
        twine upload --skip-existing dist/*
```