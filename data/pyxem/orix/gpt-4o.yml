```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.7, 3.6]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Miniconda
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: |
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-${{ runner.os == 'Linux' && 'Linux' || 'MacOSX' }}-x86_64.sh -O miniconda.sh
        chmod +x miniconda.sh
        ./miniconda.sh -b -p $HOME/miniconda
        source $HOME/miniconda/bin/activate root

    - name: Install Miniconda on Windows
      if: runner.os == 'Windows'
      run: |
        choco install -y miniconda3 openssl.light
        echo "C:\tools\miniconda3" >> $GITHUB_PATH
        echo "C:\tools\miniconda3\Scripts" >> $GITHUB_PATH

    - name: Update Conda
      run: conda update -y conda

    - name: Configure Conda
      run: conda config --append channels conda-forge

    - name: Create Conda Environment
      run: conda create -n testenv --yes python=${{ matrix.python-version }}

    - name: Activate Conda Environment
      shell: bash -l {0}
      run: |
        if [ $RUNNER_OS == 'Windows' ]; then
          . activate testenv
        else
          conda activate testenv
        fi

    - name: Install Dependencies
      run: conda install -y pytest>=5.0 pytest-cov>=2.8.1 coveralls>=1.10 coverage>=5.0

    - name: Install Package
      run: pip install .

    - name: Run Tests
      env:
        MPLBACKEND: Agg
      run: pytest --cov=orix

    - name: Coveralls
      run: coveralls
```