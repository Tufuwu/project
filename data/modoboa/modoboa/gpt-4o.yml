```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7', '3.8']
        db: ['POSTGRESQL', 'MYSQL']

    env:
      PYTHONWARNINGS: "default,ignore::PendingDeprecationWarning,ignore::ResourceWarning"

    services:
      postgres:
        image: postgres:9.6
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:5.5
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ldap-utils postfix slapd librrd-dev rrdtool
        pip install codecov
        pip install -r requirements.txt
        pip install -r ldap-requirements.txt
        pip install -r test-requirements.txt
        if [ "${{ matrix.db }}" == "POSTGRESQL" ]; then pip install -r postgresql-requirements.txt; fi
        if [ "${{ matrix.db }}" == "MYSQL" ]; then pip install -r mysql-requirements.txt; fi
        python setup.py develop

    - name: Set up LDAP
      run: |
        mkdir /tmp/slapd
        slapd -f test_data/slapd.conf -h ldap://localhost:3389 &
        sleep 3
        ldapadd -h localhost:3389 -D cn=admin,dc=example,dc=com -w test -f test_data/base.ldif

    - name: Run tests
      run: |
        python ./tests.py
        cd test_project
        coverage run manage.py test modoboa.core modoboa.lib modoboa.admin modoboa.limits modoboa.transport modoboa.relaydomains modoboa.dnstools modoboa.ldapsync modoboa.policyd modoboa.maillog

    - name: Coverage report
      run: |
        coverage combine
        coverage report
        codecov

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref_type == 'tag' && matrix.python-version == '3.8' && matrix.db == 'POSTGRESQL'
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r ldap-requirements.txt
        pip install -r test-requirements.txt
        pip install -r postgresql-requirements.txt
        python setup.py develop

    - name: Compile messages
      run: |
        cd modoboa
        django-admin compilemessages
        cd ..

    - name: Deploy to PyPI
      env:
        TWINE_USERNAME: tonio
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        python setup.py sdist bdist_wheel
        twine upload dist/*
```