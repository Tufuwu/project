```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.5", "3.6", "3.7"]
        db: ["POSTGRESQL", "MYSQL"]

    services:
      postgres:
        image: postgres:9.6
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:5.5
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip install codecov
        pip install -e git+https://github.com/modoboa/modoboa.git#egg=modoboa
        pip install -r requirements.txt
        pip install -r test-requirements.txt
        python setup.py develop

    - name: Run tests
      env:
        PYTHONWARNINGS: "default,ignore::PendingDeprecationWarning,ignore::ResourceWarning"
      run: |
        cd test_project
        coverage run --source ../modoboa_amavis manage.py test modoboa_amavis

    - name: Upload coverage to Codecov
      run: codecov

  deploy:
    if: github.ref_type == 'tag' && matrix.python-version == '3.7' && matrix.db == 'POSTGRESQL'
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r test-requirements.txt
        python setup.py develop

    - name: Compile messages
      run: |
        cd modoboa_amavis
        django-admin compilemessages
        cd ..

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: tonio
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        python setup.py sdist bdist_wheel
        twine upload dist/*
```