```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7']
        db: [postgresql, mysql]
    env:
      PYTHONWARNINGS: "default,ignore::PendingDeprecationWarning,ignore::ResourceWarning"
    services:
      postgres:
        image: postgres:9.6
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:5.5
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install codecov
          pip install -e git+https://github.com/modoboa/modoboa.git@1.x#egg=modoboa
          pip install -r requirements.txt
          pip install -r test-requirements.txt
          python setup.py develop

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm prune
          npm install

      - name: Run tests
        run: |
          cd frontend
          npm run test:unit
          cd ../test_project
          coverage run --source ../modoboa_contacts manage.py test modoboa_contacts

      - name: Upload coverage to Codecov
        run: |
          cd ../frontend
          codecov
          cd ../test_project
          codecov

  deploy:
    if: github.ref_type == 'tag' && matrix.python-version == '3.7' && matrix.db == 'postgresql'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r test-requirements.txt
          python setup.py develop

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Compile messages
        run: |
          cd modoboa_contacts
          django-admin compilemessages

      - name: Deploy to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: tonio
          password: ${{ secrets.PYPI_PASSWORD }}
          skip_existing: true
```