```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libltdl7-dev libgsl0-dev libncurses5-dev libreadline6-dev pkg-config python-all-dev python-matplotlib python-numpy python-scipy openjdk-8-jre
          wget http://www.antlr.org/download/antlr-4.8-complete.jar
          echo '#!/bin/bash' > antlr4
          echo 'java -cp "`pwd`/antlr-4.8-complete.jar:$CLASSPATH" org.antlr.v4.Tool "$@"' >> antlr4
          chmod +x antlr4
          export PATH=$PATH:`pwd`
          pip install --upgrade pip pytest
          pip install -r requirements.txt
          pip uninstall --yes sympy
          pip install sympy==1.4
          pip install pycodestyle
          pip uninstall --yes odetoolbox
          pip install git+https://github.com/nest/ode-toolbox.git
          export PYTHONPATH=$PYTHONPATH:`pwd`
          python setup.py install
          cd $GITHUB_WORKSPACE
          find pynestml/generated -not -name __init__.py -a -not -name generated -delete
          cd pynestml/grammars
          ./generate_lexer_parser
          cd ../..

  pycodestyle:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run pycodestyle
        run: |
          python3 extras/codeanalysis/check_copyright_headers.py
          python3 -m pycodestyle $GITHUB_WORKSPACE -v --ignore=E241,E501,E303,E714,E713,E714,E252,W503 --exclude=$GITHUB_WORKSPACE/doc,$GITHUB_WORKSPACE/.git,$GITHUB_WORKSPACE/NESTML.egg-info,$GITHUB_WORKSPACE/pynestml/generated,$GITHUB_WORKSPACE/extras,$GITHUB_WORKSPACE/build

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests
        run: pytest -s -o norecursedirs='*' -o log_cli=true -o log_cli_level="DEBUG" tests

  integration:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install nest-simulator
        run: |
          pip install cython
          git clone --depth=1 https://github.com/nest/nest-simulator
          mkdir nest_install
          cd nest_install
          export PYTHON_INCLUDE_DIR=`python3 -c "from sysconfig import get_paths; info = get_paths(); print(info['include'])"`
          export PYTHON_LIB_DIR=`find /usr/lib/x86_64-linux-gnu -name "libpython3*.so"`
          cmake -DCMAKE_INSTALL_PREFIX=~/nest_install -DPYTHON_LIBRARY=$PYTHON_LIB_DIR -DPYTHON_INCLUDE_DIR=$PYTHON_INCLUDE_DIR ~/nest-simulator
          make && make install
          cd $GITHUB_WORKSPACE
          export PYTHONPATH=$PYTHONPATH:/home/runner/virtualenv/python3.6/lib/python3.6/site-packages
          python setup.py install

      - name: Run integration tests
        run: |
          nestml --input_path models --target_path target --suffix _nestml --logging_level INFO --module_name nestml_allmodels_module
          cd target
          cmake -Dwith-nest=/home/runner/nest_install/bin/nest-config .
          make && make install
          cd ..
          export PYNESTKERNEL_LOCATION=`find /home/runner/nest_install/lib -name pynestkernel.so`
          export PYNESTKERNEL_LOCATION=`dirname $PYNESTKERNEL_LOCATION`
          export PYNESTKERNEL_LOCATION=`dirname $PYNESTKERNEL_LOCATION`
          export PYTHONPATH=$PYTHONPATH:$PYNESTKERNEL_LOCATION
          rc=0
          for fn in $GITHUB_WORKSPACE/tests/nest_tests/*.py; do
              pytest -s -o log_cli=true -o log_cli_level="DEBUG" ${fn} || rc=1
          done;
          exit $rc
```