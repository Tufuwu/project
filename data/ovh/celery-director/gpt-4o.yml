```yaml
name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8"]
        db: [sqlite, postgres]

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DIRECTOR_HOME: ${{ github.workspace }}/tests/workflows/
      DIRECTOR_DATABASE_URI: ${{ matrix.db == 'sqlite' && 'sqlite:////tmp/tests.db' || 'postgresql://localhost:5432/tests' }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install black==20.8b1
        pip install pytest==5.3.5
        pip install mkdocs==1.0.4
        pip install mkdocs-material==4.6.3
        python setup.py install

    - name: Run linters and build docs
      run: |
        black --check director
        (cd docs && mkdocs build)

    - name: Prepare database
      if: matrix.db == 'postgres'
      run: |
        psql -c 'DROP DATABASE IF EXISTS tests;' -U postgres
        psql -c 'CREATE DATABASE tests;' -U postgres

    - name: Run tests
      run: |
        director celery worker -P solo > /dev/null 2>&1 &
        sleep 5
        pytest tests/ -v
```