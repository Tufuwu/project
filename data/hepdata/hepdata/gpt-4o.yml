```yaml
name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:9.6
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
        options: >-
          --health-cmd "curl -fsSL http://localhost:9200/_cat/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: "-Xms256m -Xmx256m"
        ports:
          - 9200:9200

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Install dependencies
      run: |
        pip install --upgrade pip setuptools py
        pip install twine wheel coveralls requirements-builder
        pip install --force-reinstall -r requirements.txt
        pip install -e .[tests]
        hepdata db init
        hepdata db create
        hepdata utils reindex -rc True
        npm update && npm install --silent -g node-sass@4.14.1 clean-css@3.4.28 uglify-js requirejs
        hepdata npm
        cd ${{ runner.virtualenv }}/var/hepdata-instance/static/
        npm install
        hepdata collect
        hepdata assets build
        cd $GITHUB_WORKSPACE

    - name: Set up PostgreSQL
      run: |
        psql -c "CREATE USER hepdata WITH CREATEDB PASSWORD 'hepdata';" -U postgres
        psql -c 'CREATE DATABASE hepdata_test OWNER hepdata;' -U postgres

    - name: Copy config
      run: cp $GITHUB_WORKSPACE/hepdata/config_local.travis.py $GITHUB_WORKSPACE/hepdata/config_local.py

    - name: Run tests
      env:
        SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
        SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
      run: |
        if [[ -z ${SAUCE_USERNAME} || -z ${SAUCE_ACCESS_KEY} ]]; then
          pytest tests -k 'not tests/e2e'
        else
          pytest tests
        fi
        rm $GITHUB_WORKSPACE/hepdata/{config_local.py,__pycache__/config_local*}

    - name: Coveralls
      if: success()
      run: coveralls

    - name: Deploy
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
      run: ./build-and-deploy.sh
```