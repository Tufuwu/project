```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04]
        python-version: [2.7, 3.4, 3.5, 3.6, 3.7]
        arch: [amd64, s390x]
        include:
          - os: ubuntu-16.04
            python-version: 2.7
            arch: amd64
          - os: ubuntu-16.04
            python-version: 3.4
            arch: amd64
          - os: ubuntu-16.04
            python-version: 3.5
            arch: amd64
          - os: ubuntu-16.04
            python-version: 3.6
            arch: amd64
          - os: ubuntu-16.04
            python-version: 3.7
            arch: amd64
          - os: ubuntu-18.04
            python-version: 2.7
            arch: amd64
          - os: ubuntu-18.04
            python-version: 3.5
            arch: amd64
          - os: ubuntu-18.04
            python-version: 3.6
            arch: amd64
          - os: ubuntu-18.04
            python-version: 3.7
            arch: amd64
          - os: ubuntu-18.04
            python-version: 2.7
            arch: s390x
          - os: ubuntu-18.04
            python-version: 3.4
            arch: s390x
          - os: ubuntu-18.04
            python-version: 3.5
            arch: s390x
          - os: ubuntu-18.04
            python-version: 3.6
            arch: s390x
          - os: ubuntu-18.04
            python-version: 3.7
            arch: s390x

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake flake8 git-lfs libbz2-dev libcap-dev libcdio-utils util-linux zlib1g-dev
        if [ "${{ matrix.os }}" == "ubuntu-16.04" ]; then
          sudo apt-get install -y syslinux-utils
        fi
        git lfs pull
    - name: Build cdrkit
      run: |
        pushd vendor
        tar -xvf cdrkit-1.1.11-fedora29-patched.tar.gz
        pushd cdrkit-1.1.11
        mkdir build
        pushd build
        cmake ..
        make
        popd
        popd
        popd
    - name: Lint with flake8
      run: flake8 --ignore=E501,E266 pycdlib tools/*
    - name: Run tests
      run: |
        PATH=vendor/cdrkit-1.1.11/build/genisoimage:$PATH LD_LIBRARY_PATH=vendor/cdrkit-1.1.11/build/libusal/:vendor/cdrkit-1.1.11/build/librols:$LD_LIBRARY_PATH PYCDLIB_TRACK_WRITES=1 py.test --verbose tests
```