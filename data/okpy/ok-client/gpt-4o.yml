```yaml
name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.5", "3.6", "3.7", "3.8"]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          choco install python --version=${{ matrix.python-version }} --params "/InstallDir:C:\\Python"
          export PATH="/c/Python${{ matrix.python-version }}/:/c/Python${{ matrix.python-version }}/Scripts:$PATH"
          . scripts/windows-install.sh
        elif [ "${{ matrix.os }}" == "macos-latest" ]; then
          export PYV=${{ matrix.python-version }}
          . scripts/osx-install.sh
        fi
        pip install -r requirements.txt

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Run tests
      run: nosetests --with-coverage tests

  notifications:
    slack:
      if: failure()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
```