```yaml
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04
    services:
      discovery:
        image: your-docker-image
        options: --entrypoint /bin/bash
        ports:
          - 8000:8000

    strategy:
      matrix:
        toxenv: [django22, django30, test:quality]
        allow_failures:
          - toxenv: django30

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Cache bower components
      uses: actions/cache@v2
      with:
        path: course_discovery/static/bower_components
        key: ${{ runner.os }}-bower-${{ hashFiles('**/bower.json') }}

    - name: Before Install
      run: make travis_up

    - name: Install dependencies
      run: |
        docker exec -t discovery bash -c 'sed -i "s|http://archive|http://us.archive|g" /etc/apt/sources.list'
        docker exec -t discovery bash -c 'apt update && apt install -y --no-install-recommends firefox gettext'
        docker exec -t discovery bash -c 'sed -i "s/course_discovery.settings.devstack/course_discovery.settings.test/" /edx/app/discovery/discovery_env'
        docker exec -e TOXENV=${{ matrix.toxenv }} -t discovery bash -c 'source /edx/app/discovery/discovery_env && cd /edx/app/discovery/discovery/ && make requirements'

    - name: Run script
      run: |
        if [ "${{ matrix.toxenv }}" == "test:quality" ]; then
          docker exec -t discovery bash -c 'source /edx/app/discovery/discovery_env && cd /edx/app/discovery/discovery/ && make docs'
          docker exec -t discovery bash -c 'source /edx/app/discovery/discovery_env && cd /edx/app/discovery/discovery/ && make clean_static'
          docker exec -t discovery bash -c 'source /edx/app/discovery/discovery_env && cd /edx/app/discovery/discovery/ && make static'
          docker exec -t discovery bash -c 'source /edx/app/discovery/discovery_env && cd /edx/app/discovery/discovery/ && make quality'
          docker exec -t discovery bash -c 'source /edx/app/discovery/discovery_env && cd /edx/app/discovery/discovery/ && make check_keywords'
        else
          docker exec -t discovery bash -c 'source /edx/app/discovery/discovery_env && cd /edx/app/discovery/discovery/ && make clean_static'
          docker exec -t discovery bash -c 'source /edx/app/discovery/discovery_env && cd /edx/app/discovery/discovery/ && make static'
          docker exec -e TOXENV=${{ matrix.toxenv }} -t discovery bash -c 'source /edx/app/discovery/discovery_env && cd /edx/app/discovery/discovery/ && make test'
        fi

    - name: After success
      if: success()
      run: |
        pip install -U codecov
        docker exec -t discovery bash -c 'source /edx/app/discovery/discovery_env && cd /edx/app/discovery/discovery/ && coverage xml'
        codecov
```