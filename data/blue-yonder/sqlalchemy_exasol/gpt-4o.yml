```yaml
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [2.7, 3.6]
        include:
          - python-version: 2.7
            TESTDB: "exa+pyodbc://${{ secrets.EXAUID6 }}:${{ secrets.EXAPWD6 }}@${{ secrets.EXAHOST6 }}/TEST?CONNECTIONLCALL=en_US.UTF-8&DRIVER=EXAODBC"
            EXTRA_REQUIREMENTS: ""
          - python-version: 3.6
            TESTDB: "exa+turbodbc://${{ secrets.EXAUID6 }}:${{ secrets.EXAPWD6 }}@${{ secrets.EXAHOST6 }}/TEST?CONNECTIONLCALL=en_US.UTF-8&DRIVER=EXAODBC"
            EXTRA_REQUIREMENTS: "-r requirements_extras.txt"

    env:
      ODBCSYSINI: ${{ github.workspace }}/odbcconfig

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev python-dev unixodbc unixodbc-dev libboost-date-time-dev libboost-locale-dev libboost-system-dev
        pip install -r requirements.txt
        pip install -r requirements_test.txt ${{ matrix.EXTRA_REQUIREMENTS }}
        pip freeze
        pip install coveralls

    - name: Configure ODBC
      run: echo DRIVER=${{ github.workspace }}/driver/libexaodbc-uo2214lv1.so >> odbcconfig/odbcinst.ini

    - name: Run tests
      run: py.test --dropfirst --cov-config=.coveragerc --cov=sqlalchemy_exasol --dburi "${{ matrix.TESTDB }}"

    - name: Coveralls
      if: success()
      run: coveralls

    - name: Revert ODBC config changes
      run: git checkout odbcconfig/odbcinst.ini

  deploy:
    runs-on: ubuntu-18.04
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push' && matrix.python-version == '3.6' && matrix.EXTRA_REQUIREMENTS != ''
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Install Twine
      run: |
        pip install twine
        pip install urllib3[secure]

    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
```