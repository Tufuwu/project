       packages: write
     steps:
       - uses: actions/checkout@v3
-      - run: sed -i -e "s#\${BUILD_SOURCEBRANCHNAME}#${{ github.ref_name }}#" -e "s/\${BUILD_DATE}/$(date --iso-8601=seconds)/" run.py
      - run: sed -i -e "s#\${BUILD_VERSION}#${{ github.ref_name }}#" -e "s/\${BUILD_DATE}/$(date --iso-8601=seconds)/" run.py
       - uses: docker/setup-qemu-action@v2
       - uses: docker/setup-buildx-action@v2
       - uses: docker/login-action@v2
@@ -52,7 +52,7 @@ jobs:
       url: https://pypi.org/project/ddns/
     steps:
       - uses: actions/checkout@v3
-      - run: sed -i -e "s#\${BUILD_SOURCEBRANCHNAME}#${{ github.ref_name }}#" -e "s/\${BUILD_DATE}/$(date --iso-8601=seconds)/" run.py
      - run: sed -i -e "s#\${BUILD_VERSION}#${{ github.ref_name }}#" -e "s/\${BUILD_DATE}/$(date --iso-8601=seconds)/" run.py
       - uses: actions/setup-python@v4
         with:
           python-version: "3.x"
@@ -66,3 +66,55 @@ jobs:
         with:
           password: ${{ secrets.PYPI_API_TOKEN }}
           print_hash: true

  publish-binary:
    strategy:
      # fail-fast: false
      matrix:
        os: [windows, macos, ubuntu]
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 8
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: pip install pyinstaller

      - name: Replace build version
        run: sed -i.tmp -e "s#\${BUILD_VERSION}#${{ github.ref_name }}#" -e "s/\${BUILD_DATE}/$(date --iso-8601=seconds)/" run.py && rm run.py.tmp
        shell: bash
      - name: Copy cert on ubuntu
        if: ${{ matrix.os == 'ubuntu' }}
        run: cp /etc/ssl/certs/ca-certificates.crt cert.pem && export SSL_CERT_FILE=${PWD}/cert.pem

      - run: pyinstaller --noconfirm --clean ./.build/ddns.spec
      - run: ./dist/ddns || test -e config.json
      - run: ./dist/ddns -h

      - uses: softprops/action-gh-release@v1
        with:
          draft: true
          generate_release_notes: false
          files: dist/

  github-release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment:
      name: publish
      url: https://github.com/NewFuture/DDNS/releases
    permissions:
      contents: write
    needs: [publish-docker, publish-pypi, publish-binary]
    steps:
      - uses: actions/checkout@v3
      - run: sed -i -e "s#\${BUILD_VERSION}#${{ github.ref_name }}#" .release/README.md
      - uses: softprops/action-gh-release@v1
        with:
          draft: false
          generate_release_notes: true
          files: |
            .release/*.sh
            .release/*.bat
