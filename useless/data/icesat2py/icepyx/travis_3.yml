language: python

before_install:
  - sudo apt-get update
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

install:
  - conda create --name icepyx-env --channel conda-forge python=3.10 proj geos
  - source activate icepyx-env
  - pip install -r requirements.txt -r requirements-dev.txt
  - pip install -e .[complete]

stages:
  - name: basic tests
    if: (type = pull_request) OR (type = push AND repo = icesat2py/icepyx AND branch IN (main, development))
  - name: behind Earthdata
    if: branch = main OR commit_message =~ nsidc_tests OR type = cron

#ultimately move basic tests list into a separate script with the list of files to run (then this can be put into a matrix and parallellized as well)
jobs:
  include:
    - stage: basic tests
      script: pytest icepyx/ --verbose --cov app --ignore=icepyx/tests/test_behind_NSIDC_API_login.py --ignore=icepyx/tests/test_auth.py
      # includes an integrity check of the uploader as recommended by CodeCov
      after_success:
        - curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step
        - curl -Os https://uploader.codecov.io/latest/linux/codecov
        - curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
        - curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
        - gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
        - shasum -a 256 -c codecov.SHA256SUM
        - chmod +x codecov
        - ./codecov -t ${CODECOV_TOKEN}
    - stage: behind Earthdata
      script:
        - export EARTHDATA_PASSWORD=$NSIDC_LOGIN
        - pytest icepyx/tests/test_behind_NSIDC_API_login.py icepyx/tests/test_auth.py
