language: node_js
node_js:
    - '21'

matrix:
    include:
        - os: osx
          osx_image: xcode11

        - os: linux
          dist: bionic
          env: CC=clang CXX=clang++ npm_config_clang=1
          compiler: clang
          sudo: required

addons:
    apt:
        packages:
            - libgnome-keyring-dev
            - icnsutils
            - graphicsmagick

env:
    global:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

cache:
    timeout: 1000
    directories:
        - node_modules
        - electron/node_modules
        - client/node_modules
        - $HOME/.electron
        - $HOME/.cache/electron
        - $HOME/.cache/electron-builder
        - $HOME/.npm/_prebuilds

before_script:
    - echo "SENTRY_DSN=$SENTRY_DSN" >> ./electron/.env
    - sentry-cli releases set-commits "$PACKAGE_VERSION" --commit "$TRAVIS_REPO_SLUG@$TRAVIS_COMMIT"
    - sentry-cli releases new "$PACKAGE_VERSION"
after_success:
    - sentry-cli releases files "$PACKAGE_VERSION" upload-sourcemaps ./client/build/static/js/ --rewrite --url-prefix "~/dist/static/js"
    - sentry-cli releases files "$PACKAGE_VERSION" list
    - sentry-cli releases finalize "$PACKAGE_VERSION"

install:
    - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo snap install snapcraft --classic; fi
    - if [ "$TRAVIS_OS_NAME" = "linux" ]; then echo "$SNAP_TOKEN" | snapcraft login --with -; fi
    - npm install -g sentry-cli-binary
    - cd electron
    - PACKAGE_VERSION=$(node -p -e "require('./package.json').version")
    - npm install
    - cd ..
    - cd client
    - npm install
    - cd ..

script:
    - cd client
    - npm run build
    - cd ..
    - cd electron
    - npm run build
    - npm run prepare_client
    - travis_wait ./scripts/travis-release.sh
    - cd ..

branches:
    only:
        - master
