```yaml
name: CI

on:
  push:
    tags:
      - '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      GH_PAGES_DIR: ${{ github.workspace }}/gh-pages

    strategy:
      matrix:
        conda_env: [docs, py38]
      fail-fast: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Miniconda
        run: |
          wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          echo "$HOME/miniconda/bin" >> $GITHUB_PATH
          conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
          conda config --add channels conda-forge
          conda update -q conda
          conda info -a

      - name: Create conda environment
        run: |
          echo "travistag=${{ github.ref }}"
          if [[ "${{ matrix.conda_env }}" == "docs" ]]; then
            conda env create -n test_env --file docs/environment.yml
          else
            conda env create -n test_env --file ci/environment-${{ matrix.conda_env }}.yml
          fi
          conda activate test_env
          conda list
          python setup.py develop

      - name: Run tests or build docs
        run: |
          if [[ "${{ matrix.conda_env }}" == "docs" ]]; then
            sphinx-build -n -b html -d docs/_build/doctrees docs/source docs/_build/html
          else
            pytest -c setup.cfg --flake8 --cov=aeolus --cov-config .coveragerc --cov-report term-missing -v
          fi

      - name: After success actions
        run: |
          if [[ "${{ matrix.conda_env }}" == "docs" ]]; then
            bash ci/deploy_docs.sh
          elif [[ "${{ matrix.conda_env }}" == "py38" ]]; then
            conda install -c conda-forge conda-build conda-verify anaconda-client
            conda list
            bash conda.recipe/conda_upload.sh
          fi
```