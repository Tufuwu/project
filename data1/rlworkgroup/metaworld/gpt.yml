```yaml
name: CI

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9, 3.10]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Docker
      run: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        sudo apt-get update
        sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce

    - name: Configure Docker
      run: |
        echo '{
          "experimental": true,
          "storage-driver": "overlay2",
          "max-concurrent-downloads": 50,
          "max-concurrent-uploads": 50
        }' | sudo tee /etc/docker/daemon.json
        sudo service docker restart

    - name: Pull cached Docker image
      run: docker pull rlworkgroup/metaworld-ci:latest

    - name: Build Docker image
      run: |
        tag="rlworkgroup/metaworld-ci:${GITHUB_RUN_NUMBER}"
        TAG="${tag}" make build-ci

    - name: Run tests and pre-commit checks
      env:
        JOB_RUN_CMD: "make ci-job"
        DEPLOY_FROM_THIS_JOB: "true"
      run: |
        ci_env="$(bash <(curl -s https://codecov.io/env))"
        ADD_ARGS="${ci_env}" TAG="${tag}" make run-ci RUN_CMD="${JOB_RUN_CMD}"

    - name: Deploy Docker image
      if: github.ref == 'refs/heads/master' && env.DEPLOY_FROM_THIS_JOB == 'true'
      run: |
        TAG="${tag}" make ci-deploy-docker
```