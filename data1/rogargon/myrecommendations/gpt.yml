```yaml
name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master
      - development

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev
        pip install pipenv
        pipenv install

    - name: Download and install ChromeDriver
      run: |
        LATEST_CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_89")
        curl "https://chromedriver.storage.googleapis.com/${LATEST_CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" -O
        unzip chromedriver_linux64.zip -d ~/bin

    - name: Run tests
      run: |
        python manage.py test
        python manage.py collectstatic --noinput
        python manage.py behave

  deploy-to-heroku:
    needs: build-and-test
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker/setup-buildx-action@v1

    - name: Login to Heroku Container Registry
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com

    - name: Build and push Docker image
      run: |
        export PROJECT=myrecommendations
        docker build -f Dockerfile -t registry.heroku.com/$PROJECT/web .
        docker push registry.heroku.com/$PROJECT/web

    - name: Release to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        wget -qO- https://toolbelt.heroku.com/install.sh | sh
        heroku container:release web --app $PROJECT
```