```yaml
name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip and Poetry
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-pypoetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pypoetry-

    - name: Install Poetry
      run: pip install poetry

    - name: Install dependencies
      run: poetry install

    - name: Run tests
      run: poetry run pytest

    - name: Run mypy
      run: poetry run mypy alns

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && github.workspace.python-version == '3.9'

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 3

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Cache pip and Poetry
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-pypoetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pypoetry-

    - name: Install Poetry
      run: pip install poetry

    - name: Install dependencies
      run: poetry install

    - name: Configure PyPI credentials
      env:
        PYPI_USER: ${{ secrets.PYPI_USER }}
        PYPI_PASS: ${{ secrets.PYPI_PASS }}
      run: poetry config http-basic.pypi $PYPI_USER $PYPI_PASS

    - name: Build package
      run: poetry build

    - name: Publish package
      run: poetry publish
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
```