diff --git a/ale_linters/gitcommit/gitlint.vim b/ale_linters/gitcommit/gitlint.vim
index 6473105..4b9cec6 100644
--- a/ale_linters/gitcommit/gitlint.vim
++ b/ale_linters/gitcommit/gitlint.vim
@@ -1,11 +1,9 @@
 " Author: Nick Yamane <nick.diego@gmail.com>
 " Description: gitlint for git commit message files
 
-let g:ale_gitcommit_gitlint_executable =
-\   get(g:, 'ale_gitcommit_gitlint_executable', 'gitlint')
-let g:ale_gitcommit_gitlint_options = get(g:, 'ale_gitcommit_gitlint_options', '')
-let g:ale_gitcommit_gitlint_use_global = get(g:, 'ale_gitcommit_gitlint_use_global', get(g:, 'ale_use_global_executables', 0))
-
call ale#Set('gitcommit_gitlint_executable', 'gitlint')
call ale#Set('gitcommit_gitlint_options', '')
call ale#Set('gitcommit_gitlint_use_global', get(g:, 'ale_use_global_executables', 0))
 
 function! ale_linters#gitcommit#gitlint#GetExecutable(buffer) abort
     return ale#python#FindExecutable(a:buffer, 'gitcommit_gitlint', ['gitlint'])
@@ -13,12 +11,9 @@ endfunction
 
 function! ale_linters#gitcommit#gitlint#GetCommand(buffer) abort
     let l:options = ale#Var(a:buffer, 'gitcommit_gitlint_options')
-    let l:executable = ale_linters#gitcommit#gitlint#GetExecutable(a:buffer)
-    return ale#Escape(l:executable)
-    \   . (!empty(l:options) ? ' ' . l:options : '')
-    \   . ' lint'
-endfunction
 
    return '%e' . ale#Pad(l:options) . ' lint'
endfunction
 
 function! ale_linters#gitcommit#gitlint#Handle(buffer, lines) abort
     " Matches patterns line the following:
@@ -28,8 +23,10 @@ function! ale_linters#gitcommit#gitlint#Handle(buffer, lines) abort
     for l:match in ale#util#GetMatches(a:lines, l:pattern)
         let l:code = l:match[2]
 
-        if l:code is# 'T2' && !ale#Var(a:buffer, 'warn_about_trailing_whitespace')
-            continue
        if !ale#Var(a:buffer, 'warn_about_trailing_whitespace')
            if l:code is# 'T2' || l:code is# 'B2'
                continue
            endif
         endif
 
         let l:item = {
@@ -45,12 +42,10 @@ function! ale_linters#gitcommit#gitlint#Handle(buffer, lines) abort
     return l:output
 endfunction
 
-
 call ale#linter#Define('gitcommit', {
 \   'name': 'gitlint',
 \   'output_stream': 'stderr',
-\   'executable_callback': 'ale_linters#gitcommit#gitlint#GetExecutable',
-\   'command_callback': 'ale_linters#gitcommit#gitlint#GetCommand',
\   'executable': function('ale_linters#gitcommit#gitlint#GetExecutable'),
\   'command': function('ale_linters#gitcommit#gitlint#GetCommand'),
 \   'callback': 'ale_linters#gitcommit#gitlint#Handle',
 \})
-
