name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]
        django-version: ["Django>=3.0,<3.1", "Django>=2.2,<2.3"]
        run-web-tests: [true, false]
        use-custom-model: [true, false]
        include:
          - python-version: 3.9
            django-version: "Django>=3.0,<3.1"
            run-web-tests: true
            use-custom-model: true
            deploy: true
          - python-version: 3.9
            django-version: "Django>=3.0,<3.1"
            run-web-tests: true
            use-custom-model: false
            deploy: true
          - python-version: 3.10
            django-version: "Django>=3.0,<3.1"
            run-web-tests: true
            use-custom-model: true
            deploy: true
          - python-version: 3.10
            django-version: "Django>=3.0,<3.1"
            run-web-tests: true
            use-custom-model: false
            deploy: true
        exclude:
          - python-version: 3.9
            run-web-tests: false
            use-custom-model: true
          - python-version: 3.9
            run-web-tests: false
            use-custom-model: false
          - python-version: 3.10
            run-web-tests: false
            use-custom-model: true
          - python-version: 3.10
            run-web-tests: false
            use-custom-model: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install codecov
        grep -v "^django==" requirements.txt > /tmp/reqs.txt
        pip install -r /tmp/reqs.txt
        pip install ${{ matrix.djangoproject-version }}
    - name: Run tests
      run: ./scripts/ci_runtests.sh
      env:
        DJANGO_VERSION: ${{ matrix.djangoproject-version }}
        RUN_WEB_TESTS: ${{ matrix.run-web-tests }}
        USE_CUSTOM_MODEL: ${{ matrix.use-custom-model }}
    - name: Upload coverage to Codecov
      run: codecov
      if: matrix.run-web-tests == true
    - name: Deploy to PyPI
      if: matrix.deploy == true
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        python setup.py sdist bdist_wheel
        twine upload dist/*
