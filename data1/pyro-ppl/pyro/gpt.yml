```yaml
name: CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      python-version: ${{ steps.set-python-version.outputs.python-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Set Python version
        id: set-python-version
        run: echo "::set-output name=python-version::3.9"

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 isort>=5.0 mypy nbstripout nbformat
      - name: Run linting
        run: make lint

  docs:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
      - name: Build docs
        run: make docs
      - name: Run doctests
        run: make doctest

  perf:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[profile]
      - name: Run performance tests
        run: pytest -vs --benchmark-disable tests/perf/test_benchmark.py

  profiler:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[profile]
      - name: Run profiler
        run: python -m profiler.distributions

  unit-tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install .[test] coveralls
      - name: Run unit tests
        run: pytest -vs --cov=pyro --cov-config .coveragerc --stage unit --durations 20

  examples:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install .[test] coveralls
      - name: Run examples tests
        run: |
          CI=1 pytest -vs --cov=pyro --cov-config .coveragerc --stage test_examples --durations 10
          grep -l smoke_test tutorial/source/*.ipynb | xargs grep -L 'smoke_test = False' | CI=1 xargs pytest -vx --nbval-lax --current-env -W ignore::FutureWarning

  integration-batch-1:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install .[test] coveralls
      - name: Run integration batch 1 tests
        run: pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_1 --durations 10

  integration-batch-2:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install .[test] coveralls
      - name: Run integration batch 2 tests
        run: pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_2 --durations 10

  funsor:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[funsor]
      - name: Run funsor tests
        run: |
          pytest -vs --cov=pyro --cov-config .coveragerc --stage funsor --durations 10
          CI=1 pytest -vs --cov=pyro --cov-config .coveragerc --stage test_examples --durations 10 -k funsor

  coverage:
    runs-on: ubuntu-latest
    needs: [unit-tests, examples, integration-batch-1, integration-batch-2, funsor]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: pip install coveralls
      - name: Upload coverage report
        run: coveralls
```