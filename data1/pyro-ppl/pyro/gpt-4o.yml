```yaml
name: CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-8 g++-8 ninja-build graphviz
          pip install -U pip
          pip install https://github.com/pyro-ppl/pyro-api/archive/master.zip
          pip install numpy
          pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install .[test]
          pip install coveralls
          pip freeze

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install lint dependencies
        run: pip install flake8 isort>=5.0 mypy nbstripout nbformat

      - name: Run lint
        run: make lint

  docs:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install docs dependencies
        run: pip install -r docs/requirements.txt

      - name: Build docs
        run: |
          make docs
          make doctest

  perf:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Run performance tests
        run: |
          pip install -e .[profile]
          pytest -vs --benchmark-disable tests/perf/test_benchmark.py

  profiler:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Run profiler
        run: |
          pip install -e .[profile]
          python -m profiler.distributions

  unit:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Run unit tests
        run: pytest -vs --cov=pyro --cov-config .coveragerc --stage unit --durations 20

  examples:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Run example tests
        run: |
          CI=1 pytest -vs --cov=pyro --cov-config .coveragerc --stage test_examples --durations 10
          grep -l smoke_test tutorial/source/*.ipynb | xargs grep -L 'smoke_test = False' \
          | CI=1 xargs pytest -vx --nbval-lax --current-env -W ignore::FutureWarning

  integration_batch_1:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Run integration batch 1 tests
        run: pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_1 --durations 10

  integration_batch_2:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Run integration batch 2 tests
        run: pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_2 --durations 10

  funsor:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Run funsor tests
        run: |
          pip install -e .[funsor]
          pytest -vs --cov=pyro --cov-config .coveragerc --stage funsor --durations 10
          CI=1 pytest -vs --cov=pyro --cov-config .coveragerc --stage test_examples --durations 10 -k funsor

  after_success:
    runs-on: ubuntu-latest
    needs: [unit, examples, integration_batch_1, integration_batch_2, funsor]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Upload coverage to Coveralls
        run: coveralls
```