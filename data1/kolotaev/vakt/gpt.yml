name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: vakt_db
      redis:
        image: redis:latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: make deps
      
    - name: Setup MongoDB
      run: |
        wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1604-4.2.1.tgz
        tar zxf mongodb-linux-x86_64-ubuntu1604-4.2.1.tgz
        export PATH=${PWD}/mongodb-linux-x86_64-ubuntu1604-4.2.1/bin/:${PATH}
        mongod --version
        mkdir -p data/db
        mongod --dbpath=data/db --fork --logpath /dev/null
        sleep 5
        mongo vakt_db --eval 'db.createUser({user:"test_user",pwd:"test_password",roles:["readWrite"]});'
        mysql -e 'CREATE DATABASE vakt_db CHARACTER SET utf8 COLLATE utf8_bin;'
        psql -c "CREATE DATABASE vakt_db ENCODING='UTF8';" -U postgres

    - name: Run tests
      run: |
        DATABASE_DSN="mysql+pymysql://root@127.0.0.1/vakt_db" make coverage
        DATABASE_DSN="sqlite:///:memory:" make test-sql-i
        DATABASE_DSN="postgresql+psycopg2cffi://postgres:@localhost/vakt_db" make test-sql-i
        make bench

    - name: Upload coverage
      run: bash <(curl -s https://codecov.io/bash)
      