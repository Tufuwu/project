```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache pre-commit
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pre-commit-
    - name: Install dependencies
      run: |
        pip install --upgrade pip mypy 'attrs==19.2.0'
        pip install -r https://raw.githubusercontent.com/aws-cloudformation/aws-cloudformation-rpdk/master/requirements.txt
        pip install . src/
    - name: Run pre-commit
      run: pre-commit run --all-files

  integ_python_3_9:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install --upgrade pip mypy 'attrs==19.2.0'
        pip install -r https://raw.githubusercontent.com/aws-cloudformation/aws-cloudformation-rpdk/master/requirements.txt
        pip install . src/
    - name: Run integration tests
      run: |
        DIR=$(mktemp -d)
        cd "$DIR"
        printf "AWS::Foo::Bar\n1\ny" | cfn init -vv
        mypy src/aws_foo_bar/ --strict --implicit-reexport

  integ_python_3_10:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        pip install --upgrade pip mypy 'attrs==19.2.0'
        pip install -r https://raw.githubusercontent.com/aws-cloudformation/aws-cloudformation-rpdk/master/requirements.txt
        pip install . src/
    - name: Run integration tests
      run: |
        DIR=$(mktemp -d)
        cd "$DIR"
        printf "AWS::Foo::Bar\n2\ny" | cfn init -vv
        mypy src/aws_foo_bar/ --strict --implicit-reexport

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        pip install --upgrade pip mypy 'attrs==19.2.0'
        pip install -r https://raw.githubusercontent.com/aws-cloudformation/aws-cloudformation-rpdk/master/requirements.txt
        pip install . src/
    - name: Deploy to PyPI
      env:
        TWINE_USERNAME: aws-cloudformation-developers
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        cd $(bash before_deploy.sh)
        python -m pip install --upgrade twine
        python setup.py sdist bdist_wheel
        twine upload dist/*
```