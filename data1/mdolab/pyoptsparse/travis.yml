   - docker
 env:
   global:
    - REPO_NAME=pyoptsparse
+    - REPO_NAME=$(eval basename $TRAVIS_REPO_SLUG)
     - DOCKER_WORKING_DIR=/home/mdolabuser/packages/$REPO_NAME
     - DOCKER_MOUNT_DIR=/home/mdolabuser/travis/$REPO_NAME
    - SNOPT_DIR=$DOCKER_WORKING_DIR/pyoptsparse/pySNOPT/source
    - NLPQLP_DIR=$DOCKER_WORKING_DIR/pyoptsparse/pyNLPQLP/source
+    - SNOPT_DIR=$DOCKER_WORKING_DIR/$REPO_NAME/pySNOPT/source
+    - NLPQLP_DIR=$DOCKER_WORKING_DIR/$REPO_NAME/pyNLPQLP/source
   jobs:
    # - DOCKER_TAG=c7-gcc-ompi-py3-latest
    - DOCKER_TAG=c7-intel-impi-py3-latest
    - DOCKER_TAG=u18-gcc-ompi-py2-stable
    - DOCKER_TAG=u18-gcc-ompi-py3-latest
    - DOCKER_TAG=u18-gcc-ompi-py3-stable
    - DOCKER_TAG=u20-gcc-ompi-py3-latest
    - DOCKER_TAG=u20-gcc-ompi-py3-stable
+    # - DOCKER_TAG=c7-gcc-ompi-latest
+    - DOCKER_TAG=c7-intel-impi-latest
+    - DOCKER_TAG=u18-gcc-ompi-stable
+    - DOCKER_TAG=u18-gcc-ompi-latest
+    - DOCKER_TAG=u20-gcc-ompi-stable
+    - DOCKER_TAG=u20-gcc-ompi-latest
 
 before_install:
   - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
@@ -50,7 +49,6 @@ install:
   - docker exec -it app /bin/bash -c "rm -rf $DOCKER_WORKING_DIR && cp -r $DOCKER_MOUNT_DIR $DOCKER_WORKING_DIR"
   # We also remove the python installation
   - docker exec -it app /bin/bash -c "rm -rf $DOCKER_WORKING_DIR/build"
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && pip install testflo==1.3.5"
   # Copy back the proprietary codes
   - if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
       docker exec -it app /bin/bash -c "cp -r \$HOME/NLPQLP/* $NLPQLP_DIR/ && cp -r \$HOME/SNOPT/* $SNOPT_DIR/";
@@ -59,7 +57,7 @@ install:
   - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && pip install -e ."
 script:
   # We need to source the mdolab bashrc before running anything
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && testflo --pre_announce -v . --coverage --coverpkg pyoptsparse"
+  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && testflo --pre_announce -v . --coverage --coverpkg $REPO_NAME"
 
 after_success:
   # Coveralls
