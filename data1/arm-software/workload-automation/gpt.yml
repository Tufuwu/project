name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9, 3.10]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nose nose2 flake8 pylint==2.6.0
        git clone https://github.com/ARM-software/devlib.git /tmp/devlib
        cd /tmp/devlib
        python setup.py install
        cd $GITHUB_WORKSPACE
        python setup.py install
    - name: Run tests
      env:
        PYLINT: "cd $GITHUB_WORKSPACE && ./dev_scripts/pylint wa"
        PEP8: "cd $GITHUB_WORKSPACE && ./dev_scripts/pep8 wa"
        NOSETESTS: "nose2 -s $GITHUB_WORKSPACE/tests"
        WORKLOAD: "cd /tmp && wa run $GITHUB_WORKSPACE/tests/travis/idle_agenda.yaml -v -d idle_workload"
        PROCESS_CMD: "$WORKLOAD && wa process -f -p csv idle_workload"
        SHOW_CMD: "wa show dhrystone && wa show generic_android && wa show trace-cmd && wa show csv"
        LIST_CMD: "wa list all"
        CREATE_CMD: "wa create agenda dhrystone generic_android csv trace_cmd && wa create package test && wa create workload test"
      run: |
        echo ${{ matrix.test }} && eval ${{ matrix.test }}
      matrix:
        test: [PYLINT, PEP8, NOSETESTS, WORKLOAD, "${{ env.PROCESS_CMD }} && ${{ env.SHOW_CMD }} && ${{ env.LIST_CMD }} && ${{ env.CREATE_CMD }}"]
