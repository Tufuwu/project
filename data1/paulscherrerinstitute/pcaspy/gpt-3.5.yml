name: CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            env: MY_CONDA_VERSION='latest'
          - os: macos-latest
            env:
              MY_CONDA_VERSION='latest'
              CONDA_BUILD_SYSROOT="$(xcode-select -p)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Miniconda
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            curl https://repo.anaconda.com/miniconda/Miniconda3-${{ env.MY_CONDA_VERSION }}-MacOSX-x86_64.sh -o miniconda.sh;
          else
            curl https://repo.anaconda.com/miniconda/Miniconda3-${{ env.MY_CONDA_VERSION }}-Linux-x86_64.sh -o miniconda.sh;
          fi
          bash miniconda.sh -b -p $HOME/miniconda
          source $HOME/miniconda/bin/activate
          conda config --set always_yes yes --set changeps1 no
          conda update -q --all
          conda config --add channels defaults
          conda install conda-build pip anaconda-client
          conda info

      - name: Build and Upload
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            [[ -e /opt/MacOSX10.9.sdk ]] || sudo ln -s ${CONDA_BUILD_SYSROOT} /opt/MacOSX10.9.sdk;
            printf "CONDA_BUILD_SYSROOT:\n    - ${CONDA_BUILD_SYSROOT}\n" >> conda-recipe/conda_build_config.yaml;
            conda build -c ${MY_CONDA_CHANNEL} conda-recipe;
          else
            mkdir -m 0777 -p $HOME/miniconda/conda-bld/${{ runner.os }}-64;
            ./conda_build_in_docker.sh `pwd` $HOME/miniconda/conda-bld/${{ runner.os }}-64 ${MY_CONDA_CHANNEL};
          fi

      - name: Upload to Anaconda
        if: github.ref_type == 'tags'
        run: |
          ls $HOME/miniconda/conda-bld/${{ runner.os }}-64
          anaconda -t $CONDA_TOKEN upload --force $HOME/miniconda/conda-bld/${{ runner.os }}-64/*.tar.bz2

      - name: Upload to PyPI
        if: github.ref_type == 'tags'
        run: |
          echo [distutils]                > ~/.pypirc;
          echo index-servers = mypypi    >> ~/.pypirc;
          echo [mypypi]                  >> ~/.pypirc;
          echo repository=$PYPI_URL      >> ~/.pypirc;
          echo username=$PYPI_USER       >> ~/.pypirc;
          echo password=$PYPI_PASSWORD   >> ~/.pypirc;
          pip install twine;
          if [[ ${{ runner.os }} == "ubuntu-latest" ]]; then
              twine upload -r mypypi --skip-existing $HOME/miniconda/conda-bld/${{ runner.os }}-64/pcaspy-*.tar.gz;
              twine upload -r mypypi --skip-existing $HOME/miniconda/conda-bld/${{ runner.os }}-64/pcaspy-*.egg;
          fi;
          if [[ ${{ runner.os }} == "macos-latest" ]]; then
              twine upload -r mypypi --skip-existing $HOME/miniconda/conda-bld/${{ runner.os }}-64/pcaspy-*.whl;
          fi;