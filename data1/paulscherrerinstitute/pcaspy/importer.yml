name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MY_CONDA_VERSION: latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: if [[ "${{ runner.os }}" == "osx" ]]; then curl https://repo.anaconda.com/miniconda/Miniconda3-${MY_CONDA_VERSION}-MacOSX-x86_64.sh -o miniconda.sh; else curl https://repo.anaconda.com/miniconda/Miniconda3-${MY_CONDA_VERSION}-Linux-x86_64.sh -o miniconda.sh; fi
    - run: bash miniconda.sh -b -p ${{ github.workspace }}/miniconda
    - run: source ${{ github.workspace }}/miniconda/bin/activate
    - run: conda config --set always_yes yes --set changeps1 no
    - run: conda update -q --all
    - run: conda config --add channels defaults
    - run: conda install conda-build pip anaconda-client
    - run: conda info
    - run: if [[ "${{ runner.os }}" == "osx" ]]; then [[ -e /opt/MacOSX10.9.sdk ]] || sudo ln -s ${CONDA_BUILD_SYSROOT} /opt/MacOSX10.9.sdk; printf "CONDA_BUILD_SYSROOT:\n    - ${CONDA_BUILD_SYSROOT}\n" >> conda-recipe/conda_build_config.yaml; conda build -c ${MY_CONDA_CHANNEL} conda-recipe; else mkdir -m 0777 -p ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64; ./conda_build_in_docker.sh `pwd` ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64 ${MY_CONDA_CHANNEL}; fi
    - run: ls ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64
      if: "${{ success() }}"
    - run: if [[ ! -z "${{ github.ref }}" ]]; then anaconda -t $CONDA_TOKEN upload --force ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64/*.tar.bz2; echo [distutils]                > ~/.pypirc; echo index-servers = mypypi    >> ~/.pypirc; echo [mypypi]                  >> ~/.pypirc; echo repository=$PYPI_URL      >> ~/.pypirc; echo username=$PYPI_USER       >> ~/.pypirc; echo password=$PYPI_PASSWORD   >> ~/.pypirc; pip install twine; if [[ ${{ runner.os }} == "linux" ]]; then twine upload -r mypypi --skip-existing ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64/pcaspy-*.tar.gz; twine upload -r mypypi --skip-existing ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64/pcaspy-*.egg; fi; if [[ ${{ runner.os }} == "osx" ]]; then twine upload -r mypypi --skip-existing ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64/pcaspy-*.whl; fi; fi
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker:
  test_2:
    runs-on: macos-latest
    env:
      MY_CONDA_VERSION: latest
      CONDA_BUILD_SYSROOT: "$(xcode-select -p)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: if [[ "${{ runner.os }}" == "osx" ]]; then curl https://repo.anaconda.com/miniconda/Miniconda3-${MY_CONDA_VERSION}-MacOSX-x86_64.sh -o miniconda.sh; else curl https://repo.anaconda.com/miniconda/Miniconda3-${MY_CONDA_VERSION}-Linux-x86_64.sh -o miniconda.sh; fi
    - run: bash miniconda.sh -b -p ${{ github.workspace }}/miniconda
    - run: source ${{ github.workspace }}/miniconda/bin/activate
    - run: conda config --set always_yes yes --set changeps1 no
    - run: conda update -q --all
    - run: conda config --add channels defaults
    - run: conda install conda-build pip anaconda-client
    - run: conda info
    - run: if [[ "${{ runner.os }}" == "osx" ]]; then [[ -e /opt/MacOSX10.9.sdk ]] || sudo ln -s ${CONDA_BUILD_SYSROOT} /opt/MacOSX10.9.sdk; printf "CONDA_BUILD_SYSROOT:\n    - ${CONDA_BUILD_SYSROOT}\n" >> conda-recipe/conda_build_config.yaml; conda build -c ${MY_CONDA_CHANNEL} conda-recipe; else mkdir -m 0777 -p ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64; ./conda_build_in_docker.sh `pwd` ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64 ${MY_CONDA_CHANNEL}; fi
    - run: ls ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64
      if: "${{ success() }}"
    - run: if [[ ! -z "${{ github.ref }}" ]]; then anaconda -t $CONDA_TOKEN upload --force ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64/*.tar.bz2; echo [distutils]                > ~/.pypirc; echo index-servers = mypypi    >> ~/.pypirc; echo [mypypi]                  >> ~/.pypirc; echo repository=$PYPI_URL      >> ~/.pypirc; echo username=$PYPI_USER       >> ~/.pypirc; echo password=$PYPI_PASSWORD   >> ~/.pypirc; pip install twine; if [[ ${{ runner.os }} == "linux" ]]; then twine upload -r mypypi --skip-existing ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64/pcaspy-*.tar.gz; twine upload -r mypypi --skip-existing ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64/pcaspy-*.egg; fi; if [[ ${{ runner.os }} == "osx" ]]; then twine upload -r mypypi --skip-existing ${{ github.workspace }}/miniconda/conda-bld/${{ runner.os }}-64/pcaspy-*.whl; fi; fi
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker: