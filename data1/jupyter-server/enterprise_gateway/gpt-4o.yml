```yaml
name: Python Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:latest
        options: --entrypoint ''

    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    env:
      ASYNC_TEST_TIMEOUT: 30

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.sbt/launchers/1.3.12
        key: ${{ runner.os }}-sbt-${{ matrix.python-version }}

    - name: Install SBT
      run: |
        mkdir -p $HOME/.sbt/launchers/1.3.12
        curl -L -o $HOME/.sbt/launchers/1.3.12/sbt-launch.jar https://repo1.maven.org/maven2/org/scala-sbt/sbt-launch/1.3.12/sbt-launch.jar

    - name: Install dependencies
      run: |
        pip install --upgrade setuptools pip websocket-client flake8
        make clean dist enterprise-gateway-demo
        pip install dist/*.whl coverage
        pip freeze

    - name: Run tests
      run: |
        jupyter enterprisegateway --help
        flake8 enterprise_gateway
        nosetests -x --process-restartworker --with-coverage --cover-package=enterprise_gateway enterprise_gateway.tests
        echo "Starting integration tests ..."
        make itest-yarn
        pip uninstall -y jupyter_enterprise_gateway

    - name: After success
      if: success()
      run: |
        echo "GitHub Actions exited with success"
        python --version
        pip --version
        pip list
        docker logs itest-yarn
        pip install codecov
        codecov

    - name: After failure
      if: failure()
      run: |
        echo "GitHub Actions exited with failure"
        python --version
        pip --version
        pip list
        docker logs itest-yarn
```