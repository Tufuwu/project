```yaml
name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        django-version: [2.2, 3.0, 3.1, 3.2]
        include:
          - python-version: 3.9
            django-version: master
            tox-env: lint
          - python-version: 3.9
            django-version: master
            tox-env: docs
          - python-version: 3.9
            django-version: master
            tox-env: functional
          - python-version: 3.9
            django-version: master
            tox-env: functional-mongodb

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
      postgresql:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install virtualenv tox
    - name: Setup environment
      run: |
        TOX_ENV=py${{ matrix.python-version.replace('.', '') }}-django${{ matrix.djangoproject-version }}
        if [ "${{ matrix.tox-env }}" != "" ]; then
          TOX_ENV=${{ matrix.tox-env }}
        fi
    - name: Install tox environment
      run: tox -e $TOX_ENV --notest
    - name: Run tests
      run: tox -e $TOX_ENV
    - name: Linting and documentation
      if: ${{ matrix.tox-env == 'lint' || matrix.tox-env == 'docs' }}
      run: tox -e $TOX_ENV
    - name: Functional tests
      if: ${{ matrix.tox-env == 'functional' || matrix.tox-env == 'functional-mongodb' }}
      run: |
        if [ "${{ matrix.tox-env }}" == "functional" ]; then
          mysql -e 'CREATE DATABASE test;'
          psql -c 'CREATE DATABASE test;' -U postgres
        fi
        tox -e $TOX_ENV
        if [ "${{ matrix.tox-env }}" == "functional" ]; then
          DB_ENGINE=django.db.backends.mysql DB_USER=travis DB_HOST=localhost DB_NAME=test tox -e $TOX_ENV
          DB_ENGINE=django.db.backends.postgresql DB_USER=postgres DB_HOST=localhost DB_NAME=test tox -e $TOX_ENV
          CONNECTOR=dbbackup.db.postgresql.PgDumpBinaryConnector DB_ENGINE=django.db.backends.postgresql DB_USER=postgres DB_HOST=localhost DB_NAME=test tox -e $TOX_ENV
        elif [ "${{ matrix.tox-env }}" == "functional-mongodb" ]; then
          DB_ENGINE=djongo DB_NAME=test tox -e $TOX_ENV
        fi
    - name: Coveralls
      if: ${{ matrix.tox-env != 'lint' && matrix.tox-env != 'docs' && matrix.tox-env != 'functional' && matrix.tox-env != 'functional-mongodb' }}
      run: |
        tox -e $TOX_ENV -- pip install coveralls
        tox -e $TOX_ENV -- coveralls $COVERALLS_OPTION
```