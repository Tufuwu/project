```yaml
name: CI

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.10']
        include:
          - os: ubuntu-latest
            python-version: '3.9'
            setup-cmd: 'egg_info'
            conda-dependencies: 'pytz matplotlib six'
            pip-dependencies: 'pytest-mpl pytest-astropy astroquery'
          - os: ubuntu-latest
            python-version: '3.9'
            setup-cmd: 'build_docs -w'
            conda-dependencies: 'pytz matplotlib six'
            pip-dependencies: 'pytest-mpl pytest-astropy astroquery'
          - os: ubuntu-latest
            python-version: '3.9'
            setup-cmd: 'test --remote-data -V'
            conda-dependencies: 'pytz matplotlib six'
            pip-dependencies: 'pytest-mpl pytest-astropy'
          - os: ubuntu-latest
            python-version: '3.9'
            astropy-version: 'dev'
          - os: ubuntu-latest
            python-version: '3.9'
            main-cmd: 'flake8 astroplan --count --max-line-length=100'
            setup-cmd: ''
          - os: windows-latest
            python-version: '3.9'
            conda-dependencies: 'pytz matplotlib six'
            pip-dependencies: 'pyephem pytest-mpl pytest-astropy'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          git clone git://github.com/astropy/ci-helpers.git
          source ci-helpers/travis/setup_conda.sh
          conda install ${{ matrix.conda-dependencies }} -c astropy
          pip install ${{ matrix.pip-dependencies }}

      - name: Run tests
        run: |
          ${{ matrix.main-cmd }} ${{ matrix.setup-cmd }}

      - name: After success
        if: ${{ matrix.setup-cmd == 'test --remote-data -V' }}
        run: |
          coveralls --rcfile='astroplan/tests/coveragerc'
```