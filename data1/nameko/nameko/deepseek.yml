```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        tox-env: [
          py39-static, py310-static,
          py39-examples, py310-examples,
          py39-oldest-lib, py39-pinned-lib, py39-latest-lib, py39-extra-lib,
          py310-oldest-lib, py310-pinned-lib, py310-latest-lib, py310-extra-lib,
          py39-branchcoverage-lib, py310-branchcoverage-lib
        ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Start RabbitMQ
        run: |
          docker run -d --rm -p 15672:15672 -p 5672:5672 -p 5671:5671 --name nameko-rabbitmq nameko/nameko-rabbitmq:3.6.6
          docker cp nameko-rabbitmq:/srv/ssl certs

      - name: Install Toxiproxy
        run: |
          mkdir $PWD/bin
          wget -O $PWD/bin/toxiproxy-server https://github.com/Shopify/toxiproxy/releases/download/v2.0.0/toxiproxy-server-linux-amd64
          chmod +x $PWD/bin/toxiproxy-server
          export PATH=$PATH:$PWD/bin/

      - name: Run tests
        run: tox -e ${{ matrix.tox-env }}

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python '3.9'
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Build docs
        run: tox -e docs

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python '3.9'
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
```