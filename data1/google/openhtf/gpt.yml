name: CI

on:
  push:
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip swig libusb-1.0-0-dev libprotobuf-dev
        pip install --upgrade pip
        pip install tox coveralls
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install protobuf compiler
      run: |
        wget https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip
        unzip protoc-3.6.1-linux-x86_64.zip
        sudo cp bin/protoc /usr/bin/protoc && sudo chmod 777 /usr/bin/protoc
        sudo cp -r include/. /usr/include && sudo chmod -R +r /usr/include/google
        protoc --version
    - name: Install project
      run: pip install -e .
    - name: Run tests
      run: tox
    - name: Coveralls
      if: success()
      run: coveralls

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: pip install twine
    - name: Deploy to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m twine upload --skip-existing dist/*
