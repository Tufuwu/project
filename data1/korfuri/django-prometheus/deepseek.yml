```yaml
name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    services:
      memcached:
        image: memcached:latest
        ports:
          - 11211:11211
      redis:
        image: redis:latest
        ports:
          - 6379:6379
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-12-postgis-3 gdal-bin

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox-travis coverage coveralls codacy-coverage

      - name: Set up MySQL database
        run: |
          mysql -h 127.0.0.1 -u root -proot -e 'create database django_prometheus_1;'

      - name: Set up PostgreSQL database
        run: |
          psql -h 127.0.0.1 -U postgres -c 'CREATE DATABASE postgis;'
          psql -h 127.0.0.1 -U postgres postgis -c 'CREATE EXTENSION IF NOT EXISTS postgis;'

      - name: Run tests with tox
        run: tox

      - name: Combine coverage reports
        run: |
          coverage combine .coverage django_prometheus/tests/end2end/.coverage

      - name: Upload coverage to Coveralls
        run: coveralls

      - name: Generate coverage XML
        run: coverage xml

      - name: Upload coverage to Codacy
        run: python-codacy-coverage -r coverage.xml

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Update version from Git
        run: python update_version_from_git.py

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
```