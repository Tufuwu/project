-name: build
name: CI
 
-on: [push]
on:
  push:
  pull_request:
  release:
    types:
      - published

env:
  MINIMUM_PYTHON_VERSION: '3.7'
 
 jobs:
-  build:
 
  precommit:
     runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ env.MINIMUM_PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - uses: actions/checkout@v2
      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          python -m pip install pre-commit virtualenv!=20.0.6
          pre-commit install
      - name: Run static code inspections
        run: pre-commit run --all-files
 
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions poetry
      - name: Test with tox
        run: |
          tox
  deploy:
    if: github.event_name == 'release'
    needs: [precommit, build]
    runs-on: ubuntu-latest
     steps:
-    - uses: actions/checkout@v1
-    - name: Set up Python 3.7
-      uses: actions/setup-python@v1
-      with:
-        python-version: 3.7
-    - name: Install dependencies
-      run: |
-        python -m pip install --upgrade pip
-        pip install -r requirements_dev.txt
-    - name: Lint with flake8
-      run: |
-        pip install flake8
-        # stop the build if there are Python syntax errors or undefined names
-        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
-        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
-        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
-    - name: Test with pytest
-      run: |
-        pip install pytest
-        pytest
-    - name: build distribution files
-      run: |
-        python setup.py sdist bdist_wheel
-    - name: pypi-publish
-      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
-      uses: pypa/gh-action-pypi-publish@v1.1.0
-      with:
-        user: __token__
-        password: ${{ secrets.pypi_password }}
\ No newline at end of file
      - name: Install Python ${{ env.MINIMUM_PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Upload to pypi
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_PASSWORD }}
        run: |
          poetry config http-basic.pypi "__token__" "${POETRY_PYPI_TOKEN_PYPI}"
          poetry publish --build
\ No newline at end of file
