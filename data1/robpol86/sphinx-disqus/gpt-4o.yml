```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  tags:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install appveyor-artifacts coveralls tox

    - name: Run Tox
      run: tox -e lint,py39,py310,docs

    - name: After Success
      if: success()
      run: |
        mv .coverage .coverage.travis
        appveyor-artifacts -mi download
        coverage combine
        coveralls
        eval "$(ssh-agent -s)"; touch docs/key; chmod 0600 docs/key
        openssl aes-256-cbc -d -K "$encrypted_1b7c54115a3f_key" -iv "$encrypted_1b7c54115a3f_iv" < docs/key.enc > docs/key
        ssh-add docs/key
        git config --global user.email "builds@github.com"
        git config --global user.name "GitHub Actions"
        git remote set-url origin "git@github.com:${{ github.repository }}"
        tox -e docsV

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install Twine
      run: pip install twine

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: Robpol86
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m twine upload dist/*
```