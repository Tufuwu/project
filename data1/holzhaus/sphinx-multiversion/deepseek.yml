name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.10']
        include:
          - os: windows-latest
            env:
              SKIP: check-executables-have-shebangs
    env:
      SKIP: ${{ matrix.env.SKIP }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install pre-commit setuptools wheel
          python -m pip install -r requirements.txt
          python setup.py install
      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure
      - name: Run tests
        run: python -m unittest --verbose
      - name: Build artifacts
        run: |
          mkdir html
          git fetch --all
          python -I -m sphinx_multiversion -W docs html
          python setup.py build sdist bdist_wheel

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python '3.10'
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install pre-commit setuptools wheel
          python -m pip install -r requirements.txt
          python setup.py install
      - name: Prepare artifacts
        run: |
          mkdir html
          touch html/.nojekyll
          cp assets/gh-pages-redirect.html html/index.html
          git fetch --all
          python -I -m sphinx_multiversion -W docs html
          python setup.py build sdist bdist_wheel
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          skip_existing: true
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          draft: false
          prerelease: false
          generate_release_notes: true
      - name: Deploy Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./html
          force_orphan: true