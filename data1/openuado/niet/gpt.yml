```yaml
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9, 3.10]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r test-requirements.txt
    - name: Install package
      run: pip install tox-travis .[devel]
    - name: Run tox
      run: tox
    - name: Install package
      run: python setup.py install
    - name: Run niet commands
      run: |
        niet project.meta.name tests/samples/sample.yaml
        niet .project.meta.name tests/samples/sample.yaml
        niet project.list tests/samples/sample.yaml
        niet .project.list tests/samples/sample.json
        niet . tests/samples/sample.json
        niet -f squote project.list tests/samples/sample.yaml
        niet -f squote project.meta.name tests/samples/sample.yaml
        niet -f dquote project.list tests/samples/sample.yaml
        niet -f dquote project.meta.name tests/samples/sample.yaml
        niet -f ifs project.list tests/samples/sample.yaml
        niet --format newline project.list tests/samples/sample.yaml
        niet --format yaml project.list tests/samples/sample.yaml
        niet --format json project.list tests/samples/sample.yaml
        niet project.'"test-dash"' tests/samples/sample.yaml
        niet project.'"test-dash"' tests/samples/sample.json
        niet project.'"test-dash"' tests/samples/sample.json -f eval
        niet project.list tests/samples/sample.json -f eval
        niet project tests/samples/sample.json -f eval
        eval $(niet project tests/samples/sample.json -f eval) && test "${project__foo}" = "bar"
        niet -f yaml .project tests/samples/sample.yaml -o test.yaml && test -f test.yaml && ! grep '^project:$' test.yaml
        cp test.yaml test.old.yaml && niet -f yaml .list test.yaml -i && ! diff test.old.yaml
        niet -f yaml .project tests/samples/sample.yaml --output test2.yaml && test -f test2.yaml && ! grep '^project:$' test2.yaml
        cp test2.yaml test2.old.yaml && niet -f yaml .list test2.yaml --in-place && ! diff test2.old.yaml

  deploy:
    needs: build
    if: github.event_name == 'push' && contains(github.ref, 'tags')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r test-requirements.txt
    - name: Install package
      run: pip install tox-travis .[devel]
    - name: Deploy to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
```