```yaml
name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        toxenv: [flake8, black, mysql, mssql, postgres, mongodb]
        include:
          - python-version: '3.9'
            toxenv: flake8
          - python-version: '3.9'
            toxenv: black
          - python-version: '3.9'
            toxenv: mysql
            services: mysql
          - python-version: '3.9'
            toxenv: mssql
            services: docker
          - python-version: '3.9'
            toxenv: postgres
            services: postgresql
          - python-version: '3.9'
            toxenv: mongodb
            services: mongodb

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgresql:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: --health-cmd="mongo --eval 'db.runCommand(\"ping\").ok'" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox codecov

      - name: Set up MySQL
        if: matrix.toxenv == 'mysql'
        run: |
          mysql -u root -proot -e "DROP DATABASE IF EXISTS app; CREATE DATABASE app DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci"
          mysql -u root -proot -e "CREATE USER 'mysqluser'@'localhost' IDENTIFIED BY 'mysqluserpassword';"
          mysql -u root -proot -e "GRANT ALL ON app.* TO 'mysqluser'@'localhost';"

      - name: Set up MSSQL
        if: matrix.toxenv == 'mssql'
        run: |
          docker pull mcr.microsoft.com/mssql/server:2017-CU8-ubuntu
          docker run --name mssql -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password_123" -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-CU8-ubuntu
          docker ps
          sleep 60
          docker logs -t mssql

      - name: Set up PostgreSQL
        if: matrix.toxenv == 'postgres'
        run: |
          psql -U postgres -c "CREATE DATABASE app;"
          psql -U postgres -c "CREATE USER pguser WITH PASSWORD 'pguserpassword';"

      - name: Run tests
        run: tox

      - name: Upload coverage to Codecov
        if: always()
        run: codecov
```