```yaml
name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        elasticsearch-version: ['6.1.0', '7.2.0']
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Elasticsearch ${{ matrix.elasticsearch-version }}
      run: |
        curl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${{ matrix.elasticsearch-version }}.deb
        sudo dpkg -i --force-confnew elasticsearch-${{ matrix.elasticsearch-version }}.deb
        if [ "${{ matrix.elasticsearch-version }}" == "7.2.0" ]; then
          sudo sed -i.old 's/-Xms1g/-Xms128m/' /etc/elasticsearch/jvm.options
          sudo sed -i.old 's/-Xmx1g/-Xmx128m/' /etc/elasticsearch/jvm.options
          echo -e '-XX:+DisableExplicitGC\n-Djdk.io.permissionsUseCanonicalPath=true\n-Dlog4j.skipJansi=true\n-server\n' | sudo tee -a /etc/elasticsearch/jvm.options
          sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
        fi
        sudo systemctl start elasticsearch

    - name: Install dependencies
      run: |
        python -m pip install --upgrade setuptools==49.6.0
        python -m pip install --upgrade pip==18.1
        python -m pip install flake8
        python -m pip install coveralls
        python -m pip install -r requirements.txt
        python -m pip install -r requirements_tests.txt

    - name: Wait for Elasticsearch to start
      run: sleep 20

    - name: Run tests
      run: |
        flake8 .
        mysqladmin -u root -proot create test_sh
        mysqladmin -u root -proot create test_projects
        mysql -u root -proot test_projects < tests/test_projects.sql
        cd tests
        coverage run --source=grimoire_elk run_tests.py

    - name: Upload coverage to Coveralls
      run: coveralls
```