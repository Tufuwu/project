diff --git a/.travis.yml b/.travis.yml
index e368826f0b..74d4ea7beb 100644
-- a/.travis.yml
+++ b/.travis.yml
@@ -1,71 +1,90 @@
sudo: required
# Note: travis currently does not support listing more than one language so
# this cheats and claims to only be cpp.  If they add multiple language
# support, this should probably get updated to install steps and/or
# rvm/gemfile/jdk/etc. entries rather than manually doing the work.
+# Everything is driven by the test.sh, so the language doesn't really
+# matter, it just controls the default install/script/etc. steps on
+# travis.
 language: cpp
os:
  - linux
  - osx
# The Objective C build needs Xcode 6.4 or later.
osx_image: xcode7.1
script:
  - ./travis.sh $CONFIG
env:
  - CONFIG=cpp
  - CONFIG=cpp_distcheck
  - CONFIG=csharp
  - CONFIG=golang
  - CONFIG=java_jdk6
  - CONFIG=java_jdk7
  - CONFIG=java_oracle7
  - CONFIG=javanano_jdk6
  - CONFIG=javanano_jdk7
  - CONFIG=javanano_oracle7
  - CONFIG=javascript
  - CONFIG=python
  - CONFIG=python_cpp
  - CONFIG=ruby19
  - CONFIG=ruby20
  - CONFIG=ruby21
  - CONFIG=ruby22
  - CONFIG=jruby
+script: ./tests.sh $CONFIG
+
+# The test matrix is manually built to cover a mix of linux and macOS
+# hosted setups; this lets some extra settings be done specific to each
+# host/language instead of forcing common values on all the tests.
 matrix:
  exclude:
    # It's nontrivial to programmatically install a new JDK from the command
    # line on OS X, so we rely on testing on Linux for Java code.
+  include:
+    # -----------------------------------------------------------------
+    # macOS hosted tests for Objective-C
+
     - os: osx
      env: CONFIG=java_jdk6
+      env: CONFIG=objectivec_osx
+      osx_image: xcode9.3
+      language: objective-c
+    # iOS build log was starting to choke travis UI, so split to cover the
+    # Xcode Debug and Release Configurations independently.
     - os: osx
      env: CONFIG=java_jdk7
+      env: CONFIG=objectivec_ios_debug
+      osx_image: xcode9.3
+      language: objective-c
     - os: osx
      env: CONFIG=java_oracle7
+      env: CONFIG=objectivec_ios_release
+      osx_image: xcode9.3
+      language: objective-c
     - os: osx
      env: CONFIG=javanano_jdk6
+      env: CONFIG=objectivec_cocoapods_integration
+      osx_image: xcode9.3
+      language: objective-c
+
+    # -----------------------------------------------------------------
+    # macOS hosted tests for other languages.
+
     - os: osx
      env: CONFIG=javanano_jdk7
+      env: CONFIG=cpp
     - os: osx
      env: CONFIG=javanano_oracle7
    # Requires installing mono, currently travis.sh is doing that with apt-get
    # which doesn't work on OS X.
+      env: CONFIG=cpp_distcheck
     - os: osx
      env: CONFIG=csharp
    # Requires installing golang, currently travis.sh is doing that with apt-get
    # which doesn't work on OS X.
+      env: CONFIG=javascript
     - os: osx
      env: CONFIG=golang
  # Add into the matrix OS X tests of Objective C (needs Xcode, so it won't
  # work on other platforms). These are split so it doesn't take as long to run.
  include:
+      env: CONFIG=python
     - os: osx
      env: CONFIG=objectivec_ios
+      env: CONFIG=python_cpp
     - os: osx
      env: CONFIG=objectivec_osx
  allow_failures:
    # These currently do not work on OS X but are being worked on by @haberman.
    - os: osx
      env: CONFIG=ruby22
+      env: CONFIG=php5.6_mac
     - os: osx
      env: CONFIG=jruby
+      env: CONFIG=php7.0_mac
+
+    # -----------------------------------------------------------------
+    # Linux hosted tests
+
+    # The dotnet environment requires Ubuntu 14.04 or 16.04. This
+    # configuration is effectively an "extra" one, outside the
+    # autogenerated matrix.
+    - os: linux
+      env: CONFIG=csharp
+      language: csharp
+      dist: trusty
+      dotnet: 2.0.3
+      mono: none
+      # Install the .NET Core 1.0 runtime as that's what we test against
+      addons:
+        apt:
+          sources:
+          - sourceline: 'deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-trusty-prod trusty main'
+            key_url: 'https://packages.microsoft.com/keys/microsoft.asc'
+          packages:
+          - dotnet-sharedframework-microsoft.netcore.app-1.0.5
+    # This test is kept on travis because it doesn't play nicely with other
+    # tests on jenkins running in parallel.
+    - os: linux
+      env: CONFIG=cpp_distcheck
+    # The Java compatibility test currently only runs on Linux because it will
+    # fetch pre-built Linux protoc binaries in the test.
+    - os: linux
+      env: CONFIG=java_compatibility
+      sudo: required
+      dist: trusty
+    # The Python compatibility test currently only runs on Linux because it will
+    # fetch pre-built Linux protoc binaries in the test.
+    - os: linux
+      env: CONFIG=python_compatibility
+      sudo: required
+      dist: trusty
+
 notifications:
   email: false
