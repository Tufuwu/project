```yaml
name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9, 3.10]
        pg-version: [9.6, 10, 11, 12]
        django-version: [2.1, 2.2, 3.0, 3.1]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y dirmngr apt-transport-https unzip rabbitmq-server
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E0C56BD4
        echo "deb http://repo.yandex.ru/clickhouse/deb/stable/ main/" | sudo tee /etc/apt/sources.list.d/clickhouse.list
        echo "deb https://packages.erlang-solutions.com/ubuntu $(lsb_release -cs) contrib" | sudo tee /etc/apt/sources.list.d/erlang-solutions.list
        wget -O- https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | sudo apt-key add -
        echo "deb https://dl.bintray.com/rabbitmq/debian $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/rabbitmq.list
        wget -O- https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc | sudo apt-key add -
        sudo apt-get update
        sudo apt-get install -y clickhouse-client clickhouse-server clickhouse-common-static
        sudo service clickhouse-server restart
        pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install -q Django==${{ matrix.django-version }}

    - name: Setup PostgreSQL
      run: |
        sudo apt-get install -y postgresql-${{ matrix.pg-version }} postgresql-contrib-${{ matrix.pg-version }}
        sudo sed -i "s/port = 5432/port = 543${{ matrix.pg-version }}/" /etc/postgresql/${{ matrix.pg-version }}/main/postgresql.conf
        sudo cp /etc/postgresql/10/main/pg_hba.conf /etc/postgresql/${{ matrix.pg-version }}/main/
        sudo systemctl stop postgresql
        sudo systemctl start postgresql@${{ matrix.pg-version }}-main

    - name: Prepare database
      run: |
        psql -tc 'SHOW server_version' -U postgres
        psql -c 'CREATE ROLE test;' -U postgres
        psql -c 'ALTER ROLE test WITH SUPERUSER;' -U postgres
        psql -c 'ALTER ROLE test WITH LOGIN;' -U postgres
        psql -c "ALTER ROLE test PASSWORD 'test';" -U postgres
        psql -c 'CREATE DATABASE test OWNER test;' -U postgres
        psql -c 'CREATE DATABASE test2 OWNER test;' -U postgres

    - name: Run tests
      run: |
        python runtests.py
```