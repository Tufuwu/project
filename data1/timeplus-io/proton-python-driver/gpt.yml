```yaml
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]
        version: 
          - 21.9.3.30
          - 21.4.6.55
          - 21.3.10.1
          - 21.2.10.48
          - 21.1.9.41
          - 20.11.2.1
          - 20.10.2.20
          - 20.9.3.45
          - 20.8.4.11
          - 20.7.4.11
          - 20.6.8.5
          - 20.5.5.74
          - 20.4.9.110
          - 20.3.20.6
          - 19.16.17.80
          - 19.15.3.6
          - 19.9.2.4
          - 19.8.3.8
          - 19.3.3
          - 18.12.17
        use_numpy: [false, true]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install flake8 flake8-print
        if [ "${{ matrix.use_numpy }}" == "true" ]; then pip install numpy pandas; fi
    - name: Run flake8
      run: flake8
    - name: Set up Docker
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker run -e "TZ=Europe/Moscow" -d -p 127.0.0.1:9000:9000 --name test-clickhouse-server --ulimit nofile=262144:262144 yandex/clickhouse-server:${{ matrix.version }}
        docker run -d --entrypoint "/bin/sh" --name test-clickhouse-client --link test-clickhouse-server:clickhouse-server yandex/clickhouse-client:${{ matrix.version }} -c 'while :; do sleep 1; done'
    - name: Configure clickhouse-client
      run: |
        echo -e '#!/bin/bash\n\ndocker exec -e "`env | grep ^TZ=`" test-clickhouse-client clickhouse-client "$@"' | sudo tee /usr/local/bin/clickhouse-client > /dev/null
        sudo chmod +x /usr/local/bin/clickhouse-client
        sed -i 's/^host=localhost$/host=clickhouse-server/' setup.cfg
        echo '127.0.0.1 clickhouse-server' | sudo tee /etc/hosts > /dev/null
    - name: Install additional dependencies
      run: pip install coveralls cython 'cryptography<3.3'
    - name: Build and test
      run: |
        python testsrequire.py && python setup.py develop
        coverage run -m pytest -v
    - name: Upload coverage
      if: matrix.python-version != 'pypy3.5'
      run: coveralls

  valgrind:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install cython valgrind
        docker run -e "TZ=Europe/Moscow" -d -p 127.0.0.1:9000:9000 --name test-clickhouse-server --ulimit nofile=262144:262144 yandex/clickhouse-server:20.3.7.46
        docker run -d --entrypoint "/bin/sh" --name test-clickhouse-client --link test-clickhouse-server:clickhouse-server yandex/clickhouse-client:20.3.7.46 -c 'while :; do sleep 1; done'
        echo -e '#!/bin/bash\n\ndocker exec -e "`env | grep ^TZ=`" test-clickhouse-client clickhouse-client "$@"' | sudo tee /usr/local/bin/clickhouse-client > /dev/null
        sudo chmod +x /usr/local/bin/clickhouse-client
        sed -i 's/^host=localhost$/host=clickhouse-server/' setup.cfg
        echo '127.0.0.1 clickhouse-server' | sudo tee /etc/hosts > /dev/null
    - name: Run valgrind
      run: valgrind --error-exitcode=1 pytest -v

  wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9, 3.10]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install cython cibuildwheel==2.2.2
    - name: Build wheels
      run: cibuildwheel --output-dir wheelhouse
    - name: Upload wheels
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v2
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
        path: wheelhouse/
```