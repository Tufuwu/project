```yaml
name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        django-version: ["Django==2.2.*", "Django==3.0.*", "Django==3.1.*", "Django==3.2.*", "https://github.com/django/django/archive/main.tar.gz"]
        test-type: ["postgres", "mysql-innodb", "sqlite"]
        include:
          - python-version: 3.9
            django-version: "Django==2.1.*"
            test-type: "postgres"
          - python-version: 3.9
            django-version: "Django==2.1.*"
            test-type: "mysql-innodb"
          - python-version: 3.9
            django-version: "Django==2.1.*"
            test-type: "sqlite"
          - python-version: 3.8
            django-version: "Django==2.1.*"
            test-type: "postgres"
          - python-version: 3.8
            django-version: "Django==2.1.*"
            test-type: "mysql-innodb"
          - python-version: 3.8
            django-version: "Django==2.1.*"
            test-type: "sqlite"
          - python-version: 3.7
            django-version: "Django==2.0.*"
            test-type: "postgres"
          - python-version: 3.7
            django-version: "Django==2.0.*"
            test-type: "mysql-innodb"
          - python-version: 3.7
            django-version: "Django==2.0.*"
            test-type: "sqlite"
          - python-version: 3.6
            django-version: "Django==2.0.*"
            test-type: "postgres"
          - python-version: 3.6
            django-version: "Django==2.0.*"
            test-type: "mysql-innodb"
          - python-version: 3.6
            django-version: "Django==2.0.*"
            test-type: "sqlite"

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: ${{ matrix.env.IMPORT_EXPORT_POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ matrix.env.IMPORT_EXPORT_POSTGRESQL_PASSWORD }}
        ports:
          - 5432:5432
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ matrix.env.IMPORT_EXPORT_MYSQL_PASSWORD }}
        ports:
          - 3306:3306

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        pip install -q ${{ matrix.env.DJANGO }}
        pip install -r requirements/base.txt
        pip install -r requirements/test.txt
        pip install coveralls
    - name: Run tests
      run: |
        PYTHONPATH=".:tests:$PYTHONPATH" python -Wall -m coverage run --omit='setup.py' --source=. tests/manage.py test core --settings=
        if python -c 'import sys; sys.exit(1 - (sys.version_info >= (3, 6)))'; then isort --check-only import_export tests; fi
    - name: Coveralls
      if: success()
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
```