```yaml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        db:
          - POSTGRESQL
          - MYSQL

    env:
      PYTHONWARNINGS: "default,ignore::PendingDeprecationWarning,ignore::ResourceWarning"
      DB: ${{ matrix.db }}

    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
      mysql:
        image: mysql:5.5
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -prootpass" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install codecov
          pip install -e git+https://github.com/modoboa/modoboa.git#egg=modoboa
          pip install -r requirements.txt
          pip install -r test-requirements.txt
          python setup.py develop

      - name: Run tests
        run: |
          cd test_project
          coverage run --source ../modoboa_amavis manage.py test modoboa_amavis

      - name: Upload coverage report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    needs: build-and-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r test-requirements.txt
          python setup.py develop

      - name: Compile messages
        run: |
          cd modoboa_amavis
          django-admin compilemessages
          cd ..

      - name: Deploy to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
          packages_dir: dist/
```