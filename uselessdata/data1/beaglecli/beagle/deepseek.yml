```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        build: [docs, pep8, cover]
        include:
          - python-version: '3.12'
            build: nightly
            allow_failure: true

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip uninstall -y nose mock
          pip install pbr tox tox-travis
          pip install -r doc/requirements.txt .[test]

      - name: Run tests
        run: |
          if [[ "${{ matrix.build }}" == "docs" || "${{ matrix.build }}" == "pep8" || "${{ matrix.build }}" == "cover" ]]; then
            tox -e ${{ matrix.build }}
          else
            tox
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pbr tox tox-travis
          pip install -r doc/requirements.txt .[test]

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload --skip-existing dist/*
```