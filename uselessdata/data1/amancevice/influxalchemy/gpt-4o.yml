```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install pipenv
      run: pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Run flake8
      run: pipenv run flake8

    - name: Run tests
      run: pipenv run py.test

  code_coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install pipenv
      run: pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Download Code Climate Test Reporter
      run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter

    - name: Make Code Climate Test Reporter executable
      run: chmod +x ./cc-test-reporter

    - name: Run Code Climate Test Reporter before-build
      run: ./cc-test-reporter before-build

    - name: Run tests
      run: pipenv run py.test

    - name: Run Code Climate Test Reporter after-build
      run: ./cc-test-reporter after-build --exit-code ${{ steps.test.outcome }}

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install pipenv
      run: pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Deploy to PyPI
      env:
        TWINE_USERNAME: amancevice
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pipenv run python -m pip install --upgrade twine
        pipenv run twine upload dist/*
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
```