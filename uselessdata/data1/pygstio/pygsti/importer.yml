name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
env:
  SKIP_DEAP: '1'
  NOSE_VERBOSE: '2'
  NOSE_WITH_TIMER: '1'
  NOSE_WITH_ID: '1'
  NOSE_REDNOSE: '1'
  NOSE_WITH_COVERAGE: '1'
  NOSE_COVER_PACKAGE: pygsti
  NOSE_PROCESSES: "-1"
  NOSE_NOPATH: '1'
  NOSE_PROCESS_TIMEOUT: '2400'
jobs:
  lint:
    runs-on: ubuntu-16.04
    if: ${{ contains(fromJson('["master", "beta"]'), github.ref) }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: "${{ matrix.python }}"
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
#     # This item has no matching transformer
#     - timeout: 1000
    - run: 'sudo apt-get update -qq -y && sudo apt-get install -qq -y gfortran libblas-dev liblapack-dev openmpi-bin openmpi-common openssh-client openssh-server libopenmpi1.10 libopenmpi-dev libsuitesparse-dev
        '
    - run: cmake --version
    - run: gcc --version
    - run: pip install "numpy>=1.16.0"
    - run: pip install cython
    - run: pip install .[testing]
    - run: pip freeze
    - run: python -Ic "import pygsti; print(pygsti.__version__); print(pygsti.__path__)"
    - run: echo "nosetests $NOSETESTS"
    - run: nosetests $NOSETESTS
#     # This item has no matching transformer
#     - email:
#         on_success: change
#         on_failure: always
    strategy:
      matrix:
        NOSE_WHERE:
        - test/unit/
        python:
        - 3.8
        - 3.7
        - 3.6
        - 3.5
#       # 'allow_failures' transformations are currently unsupported.
    env:
      NOSE_WHERE: "${{ matrix.NOSE_WHERE }}"
  PEP8:
    runs-on: ubuntu-16.04
    if: ${{ contains(fromJson('["master", "beta"]'), github.ref) }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
#     # This item has no matching transformer
#     - timeout: 1000
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.7
    - run: skip
    - run: pip install flake8
    - run: python -m flake8 --statistics $LINTOPTS pygsti
#     # This item has no matching transformer
#     - email:
#         on_success: change
#         on_failure: always
  Critical_errors:
    runs-on: ubuntu-16.04
    env:
      LINTOPTS: "--config=.flake8-critical"
    if: ${{ contains(fromJson('["master", "beta"]'), github.ref) }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
#     # This item has no matching transformer
#     - timeout: 1000
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.7
    - run: skip
    - run: pip install flake8
    - run: python -m flake8 --statistics $LINTOPTS pygsti
#     # This item has no matching transformer
#     - email:
#         on_success: change
#         on_failure: always
  Comprehensive_linting:
    needs:
    - lint
    - PEP8
    - Critical_errors
    runs-on: ubuntu-16.04
    if: ${{ contains(fromJson('["master", "beta"]'), github.ref) }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
#     # This item has no matching transformer
#     - timeout: 1000
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.7
    - run: skip
    - run: pip install flake8
    - run: python -m flake8 --statistics $LINTOPTS pygsti
#     # This item has no matching transformer
#     - email:
#         on_success: change
#         on_failure: always
  test_extra:
    needs:
    - lint
    - PEP8
    - Critical_errors
    - Comprehensive_linting
    runs-on: ubuntu-16.04
    env:
      NOSE_WHERE: test/test_packages/
      NOSETESTS: algorithms algorithmsb
    if: ${{ contains(fromJson('["master", "beta", "ci-debug"]'), github.ref) }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
#     # This item has no matching transformer
#     - timeout: 1000
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.5
    - run: 'sudo apt-get update -qq -y && sudo apt-get install -qq -y gfortran libblas-dev liblapack-dev openmpi-bin openmpi-common openssh-client openssh-server libopenmpi1.10 libopenmpi-dev libsuitesparse-dev
        '
    - run: cmake --version
    - run: gcc --version
    - run: pip install "numpy>=1.16.0"
    - run: pip install cython
    - run: pip install .[testing]
    - run: pip freeze
    - run: python -Ic "import pygsti; print(pygsti.__version__); print(pygsti.__path__)"
    - run: echo "nosetests $NOSETESTS"
    - run: nosetests $NOSETESTS
#     # This item has no matching transformer
#     - email:
#         on_success: change
#         on_failure: always
  test_extra_2:
    needs:
    - lint
    - PEP8
    - Critical_errors
    - Comprehensive_linting
    runs-on: ubuntu-16.04
    env:
      NOSE_WHERE: test/test_packages/
      NOSETESTS: report reportb
    if: ${{ contains(fromJson('["master", "beta", "ci-debug"]'), github.ref) }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
#     # This item has no matching transformer
#     - timeout: 1000
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.5
    - run: 'sudo apt-get update -qq -y && sudo apt-get install -qq -y gfortran libblas-dev liblapack-dev openmpi-bin openmpi-common openssh-client openssh-server libopenmpi1.10 libopenmpi-dev libsuitesparse-dev
        '
    - run: cmake --version
    - run: gcc --version
    - run: pip install "numpy>=1.16.0"
    - run: pip install cython
    - run: pip install .[testing]
    - run: pip freeze
    - run: python -Ic "import pygsti; print(pygsti.__version__); print(pygsti.__path__)"
    - run: echo "nosetests $NOSETESTS"
    - run: nosetests $NOSETESTS
#     # This item has no matching transformer
#     - email:
#         on_success: change
#         on_failure: always
  test_extra_3:
    needs:
    - lint
    - PEP8
    - Critical_errors
    - Comprehensive_linting
    runs-on: ubuntu-16.04
    env:
      NOSE_WHERE: test/test_packages/
      NOSETESTS: drivers objects tools iotest optimize construction extras
    if: ${{ contains(fromJson('["master", "beta", "ci-debug"]'), github.ref) }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
#     # This item has no matching transformer
#     - timeout: 1000
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.5
    - run: 'sudo apt-get update -qq -y && sudo apt-get install -qq -y gfortran libblas-dev liblapack-dev openmpi-bin openmpi-common openssh-client openssh-server libopenmpi1.10 libopenmpi-dev libsuitesparse-dev
        '
    - run: cmake --version
    - run: gcc --version
    - run: pip install "numpy>=1.16.0"
    - run: pip install cython
    - run: pip install .[testing]
    - run: pip freeze
    - run: python -Ic "import pygsti; print(pygsti.__version__); print(pygsti.__path__)"
    - run: echo "nosetests $NOSETESTS"
    - run: nosetests $NOSETESTS
#     # This item has no matching transformer
#     - email:
#         on_success: change
#         on_failure: always
  test_extra_4:
    needs:
    - lint
    - PEP8
    - Critical_errors
    - Comprehensive_linting
    runs-on: ubuntu-16.04
    env:
      NOSE_WHERE: test/test_packages/
      NOSE_NOPATH: " NOSETESTS="
      mpi: "${{ secrets.MPI }}"
    if: ${{ contains(fromJson('["master", "beta", "ci-debug"]'), github.ref) }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
#     # This item has no matching transformer
#     - timeout: 1000
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.5
    - run: 'sudo apt-get update -qq -y && sudo apt-get install -qq -y gfortran libblas-dev liblapack-dev openmpi-bin openmpi-common openssh-client openssh-server libopenmpi1.10 libopenmpi-dev libsuitesparse-dev
        '
    - run: cmake --version
    - run: gcc --version
    - run: pip install "numpy>=1.16.0"
    - run: pip install cython
    - run: pip install .[testing]
    - run: pip freeze
    - run: python -Ic "import pygsti; print(pygsti.__version__); print(pygsti.__path__)"
    - run: echo "nosetests $NOSETESTS"
    - run: nosetests $NOSETESTS
#     # This item has no matching transformer
#     - email:
#         on_success: change
#         on_failure: always