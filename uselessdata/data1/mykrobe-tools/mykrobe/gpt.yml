name: CI/CD Pipeline

on:
  push:
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.9, 3.10]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cython requests wheel tox

    - name: Install MongoDB on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew tap mongodb/brew
        brew install mongodb-community
        sudo mkdir -p /data/db
        sudo chown -R $(whoami) /data/db
        mongod --quiet &>/dev/null &

    - name: Run tests
      run: tox -e py${{ matrix.python-version }}

  package-and-deploy:
    needs: build-and-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .

    - name: Update metadata and species data
      run: |
        mykrobe panels update_metadata --panels_dir src/mykrobe/data
        mykrobe panels update_species --panels_dir src/mykrobe/data --debug all

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Build the executable
      run: |
        cd dist
        pyinstaller --workpath='./pyinstaller_build/binary_cache' --distpath='./pyinstaller_build' mykrobe_atlas_pyinstaller.spec
        cd pyinstaller_build
        tar cvfz ../../mykrobe.command_line.${{ github.event.ref_name }}.tar.gz mykrobe_atlas/
        cd ../../

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./mykrobe.command_line.${{ github.event.ref_name }}.tar.gz
        asset_name: mykrobe.command_line.${{ github.event.ref_name }}.tar.gz
        asset_content_type: application/gzip
