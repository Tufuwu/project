name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.9, 3.10]
        rdkit-version: [2019.09]
        miniconda-version: [4.8.3, latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Miniconda
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then OS=Linux-x86_64; else OS=MacOSX-x86_64; fi
        if [ "${{ matrix.miniconda-version }}" = "latest" ]; then 
          wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda${{ matrix.python-version:0:1 }}-${{ matrix.miniconda-version }}-$OS.sh; 
        else 
          wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda${{ matrix.python-version:0:1 }}-py${{ matrix.python-version // . }}_${{ matrix.miniconda-version }}-$OS.sh;
        fi  
        bash miniconda.sh -b -p $HOME/miniconda
        export PATH="$HOME/miniconda/bin:$PATH"
        conda config --set always_yes yes --set changeps1 no
        conda config --add channels conda-forge
        conda update -q conda

    - name: Create Conda environment
      run: |
        conda create -q -n test-environment python=${{ matrix.python-version }} rdkit=${{ matrix.rdkit-version }} nose
        source activate test-environment

    - name: Install package
      run: |
        python setup.py install

    - name: Run tests
      run: |
        nosetests --with-doctest
