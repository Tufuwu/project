```yaml
name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10']
        rdkit-version: ['2019.09']
        miniconda-version: ['4.8.3', 'latest']
        include:
          - os: ubuntu-latest
            python-version: '3.9'
            rdkit-version: '2019.09'
            miniconda-version: '4.8.3'
          - os: ubuntu-latest
            python-version: '3.9'
            rdkit-version: '2019.09'
            miniconda-version: 'latest'
          - os: macos-latest
            python-version: '3.9'
            rdkit-version: '2019.09'
            miniconda-version: '4.8.3'
          - os: macos-latest
            python-version: '3.9'
            rdkit-version: '2019.09'
            miniconda-version: 'latest'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Miniconda
      shell: bash
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then OS=Linux-x86_64; else OS=MacOSX-x86_64; fi
        if [ "${{ matrix.miniconda-version }}" = "latest" ]; then
          wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-$OS.sh;
        else
          wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-py${BUILD_TARGET//.}_${MINICONDA_VERSION}-$OS.sh;
        fi
        bash miniconda.sh -b -p $HOME/miniconda
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH

    - name: Set up Python
      shell: bash
      run: |
        conda config --set always_yes yes --set changeps1 no
        conda config --add channels conda-forge
        conda update -q conda
        conda create -q -n test-environment python=${{ matrix.python-version }} rdkit=${{ matrix.rdkit-version }} nose
        source activate test-environment

    - name: Install dependencies
      run: |
        python setup.py install

    - name: Run tests
      run: |
        nosetests --with-doctest
```