name: Python CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: ['3.9', '3.10']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install dependencies
      run: |
        if [ "${{ runner.os }}" = "Linux" ]; then OS=Linux-x86_64; else OS=MacOSX-x86_64; fi
        if [ "${{ matrix.MINICONDA_VERSION }}" = "latest" ]; then 
          wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda${{ matrix.python:0:1}}-${{ matrix.MINICONDA_VERSION }}-$OS.sh; 
        else 
          wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda${{ matrix.python:0:1}}-py${{ matrix.python//. }}_${{ matrix.MINICONDA_VERSION }}-$OS.sh;
        fi  
        bash miniconda.sh -b -p $HOME/miniconda
        export PATH="$HOME/miniconda/bin:$PATH"
        conda config --set always_yes yes --set changeps1 no
        conda config --add channels conda-forge
        conda update -q conda
        conda create -q -n test-environment python=${{ matrix.python }} rdkit=${{ matrix.RDKIT }} nose
        source activate test-environment

    - name: Install package
      run: python setup.py install

    - name: Run tests
      run: nosetests --with-doctest

    env:
      BUILD_TARGET: ${{ matrix.python }}
      RDKIT: 2019.09
      MINICONDA_VERSION: latest