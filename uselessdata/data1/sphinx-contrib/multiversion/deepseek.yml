```yaml
name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.10']
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pre-commit setuptools wheel
        python -m pip install -r requirements.txt
        python setup.py install

    - name: Run pre-commit
      run: pre-commit run --all-files --show-diff-on-failure

    - name: Run tests
      run: python -m unittest --verbose

    - name: Build documentation
      run: |
        mkdir html
        git fetch --all
        python -I -m sphinx_multiversion -W docs html
        python setup.py build sdist bdist_wheel

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python '3.10'
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pre-commit setuptools wheel
        python -m pip install -r requirements.txt
        python setup.py install

    - name: Build documentation
      run: |
        mkdir html
        git fetch --all
        python -I -m sphinx_multiversion -W docs html
        python setup.py build sdist bdist_wheel

    - name: Deploy to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m pip install twine
        python -m twine upload --skip-existing dist/*

    - name: Deploy to GitHub Releases
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.ref_name }} --title "${{ github.ref_name }}" --notes "Release ${{ github.ref_name }}" dist/*

    - name: Deploy documentation
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./html
        keep_files: false
```