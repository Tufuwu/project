```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: travis_ci_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        python-version: ['3.9']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '10.23.0'

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Python dependencies
        run: |
          pip install -r dev-requirements.txt

      - name: Install npm dependencies
        run: |
          npm install

      - name: Download and unzip API
        run: |
          wget --no-check-certificate "https://docs.google.com/uc?export=download&id=1E8zboqLDRdufXnXZJUrLnSLih_ATaekO" -O api.zip
          unzip api.zip

      - name: Set up PostgreSQL database
        run: |
          psql -c 'create database travis_ci_test;' -U postgres

      - name: Initialize database
        run: |
          flask sql init

      - name: Update Redis
        run: |
          flask redis update

      - name: Build npm
        run: |
          npm run build

      - name: Run pre-commit
        run: |
          pre-commit run --all-files --show-diff-on-failure

      - name: Run tests
        run: |
          pytest
```