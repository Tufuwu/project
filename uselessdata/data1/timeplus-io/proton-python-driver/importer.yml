name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: "${{ matrix.python }}"
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - run: pip install --upgrade pip setuptools
    - run: pip install flake8 flake8-print
    - run: flake8
    - run: if [ ! -z $DOCKER_PASSWORD ] ; then echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin ; fi
    - run: docker run -e "TZ=Europe/Moscow" -d -p 127.0.0.1:9000:9000 --name test-clickhouse-server --ulimit nofile=262144:262144 yandex/clickhouse-server:$VERSION
    - run: docker run -d --entrypoint "/bin/sh" --name test-clickhouse-client --link test-clickhouse-server:clickhouse-server yandex/clickhouse-client:$VERSION -c 'while :; do sleep 1; done'
    - run: docker ps -a
    - run: echo -e '#!/bin/bash\n\ndocker exec -e "`env | grep ^TZ=`" test-clickhouse-client clickhouse-client "$@"' | sudo tee /usr/local/bin/clickhouse-client > /dev/null
    - run: sudo chmod +x /usr/local/bin/clickhouse-client
    - run: sed -i 's/^host=localhost$/host=clickhouse-server/' setup.cfg
    - run: echo '127.0.0.1 clickhouse-server' | sudo tee /etc/hosts > /dev/null
    - run: pip install coveralls cython 'cryptography<3.3'
    - run: if [ -z ${USE_NUMPY+x} ]; then pip uninstall -y numpy pandas; fi
    - run: if [ "$TRAVIS_PYTHON_VERSION" != "pypy3.5" ]; then CYTHON_TRACE=1 python setup.py build_ext --define CYTHON_TRACE ; fi
    - run: python testsrequire.py && python setup.py develop
    - run: coverage run -m py.test -v
    - run: coveralls
      if: "${{ success() }}"
    strategy:
      matrix:
        VERSION:
        - 21.9.3.30
        - 21.4.6.55
        - 21.3.10.1
        - 21.2.10.48
        - 21.1.9.41
        - 20.11.2.1
        - 20.10.2.20
        - 20.9.3.45
        - 20.8.4.11
        - 20.7.4.11
        - 20.6.8.5
        - 20.5.5.74
        - 20.4.9.110
        - 20.3.20.6
        - 19.16.17.80
        - 19.15.3.6
        - 19.9.2.4
        - 19.8.3.8
        - 19.3.3
        - 18.12.17
        python:
        - '3.4'
        - '3.5'
        - '3.6'
        - '3.7'
        - '3.8'
        - '3.9'
        - 3.10-dev
        - pypy3.5
        include:
        - VERSION: 20.3.20.6
          USE_NUMPY: '1'
        exclude:
        - VERSION: 20.3.20.6
          USE_NUMPY: '1'
          python: 3.4
        - VERSION: 20.3.20.6
          USE_NUMPY: '1'
          python: pypy3.5
    services:
#       # This item has no matching transformer
#       docker:
    env:
      VERSION: "${{ matrix.VERSION }}"
      USE_NUMPY: "${{ matrix.USE_NUMPY }}"
  Valgrind_check:
    needs:
    - test
    runs-on: ubuntu-latest
    env:
      VERSION: 20.3.7.46
      USE_NUMPY: '1'
      PYTHONMALLOC: malloc
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
    - run: apt-get -y install valgrind
    - run: if [ ! -z $DOCKER_PASSWORD ] ; then echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin ; fi
    - run: docker run -e "TZ=Europe/Moscow" -d -p 127.0.0.1:9000:9000 --name test-clickhouse-server --ulimit nofile=262144:262144 yandex/clickhouse-server:$VERSION
    - run: docker run -d --entrypoint "/bin/sh" --name test-clickhouse-client --link test-clickhouse-server:clickhouse-server yandex/clickhouse-client:$VERSION -c 'while :; do sleep 1; done'
    - run: docker ps -a
    - run: echo -e '#!/bin/bash\n\ndocker exec -e "`env | grep ^TZ=`" test-clickhouse-client clickhouse-client "$@"' | sudo tee /usr/local/bin/clickhouse-client > /dev/null
    - run: sudo chmod +x /usr/local/bin/clickhouse-client
    - run: sed -i 's/^host=localhost$/host=clickhouse-server/' setup.cfg
    - run: echo '127.0.0.1 clickhouse-server' | sudo tee /etc/hosts > /dev/null
    - run: pip install --upgrade pip setuptools
    - run: pip install cython
    - run: python testsrequire.py && python setup.py develop
    - run: valgrind --error-exitcode=1 py.test -v
    - run: coveralls
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker:
  Wheels_for_Linux:
    needs:
    - test
    - Valgrind_check
    runs-on: ubuntu-latest
    env:
      CIBW_BUILD: "'*p3*'"
      CIBW_BEFORE_BUILD: "'pip install cython'"
      VERSION: 21.9.3.30
      USE_NUMPY: '1'
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
    - run: pip install --upgrade pip setuptools
    - run: pip install cython cibuildwheel==2.2.2
    - run: cibuildwheel --output-dir wheelhouse
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: wheelhouse/*
        prerelease: true
        draft: true
        name: Linux
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"
    - run: coveralls
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker:
  Wheels_for_Linux_aarch64:
    needs:
    - test
    - Valgrind_check
    runs-on:
      - arm64
      - ubuntu-latest
    env:
      CIBW_BUILD: "'*p3*'"
      CIBW_BEFORE_BUILD: "'pip install cython'"
      VERSION: 21.9.3.30
      USE_NUMPY: '1'
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
    - run: pip install --upgrade pip setuptools
    - run: pip install cython cibuildwheel==2.2.2
    - run: cibuildwheel --output-dir wheelhouse
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: wheelhouse/*
        prerelease: true
        draft: true
        name: Linux aarch64
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"
    - run: coveralls
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker:
  Wheels_for_OS_X:
    needs:
    - test
    - Valgrind_check
    runs-on: macos-latest
    env:
      CIBW_BUILD: "'*p3*'"
      CIBW_BEFORE_BUILD: "'pip install cython'"
      VERSION: 21.9.3.30
      USE_NUMPY: '1'
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.4'
    - run: pip3 install --upgrade pip setuptools
    - run: pip3 install cython cibuildwheel==2.2.2
    - run: cibuildwheel --output-dir wheelhouse
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: wheelhouse/*
        prerelease: true
        draft: true
        name: Mac OS X
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"
    - run: coveralls
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker:
  Wheels_for_Windows:
    needs:
    - test
    - Valgrind_check
    runs-on: windows-latest
    env:
      CIBW_BUILD: "'cp*'"
      CIBW_BEFORE_BUILD: "'python -m pip install cython'"
      VERSION: 21.9.3.30
      USE_NUMPY: '1'
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.4'
    - run: choco install python3 --version 3.9.0 --params "/InstallDir:C:\Python39"
    - run: C:/Python39/python -m pip install cibuildwheel==2.2.2
    - run: C:/Python39/python -m cibuildwheel --platform windows --output-dir wheelhouse
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: wheelhouse/*
        prerelease: true
        draft: true
        name: Windows Python
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"
    - run: coveralls
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker:
  Wheels_for_Windows_PyPy:
    needs:
    - test
    - Valgrind_check
    runs-on: windows-latest
    env:
      CIBW_BUILD: "'pp*'"
      CIBW_BEFORE_BUILD: "'python -m pip install cython'"
      VERSION: 21.9.3.30
      USE_NUMPY: '1'
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.4'
    - run: choco install python3 --version 3.9.0 --params "/InstallDir:C:\Python39"
    - run: C:/Python39/python -m pip install cibuildwheel==2.2.2
    - run: C:/Python39/python -m cibuildwheel --platform windows --output-dir wheelhouse
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: wheelhouse/*
        prerelease: true
        draft: true
        name: Windows Python PyPy
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"
    - run: coveralls
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker:
  Wheels_for_Linux_old_python:
    needs:
    - test
    - Valgrind_check
    runs-on: ubuntu-latest
    env:
      CIBW_BUILD: "'*p35*'"
      CIBW_BEFORE_BUILD: "'pip install cython'"
      VERSION: 21.9.3.30
      USE_NUMPY: '1'
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
    - run: pip install --upgrade pip setuptools
    - run: pip install cython cibuildwheel==1.11.0
    - run: cibuildwheel --output-dir wheelhouse
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: wheelhouse/*
        prerelease: true
        draft: true
        name: Linux
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"
    - run: coveralls
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker:
  Wheels_for_Linux_aarch64_old_python:
    needs:
    - test
    - Valgrind_check
    runs-on:
      - arm64
      - ubuntu-latest
    env:
      CIBW_BUILD: "'*p35*'"
      CIBW_BEFORE_BUILD: "'pip install cython'"
      VERSION: 21.9.3.30
      USE_NUMPY: '1'
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
    - run: pip install --upgrade pip setuptools
    - run: pip install cython cibuildwheel==1.11.0
    - run: cibuildwheel --output-dir wheelhouse
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: wheelhouse/*
        prerelease: true
        draft: true
        name: Linux aarch64
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"
    - run: coveralls
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker:
  Wheels_for_OS_X_old_python:
    needs:
    - test
    - Valgrind_check
    runs-on: macos-latest
    env:
      CIBW_BUILD: "'*p35*'"
      CIBW_BEFORE_BUILD: "'pip install cython'"
      VERSION: 21.9.3.30
      USE_NUMPY: '1'
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.4'
    - run: pip3 install --upgrade pip setuptools
    - run: pip install cython cibuildwheel==1.11.0
    - run: cibuildwheel --output-dir wheelhouse
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: wheelhouse/*
        prerelease: true
        draft: true
        name: Mac OS X
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"
    - run: coveralls
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker:
  Wheels_for_Windows_old_python:
    needs:
    - test
    - Valgrind_check
    runs-on: windows-latest
    env:
      CIBW_BUILD: "'cp35*'"
      CIBW_BEFORE_BUILD: "'python -m pip install cython'"
      VERSION: 21.9.3.30
      USE_NUMPY: '1'
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.4'
    - run: choco install python3 --version 3.9.0 --params "/InstallDir:C:\Python39"
    - run: C:/Python39/python -m pip install cibuildwheel==1.11.0
    - run: C:/Python39/python -m cibuildwheel --platform windows --output-dir wheelhouse
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: wheelhouse/*
        prerelease: true
        draft: true
        name: Windows Python
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"
    - run: coveralls
      if: "${{ success() }}"
    services:
#       # This item has no matching transformer
#       docker: