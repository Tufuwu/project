```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        version: [
          '21.9.3.30', '21.4.6.55', '21.3.10.1', '21.2.10.48', '21.1.9.41',
          '20.11.2.1', '20.10.2.20', '20.9.3.45', '20.8.4.11', '20.7.4.11',
          '20.6.8.5', '20.5.5.74', '20.4.9.110', '20.3.20.6', '19.16.17.80',
          '19.15.3.6', '19.9.2.4', '19.8.3.8', '19.3.3', '18.12.17'
        ]
        include:
          - version: '20.3.20.6'
            use_numpy: '1'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install flake8 flake8-print
          flake8
          if [ ! -z $DOCKER_PASSWORD ] ; then echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin ; fi
          docker run -e "TZ=Europe/Moscow" -d -p 127.0.0.1:9000:9000 --name test-clickhouse-server --ulimit nofile=262144:262144 yandex/clickhouse-server:${{ matrix.version }}
          docker run -d --entrypoint "/bin/sh" --name test-clickhouse-client --link test-clickhouse-server:clickhouse-server yandex/clickhouse-client:${{ matrix.version }} -c 'while :; do sleep 1; done'
          docker ps -a
          echo -e '#!/bin/bash\n\ndocker exec -e "`env | grep ^TZ=`" test-clickhouse-client clickhouse-client "$@"' | sudo tee /usr/local/bin/clickhouse-client > /dev/null
          sudo chmod +x /usr/local/bin/clickhouse-client
          sed -i 's/^host=localhost$/host=clickhouse-server/' setup.cfg
          echo '127.0.0.1 clickhouse-server' | sudo tee /etc/hosts > /dev/null
          pip install coveralls cython 'cryptography<3.3'
          if [ -z ${USE_NUMPY+x} ]; then pip uninstall -y numpy pandas; fi
      - name: Run tests
        run: |
          if [ "${{ matrix.python-version }}" != "pypy3.5" ]; then CYTHON_TRACE=1 python setup.py build_ext --define CYTHON_TRACE ; fi
          python testsrequire.py && python setup.py develop
          coverage run -m py.test -v
      - name: Upload coverage
        run: coveralls

  valgrind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          if [ ! -z $DOCKER_PASSWORD ] ; then echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin ; fi
          docker run -e "TZ=Europe/Moscow" -d -p 127.0.0.1:9000:9000 --name test-clickhouse-server --ulimit nofile=262144:262144 yandex/clickhouse-server:20.3.7.46
          docker run -d --entrypoint "/bin/sh" --name test-clickhouse-client --link test-clickhouse-server:clickhouse-server yandex/clickhouse-client:20.3.7.46 -c 'while :; do sleep 1; done'
          docker ps -a
          echo -e '#!/bin/bash\n\ndocker exec -e "`env | grep ^TZ=`" test-clickhouse-client clickhouse-client "$@"' | sudo tee /usr/local/bin/clickhouse-client > /dev/null
          sudo chmod +x /usr/local/bin/clickhouse-client
          sed -i 's/^host=localhost$/host=clickhouse-server/' setup.cfg
          echo '127.0.0.1 clickhouse-server' | sudo tee /etc/hosts > /dev/null
          pip install --upgrade pip setuptools
          pip install cython
      - name: Run valgrind
        run: |
          python testsrequire.py && python setup.py develop
          valgrind --error-exitcode=1 py.test -v
        env:
          USE_NUMPY: '1'
          PYTHONMALLOC: malloc

  wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install cython cibuildwheel==2.2.2
      - name: Build wheels
        run: |
          cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: '*p3*'
          CIBW_BEFORE_BUILD: 'pip install cython'
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*
```