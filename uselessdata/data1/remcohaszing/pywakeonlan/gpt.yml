name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install codecov gitchangelog tox-travis tox

    - name: Run tests
      run: tox

    - name: Generate coverage report
      run: codecov

    - name: Generate changelog
      id: changelog
      run: echo "::set-output name=changelog::$(gitchangelog $(git describe --abbrev=0 --tags HEAD^)..HEAD)"

  deploy:
    needs: build
    if: github.event_name == 'release' && github.event.release.tag_name != null
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'

    - name: Install dependencies
      run: pip install twine

    - name: Deploy to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

    - name: Deploy to GitHub Releases
      env:
        GITHUB_OAUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        github.issues.createComment({
          owner: context.repo.owner,
          repo: context.repo.repo,
          issue_number: context.issue.number,
          body: "${{ steps.changelog.outputs.changelog }}"
        })
