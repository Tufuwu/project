```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        tox-env: [py39, py310, py311]

    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-9.6-postgis-2.4 python2.7-dev python3-dev autotools-dev libexpat1-dev libfreexl-dev libgeos-dev libproj-dev libreadline-dev libsqlite3-dev libsqlite3-mod-spatialite libxml2-dev zlib1g-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Set up PostgreSQL
        run: |
          psql -c "CREATE ROLE gis PASSWORD 'gis' SUPERUSER CREATEDB CREATEROLE INHERIT LOGIN;" -U postgres
          psql -c 'CREATE DATABASE gis;' -U postgres
          psql -d gis -c 'CREATE SCHEMA gis;' -U postgres
          psql -c 'GRANT CREATE ON DATABASE gis TO "gis";' -U postgres
          psql -d gis -c 'GRANT USAGE,CREATE ON SCHEMA gis TO "gis";' -U postgres
          psql -d gis -c 'CREATE EXTENSION postgis;' -U postgres

      - name: Run flake8
        run: flake8 --ignore=W503,W504 geoalchemy2 tests

      - name: Run tests with SQLAlchemy 1.1.2
        run: tox -e ${{ matrix.tox-env }}-sqla11 --sitepackages -- -v --cov geoalchemy2 --cov-report term-missing

      - name: Run tests with latest SQLAlchemy
        run: tox -e ${{ matrix.tox-env }}-sqlalatest --sitepackages -- -v --cov geoalchemy2 --cov-report term-missing

      - name: Upload coverage to Coveralls
        run: |
          pip install coveralls
          coveralls

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
```