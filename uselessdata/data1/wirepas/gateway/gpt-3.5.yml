name: Python CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    services:
      docker:

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Style check
        run: |
          ./.ci/style-check.sh

      - name: Build images
        run: |
          ./.ci/build-images.sh

      - name: Service tests
        run: |
          ./.ci/service-tests.sh

      - name: Fetch artifacts
        run: |
          ./.ci/fetch-artifacts.sh

      - name: Install package
        run: |
          pip install ./dist/${{ env.PYTHON_PKG_NAME }}*linux_x86_64.whl

      - name: Run tests
        run: |
          pytest -s python_transport/tests

      - name: Release
        run: |
          ./.ci/releases.sh
          source releases.env

      - name: Deploy releases
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_RELEASE_DRAFT: true
          GH_RELEASE_NAME: ${{ env.GH_RELEASE_NAME }}
          GH_RELEASE_BODY: ${{ env.GH_RELEASE_BODY }}
          GH_RELEASE_CANDIDATE: ${{ env.GH_RELEASE_CANDIDATE }}
        run: |
          bash .ci/deploy-pypi.sh ${GITHUB_WORKSPACE}/dist/${{ env.PYTHON_PKG_NAME }}*
          bash .ci/deploy-docker.sh
          bash .ci/deploy-docker.sh

      env:
        PIPENV_VENV_IN_PROJECT: 1
        PIPENV_IGNORE_VIRTUALENVS: 1
        PYTHON_PKG_PATH: python_transport
        PYTHON_PKG_NAME: wirepas_gateway