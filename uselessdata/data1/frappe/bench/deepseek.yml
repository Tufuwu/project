```yaml
name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        include:
          - python-version: '3.9'
            test-script: "python bench/tests/test_init.py TestBenchInit.basic"
          - python-version: '3.10'
            test-script: "python bench/tests/test_init.py TestBenchInit.basic"
          - python-version: '3.9'
            test-script: "python bench/tests/test_setup_production.py TestSetupProduction.production"
          - python-version: '3.10'
            test-script: "python bench/tests/test_setup_production.py TestSetupProduction.production"
          - python-version: '3.9'
            test-script: "python -m unittest -v bench.tests.test_utils && python -m unittest -v bench.tests.test_init"
          - python-version: '3.10'
            test-script: "python -m unittest -v bench.tests.test_utils && python -m unittest -v bench.tests.test_init"

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install MariaDB
      run: |
        sudo apt-get update
        sudo apt-get install -y mariadb-server

    - name: Configure MariaDB
      run: |
        sudo systemctl start mariadb
        sudo mysql -e "UPDATE mysql.user SET Password=PASSWORD('root') WHERE User='root';"
        sudo mysql -e "SET GLOBAL character_set_server = 'utf8mb4';"
        sudo mysql -e "SET GLOBAL collation_server = 'utf8mb4_unicode_ci';"
        sudo mysql -e "FLUSH PRIVILEGES;"

    - name: Install wkhtmltopdf
      run: |
        wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb
        sudo apt install ./wkhtmltox_0.12.6-1.focal_amd64.deb

    - name: Install Node.js 14
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Set up environment
      run: |
        mkdir -p ~/.bench
        cp -r $GITHUB_WORKSPACE/* ~/.bench
        python -m pip install -U --no-cache-dir --force-reinstall urllib3 pyOpenSSL ndg-httpsclient pyasn1 wheel setuptools pip
        python -m pip install -U -e ~/.bench

    - name: Run tests
      run: ${{ matrix.test-script }}
```