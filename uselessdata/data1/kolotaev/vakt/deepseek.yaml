name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: vakt_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vakt_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12-dev', 'pypy-3.9', 'pypy-3.10']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install MongoDB
      run: |
        wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1604-4.2.1.tgz
        tar zxf mongodb-linux-x86_64-ubuntu1604-4.2.1.tgz
        echo "$(pwd)/mongodb-linux-x86_64-ubuntu1604-4.2.1/bin" >> $GITHUB_PATH

    - name: Initialize MongoDB
      run: |
        mkdir -p data/db
        mongod --dbpath=data/db --fork --logpath /dev/null
        sleep 5
        mongo vakt_db --eval 'db.createUser({user:"test_user",pwd:"test_password",roles:["readWrite"]});'

    - name: Create MySQL database
      run: mysql -h 127.0.0.1 -u root -proot -e 'ALTER DATABASE vakt_db CHARACTER SET utf8 COLLATE utf8_bin;'

    - name: Create PostgreSQL database
      run: psql -h 127.0.0.1 -U postgres -c "ALTER DATABASE vakt_db ENCODING='UTF8';"
      env:
        PGPASSWORD: postgres

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: make deps

    - name: Run tests with coverage (MySQL)
      env:
        DATABASE_DSN: mysql+pymysql://root:root@127.0.0.1/vakt_db
      run: make coverage

    - name: Test SQLite integration
      run: DATABASE_DSN="sqlite:///:memory:" make test-sql-i

    - name: Test PostgreSQL integration
      env:
        DATABASE_DSN: postgresql+psycopg2cffi://postgres:postgres@localhost/vakt_db
      run: make test-sql-i

    - name: Run performance tests
      run: make bench

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3