name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
jobs:
  test:
    runs-on: ubuntu-16.04
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.7
    - run: sudo apt-get install libdbus-1-dev libdbus-glib-1-dev --yes
    - run: pip install --upgrade pip
    - run: pip install -r requirements.txt
    - run: export PYTHONPATH=$PYTHONPATH:$PWD:$PWD/spotify_lyric
    - run: cd tests/
    - run: python -m unittest discover . "*_test.py"
    - run: cd ..
    - run: pip install pyinstaller
    - run: pyinstaller SpotifyLyrics.pyw -F -w -i icon.ico --add-data "icon.png:." --additional-hooks-dir=pyinstaller_hooks
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: dist/SpotifyLyrics
        prerelease: true
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"
  test_2:
    runs-on: macos-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "${{ github.workspace }}/.cache/pip"
        key: "${{ runner.os }}-path"
    - run: python3 --version
    - run: pip3 install -r requirements.txt
    - run: export PYTHONPATH=$PYTHONPATH:$PWD:$PWD/spotify_lyric
    - run: cd tests/
    - run: python3 -m unittest discover . "*_test.py"
    - run: cd ..
    - run: pip3 install pyinstaller
    - run: pyinstaller SpotifyLyrics.pyw -F -w -i icon.icns --add-data "icon.png:." --additional-hooks-dir=pyinstaller_hooks
    - run: cd dist/
    - run: zip -r SpotifyLyrics.app.zip SpotifyLyrics.app
    - run: cd ..
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: dist/SpotifyLyrics.app.zip
        prerelease: true
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"
  test_3:
    runs-on: windows-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "$LOCALAPPDATA/pip/cache"
        key: "${{ runner.os }}-path"
    - run: choco install python --version=3.7.8
    - run: export PATH="/C/Python37:/C/Python37/Scripts:$PATH"
    - run: python -m pip install -r requirements.txt
    - run: export PYTHONPATH="$PYTHONPATH;C:\Users\travis\build\SimonIT\spotifylyrics;C:\Users\travis\build\SimonIT\spotifylyrics\spotify_lyric"
    - run: cd tests/
    - run: python -m unittest discover . "*_test.py"
    - run: cd ..
    - run: python -m pip install pyinstaller
    - run: pyinstaller SpotifyLyrics.pyw -F -w -i icon.ico --add-data "icon.png;." --additional-hooks-dir=pyinstaller_hooks
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: dist/SpotifyLyrics.exe
        prerelease: true
      if: "${{ github.event_name == 'push' && ${{ github.ref }} }}"