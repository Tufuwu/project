name: CI/CD

on:
  push:
    tags: true
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9, 3.10]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        if [[ ${{ matrix.os }} == "ubuntu-latest" ]]; then
          sudo apt-get install libdbus-1-dev libdbus-glib-1-dev --yes
        fi
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=${{ github.workspace }}:${{ github.workspace }}/spotify_lyric" >> $GITHUB_ENV
    - name: Run tests
      run: |
        cd tests/
        python -m unittest discover . "*_test.py"
        cd ..

  build-and-deploy:
    needs: build-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        if [[ ${{ matrix.os }} == "ubuntu-latest" ]]; then
          sudo apt-get install libdbus-1-dev libdbus-glib-1-dev --yes
        fi
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=${{ github.workspace }}:${{ github.workspace }}/spotify_lyric" >> $GITHUB_ENV
    - name: Build with PyInstaller
      run: |
        if [[ ${{ matrix.os }} == "macos-latest" ]]; then
          pyinstaller SpotifyLyrics.pyw -F -w -i icon.icns --add-data "icon.png:." --additional-hooks-dir=pyinstaller_hooks
          cd dist/
          zip -r SpotifyLyrics.app.zip SpotifyLyrics.app
          cd ..
        else
          pyinstaller SpotifyLyrics.pyw -F -w -i icon.ico --add-data "icon.png;." --additional-hooks-dir=pyinstaller_hooks
        fi
    - name: Deploy to GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        name: prerelease
        draft: false
        prerelease: true
        token: ${{ secrets.GH_TOKEN }}
        files: |
          dist/SpotifyLyrics
          dist/SpotifyLyrics.app.zip
      if: github.ref == 'refs/tags/*'
