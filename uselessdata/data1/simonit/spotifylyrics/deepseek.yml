```yaml
name: CI

on:
  push:
    tags: true
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python '3.9'
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install system dependencies
        run: sudo apt-get install libdbus-1-dev libdbus-glib-1-dev --yes
      - name: Upgrade pip
        run: pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Set PYTHONPATH
        run: export PYTHONPATH=$PYTHONPATH:$PWD:$PWD/spotify_lyric
      - name: Run tests
        run: |
          cd tests/
          python -m unittest discover . "*_test.py"
          cd ..
      - name: Install pyinstaller
        run: pip install pyinstaller
      - name: Build executable
        run: pyinstaller SpotifyLyrics.pyw -F -w -i icon.ico --add-data "icon.png:." --additional-hooks-dir=pyinstaller_hooks
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/SpotifyLyrics
          asset_name: SpotifyLyrics
          asset_content_type: application/octet-stream

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python '3.9'
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: pip3 install -r requirements.txt
      - name: Set PYTHONPATH
        run: export PYTHONPATH=$PYTHONPATH:$PWD:$PWD/spotify_lyric
      - name: Run tests
        run: |
          cd tests/
          python3 -m unittest discover . "*_test.py"
          cd ..
      - name: Install pyinstaller
        run: pip3 install pyinstaller
      - name: Build executable
        run: pyinstaller SpotifyLyrics.pyw -F -w -i icon.icns --add-data "icon.png:." --additional-hooks-dir=pyinstaller_hooks
      - name: Zip macOS app
        run: |
          cd dist/
          zip -r SpotifyLyrics.app.zip SpotifyLyrics.app
          cd ..
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/SpotifyLyrics.app.zip
          asset_name: SpotifyLyrics.app.zip
          asset_content_type: application/zip

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python '3.9'
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: python -m pip install -r requirements.txt
      - name: Set PYTHONPATH
        run: $env:PYTHONPATH="$env:PYTHONPATH;$PWD;$PWD\spotify_lyric"
      - name: Run tests
        run: |
          cd tests/
          python -m unittest discover . "*_test.py"
          cd ..
      - name: Install pyinstaller
        run: python -m pip install pyinstaller
      - name: Build executable
        run: pyinstaller SpotifyLyrics.pyw -F -w -i icon.ico --add-data "icon.png;." --additional-hooks-dir=pyinstaller_hooks
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/SpotifyLyrics.exe
          asset_name: SpotifyLyrics.exe
          asset_content_type: application/octet-stream
```