name: Python CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install nose
        pip install nose2
        pip install flake8
        pip install pylint==2.6.0
        git clone -v https://github.com/ARM-software/devlib.git /tmp/devlib && cd /tmp/devlib && python setup.py install
        cd $GITHUB_WORKSPACE && python setup.py install

    - name: Run tests
      run: |
        PYLINT="cd $GITHUB_WORKSPACE && ./dev_scripts/pylint wa"
        PEP8="cd $GITHUB_WORKSPACE && ./dev_scripts/pep8 wa"
        NOSETESTS="nose2 -s $GITHUB_WORKSPACE/tests"
        WORKLOAD="cd /tmp && wa run $GITHUB_WORKSPACE/tests/travis/idle_agenda.yaml -v -d idle_workload"
        PROCESS_CMD="$WORKLOAD && wa process -f -p csv idle_workload"
        SHOW_CMD="wa show dhrystone && wa show generic_android && wa show trace-cmd && wa show csv"
        LIST_CMD="wa list all"
        CREATE_CMD="wa create agenda dhrystone generic_android csv trace_cmd && wa create package test && wa create workload test"
        
        if [ "$TEST" = "$PYLINT" ]; then
          echo $PYLINT && eval $PYLINT
        elif [ "$TEST" = "$PEP8" ]; then
          echo $PEP8 && eval $PEP8
        elif [ "$TEST" = "$NOSETESTS" ]; then
          echo $NOSETESTS && eval $NOSETESTS
        elif [ "$TEST" = "$WORKLOAD" ]; then
          echo $WORKLOAD && eval $WORKLOAD
        else
          echo "$PROCESS_CMD && $SHOW_CMD && $LIST_CMD && $CREATE_CMD" && eval "$PROCESS_CMD && $SHOW_CMD && $LIST_CMD && $CREATE_CMD"
        fi