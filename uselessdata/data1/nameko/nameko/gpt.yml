name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Generate matrix
        id: set-matrix
        run: |
          echo "::set-output name=matrix::{\"include\": [{\"stage\": \"static\", \"python-version\": \"3.9\", \"tox-env\": \"py39-static\"}, {\"stage\": \"static\", \"python-version\": \"3.10\", \"tox-env\": \"py310-static\"}, {\"stage\": \"docs\", \"python-version\": \"3.9\", \"tox-env\": \"docs\"}, {\"stage\": \"examples\", \"python-version\": \"3.9\", \"tox-env\": \"py39-examples\"}, {\"stage\": \"test\", \"python-version\": \"3.9\", \"tox-env\": \"py39-oldest-lib\"}, {\"stage\": \"test\", \"python-version\": \"3.9\", \"tox-env\": \"py39-pinned-lib\"}, {\"stage\": \"test\", \"python-version\": \"3.9\", \"tox-env\": \"py39-latest-lib\"}, {\"stage\": \"test\", \"python-version\": \"3.9\", \"tox-env\": \"py39-extra-lib\"}, {\"stage\": \"deploy\", \"tox-env\": \"skip\"}, {\"stage\": \"mastereventlet\", \"python-version\": \"3.9\", \"tox-env\": \"py39-mastereventlet\"}, {\"stage\": \"branchcoverage\", \"python-version\": \"3.9\", \"tox-env\": \"py39-branchcoverage-lib\"}]}"

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Start RabbitMQ and copy SSL certificates
        run: |
          docker run -d --rm -p 15672:15672 -p 5672:5672 -p 5671:5671 --name nameko-rabbitmq nameko/nameko-rabbitmq:3.6.6
          docker cp nameko-rabbitmq:/srv/ssl certs

      - name: Install toxiproxy
        run: |
          mkdir -p $PWD/bin
          wget -O $PWD/bin/toxiproxy-server https://github.com/Shopify/toxiproxy/releases/download/v2.0.0/toxiproxy-server-linux-amd64
          chmod +x $PWD/bin/toxiproxy-server
          export PATH=$PATH:$PWD/bin/

      - name: Install libenchant-dev
        run: sudo apt-get install -y libenchant-dev

      - name: Run tox
        run: tox -e ${{ matrix.tox-env }}

  deploy:
    needs: build
    if: github.event_name == 'push' && contains(github.ref, 'tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/

This GitHub Actions configuration file replicates the functionality of the provided Travis CI configuration file, with the following adjustments:
- Python versions have been updated to 3.9 and above.
- The matrix strategy is used to handle different stages and environments.
- Docker is used to start RabbitMQ and copy SSL certificates.
- Toxiproxy is installed and configured.
- Dependencies are installed, including `libenchant-dev`.
