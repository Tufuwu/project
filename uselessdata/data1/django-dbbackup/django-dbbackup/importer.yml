name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: "${{ matrix.python }}"
    - run: TOX_ENV=py${TRAVIS_PYTHON_VERSION}-django${DJANGO}
    - run: pip install virtualenv tox
    - run: tox -e $TOX_ENV --notest
    - run: tox -e $TOX_ENV
    - run: tox -e $TOX_ENV -- pip install coveralls
      if: "${{ success() }}"
    - run: tox -e $TOX_ENV -- coveralls $COVERALLS_OPTION
      if: "${{ success() }}"
    strategy:
      matrix:
        DJANGO:
        - '2.2'
        - '3.0'
        - master
        python:
        - '3.6'
        - '3.7'
        - '3.8'
        - pypy
        - pypy3
        - nightly
        exclude:
        - DJANGO: '2.2'
          python: pypy
        - DJANGO: '3.0'
          python: pypy
        - DJANGO: master
          python: pypy
#       # 'allow_failures' transformations are currently unsupported.
    services:
      mysql:
        image: mysql
      postgresql:
        image: postgres
      mongodb:
        image: mongo
    env:
      DJANGO: "${{ matrix.DJANGO }}"
  test_2:
    runs-on: ubuntu-latest
    env:
      TOX_ENV: lint
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.7'
    - run: pip install tox
    - run: tox -e $TOX_ENV
    - run: tox -e $TOX_ENV -- pip install coveralls
      if: "${{ success() }}"
    - run: tox -e $TOX_ENV -- coveralls $COVERALLS_OPTION
      if: "${{ success() }}"
    services:
      mysql:
        image: mysql
      postgresql:
        image: postgres
      mongodb:
        image: mongo
  test_3:
    runs-on: ubuntu-latest
    env:
      TOX_ENV: docs
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.7'
    - run: pip install tox
    - run: tox -e $TOX_ENV
    - run: tox -e $TOX_ENV -- pip install coveralls
      if: "${{ success() }}"
    - run: tox -e $TOX_ENV -- coveralls $COVERALLS_OPTION
      if: "${{ success() }}"
    services:
      mysql:
        image: mysql
      postgresql:
        image: postgres
      mongodb:
        image: mongo
  test_4:
    runs-on: ubuntu-latest
    env:
      TOX_ENV: functional
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.7'
    - run: mysql -e 'CREATE DATABASE test;'
    - run: psql -c 'CREATE DATABASE test;' -U postgres
    - run: pip install tox
    - run: export PYTHON='coverage run -a'
    - run: tox -e $TOX_ENV
    - run: DB_ENGINE=django.db.backends.mysql DB_USER=travis DB_HOST=localhost DB_NAME=test tox -e $TOX_ENV
    - run: DB_ENGINE=django.db.backends.postgresql DB_USER=postgres DB_HOST=localhost DB_NAME=test tox -e $TOX_ENV
    - run: CONNECTOR=dbbackup.db.postgresql.PgDumpBinaryConnector DB_ENGINE=django.db.backends.postgresql DB_USER=postgres DB_HOST=localhost DB_NAME=test tox -e $TOX_ENV
    - run: tox -e $TOX_ENV -- pip install coveralls
      if: "${{ success() }}"
    - run: tox -e $TOX_ENV -- coveralls $COVERALLS_OPTION
      if: "${{ success() }}"
    services:
      mysql:
        image: mysql
      postgresql:
        image: postgres
      mongodb:
        image: mongo
  test_5:
    runs-on: ubuntu-latest
    env:
      TOX_ENV: functional-mongodb
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.7'
    - run: pip install tox
    - run: export PYTHON='coverage run -a'
    - run: DB_ENGINE=djongo DB_NAME=test tox -e $TOX_ENV
    - run: tox -e $TOX_ENV -- pip install coveralls
      if: "${{ success() }}"
    - run: tox -e $TOX_ENV -- coveralls $COVERALLS_OPTION
      if: "${{ success() }}"
    services:
      mysql:
        image: mysql
      postgresql:
        image: postgres
      mongodb:
        image: mongo