```yaml
name: CI

on:
  push:
    branches: [master]
    tags: ['*']
  pull_request:

jobs:
  test:
    name: Test (${{ matrix.os }} / Python ${{ matrix.python }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: ['3.9', '3.10']
        exclude:
          - os: windows-latest
            python: '3.9'
          - os: windows-latest
            python: '3.10'
        include:
          - os: windows-latest
            python: '3.9'
            env:
              SKIP: check-executables-have-shebangs
              PATH: C:\Python39;C:\Python39\Scripts;${{ env.PATH }}
          - os: windows-latest
            python: '3.10'
            env:
              SKIP: check-executables-have-shebangs
              PATH: C:\Python310;C:\Python310\Scripts;${{ env.PATH }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pre-commit setuptools wheel
          python -m pip install -r requirements.txt
          python setup.py install
      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure
      - name: Run tests
        run: python -m unittest --verbose
      - name: Build documentation and packages
        run: |
          mkdir html
          git fetch --all
          python -I -m sphinx_multiversion -W docs html
          python setup.py build sdist bdist_wheel

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pre-commit setuptools wheel
          python -m pip install -r requirements.txt
          python setup.py install
      - name: Prepare artifacts
        run: |
          touch html/.nojekyll
          cp assets/gh-pages-redirect.html html/index.html
          python setup.py build sdist bdist_wheel
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          skip_existing: true
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/*
          asset_name: ${{ github.ref_name }}
      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./html
          keep_history: false
```