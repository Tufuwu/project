name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9, 3.10]
        tox-env: [
          flake8, check_rst, coverage,
          py39-django22, py39-django32, py39-django40,
          py310-django32, py310-django40, py310-django41
        ]
        include:
          - os: ubuntu-latest
            python-version: 3.8
            tox-env: py38-django22
          - os: ubuntu-latest
            python-version: 3.7
            tox-env: py37-django111
          - os: ubuntu-latest
            python-version: 3.6
            tox-env: py36-django111
            arch: ppc64le
          - os: ubuntu-latest
            python-version: 3.6
            tox-env: py36-django22
            arch: ppc64le
          - os: ubuntu-latest
            python-version: 3.8
            tox-env: py38-django22
            arch: ppc64le
          - os: ubuntu-latest
            python-version: 3.9
            tox-env: py39-django22
            arch: ppc64le
          - os: ubuntu-latest
            python-version: 3.10
            tox-env: py310-django32
            arch: ppc64le

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install tox
    - name: Run tox
      run: tox -e ${{ matrix.tox-env }}
    - name: Log tox output
      run: cat tox_log/*.log
