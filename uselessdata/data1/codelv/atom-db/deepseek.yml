```yaml
name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        database: ['mysql', 'postgresql']
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgresql:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U atom motor aiomysql aiopg
        pip install -U 'sqlalchemy<1.4'
        pip install -U codecov pytest pytest-coverage pytest-asyncio faker mypy isort black
        python setup.py develop
    - name: Run tests
      env:
        DATABASE_URL: ${{ matrix.database == 'mysql' && 'mysql://root:root@127.0.0.1:3306/test_atomdb' || 'postgres://postgres:postgres@127.0.0.1:5432/test_atomdb' }}
      run: |
        pytest -v tests --cov atomdb --cov-report xml
        mypy atomdb --ignore-missing-imports
        black atomdb --check --diff
        isort atomdb --check --diff
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
```