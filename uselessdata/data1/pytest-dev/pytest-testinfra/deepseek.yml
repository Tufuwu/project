```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          sudo modprobe ip6table_filter iptable_filter
          pip install tox
      - name: Run flake8
        run: tox -e flake8

  check-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          sudo modprobe ip6table_filter iptable_filter
          pip install tox
      - name: Run check-manifest
        run: tox -e check-manifest

  sphinxdoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          sudo modprobe ip6table_filter iptable_filter
          pip install tox
      - name: Run sphinxdoc
        run: tox -e sphinxdoc

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          sudo modprobe ip6table_filter iptable_filter
          pip install tox
      - name: Run tests
        run: tox -e py3

  deploy:
    if: github.repository == 'pytest-dev/pytest-testinfra' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          sudo modprobe ip6table_filter iptable_filter
          pip install tox
      - name: Publish to PyPI
        run: |
          pip install twine
          python setup.py sdist bdist_wheel
          twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
```