```yaml
name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        env:
          - { PG: '9.6', DJANGO: '2.1' }
          - { PG: '10', DJANGO: '2.1' }
          - { PG: '11', DJANGO: '2.1' }
          - { PG: '12', DJANGO: '2.1' }
          - { PG: '9.6', DJANGO: '2.2' }
          - { PG: '10', DJANGO: '2.2' }
          - { PG: '11', DJANGO: '2.2' }
          - { PG: '12', DJANGO: '2.2' }
          - { PG: '9.6', DJANGO: '3.0' }
          - { PG: '10', DJANGO: '3.0' }
          - { PG: '11', DJANGO: '3.0' }
          - { PG: '12', DJANGO: '3.0' }
          - { PG: '9.6', DJANGO: '3.1' }
          - { PG: '10', DJANGO: '3.1' }
          - { PG: '11', DJANGO: '3.1' }
          - { PG: '12', DJANGO: '3.1' }
    services:
      postgres:
        image: postgres:${{ matrix.env.PG }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: --health-cmd "rabbitmq-diagnostics -q ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dirmngr apt-transport-https unzip
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E0C56BD4
          echo "deb http://repo.yandex.ru/clickhouse/deb/stable/ main/" | sudo tee /etc/apt/sources.list.d/clickhouse.list
          sudo apt-get update
          sudo apt-get install -y clickhouse-client clickhouse-server clickhouse-common-static
          sudo service clickhouse-server restart

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install -q Django==${{ matrix.env.DJANGO }}.*
          python setup.py -q install

      - name: Set up PostgreSQL
        run: |
          psql -c 'CREATE ROLE test;' -U postgres
          psql -c 'ALTER ROLE test WITH SUPERUSER;' -U postgres
          psql -c 'ALTER ROLE test WITH LOGIN;' -U postgres
          psql -c "ALTER ROLE test PASSWORD 'test';" -U postgres
          psql -c 'CREATE DATABASE test OWNER test;' -U postgres
          psql -c 'CREATE DATABASE test2 OWNER test;' -U postgres

      - name: Run tests
        run: python runtests.py
```