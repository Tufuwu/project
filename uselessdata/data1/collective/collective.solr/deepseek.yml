```yaml
name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        include:
          - python-version: '3.9'
            PLONE_VERSION: 5.2.x
            SOLR_VERSION: 7.7.2
            EXTRA_EGGS: ""
          - python-version: '3.9'
            PLONE_VERSION: 5.2.x
            SOLR_VERSION: 8.2.0
            EXTRA_EGGS: ""
          - python-version: '3.10'
            PLONE_VERSION: 5.2.x
            SOLR_VERSION: 7.7.2
            EXTRA_EGGS: ""
          - python-version: '3.10'
            PLONE_VERSION: 5.2.x
            SOLR_VERSION: 8.2.0
            EXTRA_EGGS: ""
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Install ChromeDriver
        run: |
          wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin

      - name: Set up virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install zest.pocompile
          pocompile src

      - name: Configure buildout
        run: |
          sed -ie "s#plone-.\..\.x\.cfg#plone-${{ matrix.PLONE_VERSION }}.cfg#" buildout.cfg
          sed -ie "s#eggs +=#eggs += ${{ matrix.EXTRA_EGGS }}#" buildout.cfg
          sed -ie "s#solr/.\..\..#solr/${{ matrix.SOLR_VERSION }}#" base.cfg
          sed -ie "s#solr-.\..\..#solr-${{ matrix.SOLR_VERSION }}#" base.cfg
          cat base.cfg
          cat buildout.cfg
          venv/bin/buildout -N -t 20

      - name: Run code analysis
        run: |
          source venv/bin/activate
          bin/code-analysis
          if [ -f "bin/black" ]; then bin/black src/ --check ; fi

      - name: Run tests
        run: |
          source venv/bin/activate
          bin/coverage run bin/test
          export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all

      - name: Upload coverage to Coveralls
        run: |
          source venv/bin/activate
          pip install -q coveralls python-coveralls==2.5.0
          coveralls
```