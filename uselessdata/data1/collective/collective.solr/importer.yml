name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
jobs:
  test:
    runs-on: ubuntu-16.04
    env:
      PLONE_VERSION: 4.3.x
      SOLR_VERSION: 7.7.2
      EXTRA_EGGS: collective.indexing
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "${{ github.workspace }}/buildout-cache"
        key: "${{ runner.os }}-path"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 2.7
#     # 'chrome' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
    - run: unzip chromedriver_linux64.zip
    - run: sudo mv chromedriver /usr/local/bin
    - run: export DISPLAY=:99.0
    - run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - run: mkdir -p ${{ github.workspace }}/buildout-cache/{eggs,downloads}
    - run: virtualenv .
    - run: bin/pip install --upgrade -r requirements.txt
    - run: bin/pip install zest.pocompile
    - run: bin/pocompile src
    - run: sed -ie "s#plone-.\..\.x\.cfg#plone-$PLONE_VERSION.cfg#" buildout.cfg
    - run: sed -ie "s#eggs +=#eggs += $EXTRA_EGGS#" buildout.cfg
    - run: sed -ie "s#solr/.\..\..#solr/$SOLR_VERSION#" base.cfg
    - run: sed -ie "s#solr-.\..\..#solr-$SOLR_VERSION#" base.cfg
    - run: cat base.cfg
    - run: cat buildout.cfg
    - run: bin/buildout -N -t 20
    - run: bin/code-analysis
    - run: if [ -f "bin/black" ]; then bin/black src/ --check ; fi
    - run: bin/coverage run bin/test
    - run: export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all
    - run: pip install -q coveralls python-coveralls==2.5.0
      if: "${{ success() }}"
    - run: coveralls
      if: "${{ success() }}"
  test_2:
    runs-on: ubuntu-16.04
    env:
      PLONE_VERSION: 4.3.x
      SOLR_VERSION: 8.2.0
      EXTRA_EGGS: collective.indexing
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "${{ github.workspace }}/buildout-cache"
        key: "${{ runner.os }}-path"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 2.7
#     # 'chrome' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
    - run: unzip chromedriver_linux64.zip
    - run: sudo mv chromedriver /usr/local/bin
    - run: export DISPLAY=:99.0
    - run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - run: mkdir -p ${{ github.workspace }}/buildout-cache/{eggs,downloads}
    - run: virtualenv .
    - run: bin/pip install --upgrade -r requirements.txt
    - run: bin/pip install zest.pocompile
    - run: bin/pocompile src
    - run: sed -ie "s#plone-.\..\.x\.cfg#plone-$PLONE_VERSION.cfg#" buildout.cfg
    - run: sed -ie "s#eggs +=#eggs += $EXTRA_EGGS#" buildout.cfg
    - run: sed -ie "s#solr/.\..\..#solr/$SOLR_VERSION#" base.cfg
    - run: sed -ie "s#solr-.\..\..#solr-$SOLR_VERSION#" base.cfg
    - run: cat base.cfg
    - run: cat buildout.cfg
    - run: bin/buildout -N -t 20
    - run: bin/code-analysis
    - run: if [ -f "bin/black" ]; then bin/black src/ --check ; fi
    - run: bin/coverage run bin/test
    - run: export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all
    - run: pip install -q coveralls python-coveralls==2.5.0
      if: "${{ success() }}"
    - run: coveralls
      if: "${{ success() }}"
  test_3:
    runs-on: ubuntu-16.04
    env:
      PLONE_VERSION: 5.1.x
      SOLR_VERSION: 7.7.2
      EXTRA_EGGS: "${{ secrets.EXTRA_EGGS }}"
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "${{ github.workspace }}/buildout-cache"
        key: "${{ runner.os }}-path"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 2.7
#     # 'chrome' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
    - run: unzip chromedriver_linux64.zip
    - run: sudo mv chromedriver /usr/local/bin
    - run: export DISPLAY=:99.0
    - run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - run: mkdir -p ${{ github.workspace }}/buildout-cache/{eggs,downloads}
    - run: virtualenv .
    - run: bin/pip install --upgrade -r requirements.txt
    - run: bin/pip install zest.pocompile
    - run: bin/pocompile src
    - run: sed -ie "s#plone-.\..\.x\.cfg#plone-$PLONE_VERSION.cfg#" buildout.cfg
    - run: sed -ie "s#eggs +=#eggs += $EXTRA_EGGS#" buildout.cfg
    - run: sed -ie "s#solr/.\..\..#solr/$SOLR_VERSION#" base.cfg
    - run: sed -ie "s#solr-.\..\..#solr-$SOLR_VERSION#" base.cfg
    - run: cat base.cfg
    - run: cat buildout.cfg
    - run: bin/buildout -N -t 20
    - run: bin/code-analysis
    - run: if [ -f "bin/black" ]; then bin/black src/ --check ; fi
    - run: bin/coverage run bin/test
    - run: export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all
    - run: pip install -q coveralls python-coveralls==2.5.0
      if: "${{ success() }}"
    - run: coveralls
      if: "${{ success() }}"
  test_4:
    runs-on: ubuntu-16.04
    env:
      PLONE_VERSION: 5.1.x
      SOLR_VERSION: 8.2.0
      EXTRA_EGGS: "${{ secrets.EXTRA_EGGS }}"
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "${{ github.workspace }}/buildout-cache"
        key: "${{ runner.os }}-path"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 2.7
#     # 'chrome' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
    - run: unzip chromedriver_linux64.zip
    - run: sudo mv chromedriver /usr/local/bin
    - run: export DISPLAY=:99.0
    - run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - run: mkdir -p ${{ github.workspace }}/buildout-cache/{eggs,downloads}
    - run: virtualenv .
    - run: bin/pip install --upgrade -r requirements.txt
    - run: bin/pip install zest.pocompile
    - run: bin/pocompile src
    - run: sed -ie "s#plone-.\..\.x\.cfg#plone-$PLONE_VERSION.cfg#" buildout.cfg
    - run: sed -ie "s#eggs +=#eggs += $EXTRA_EGGS#" buildout.cfg
    - run: sed -ie "s#solr/.\..\..#solr/$SOLR_VERSION#" base.cfg
    - run: sed -ie "s#solr-.\..\..#solr-$SOLR_VERSION#" base.cfg
    - run: cat base.cfg
    - run: cat buildout.cfg
    - run: bin/buildout -N -t 20
    - run: bin/code-analysis
    - run: if [ -f "bin/black" ]; then bin/black src/ --check ; fi
    - run: bin/coverage run bin/test
    - run: export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all
    - run: pip install -q coveralls python-coveralls==2.5.0
      if: "${{ success() }}"
    - run: coveralls
      if: "${{ success() }}"
  test_5:
    runs-on: ubuntu-16.04
    env:
      PLONE_VERSION: 5.2.x
      SOLR_VERSION: 7.7.2
      EXTRA_EGGS: "${{ secrets.EXTRA_EGGS }}"
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "${{ github.workspace }}/buildout-cache"
        key: "${{ runner.os }}-path"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 2.7
#     # 'chrome' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
    - run: unzip chromedriver_linux64.zip
    - run: sudo mv chromedriver /usr/local/bin
    - run: export DISPLAY=:99.0
    - run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - run: mkdir -p ${{ github.workspace }}/buildout-cache/{eggs,downloads}
    - run: virtualenv .
    - run: bin/pip install --upgrade -r requirements.txt
    - run: bin/pip install zest.pocompile
    - run: bin/pocompile src
    - run: sed -ie "s#plone-.\..\.x\.cfg#plone-$PLONE_VERSION.cfg#" buildout.cfg
    - run: sed -ie "s#eggs +=#eggs += $EXTRA_EGGS#" buildout.cfg
    - run: sed -ie "s#solr/.\..\..#solr/$SOLR_VERSION#" base.cfg
    - run: sed -ie "s#solr-.\..\..#solr-$SOLR_VERSION#" base.cfg
    - run: cat base.cfg
    - run: cat buildout.cfg
    - run: bin/buildout -N -t 20
    - run: bin/code-analysis
    - run: if [ -f "bin/black" ]; then bin/black src/ --check ; fi
    - run: bin/coverage run bin/test
    - run: export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all
    - run: pip install -q coveralls python-coveralls==2.5.0
      if: "${{ success() }}"
    - run: coveralls
      if: "${{ success() }}"
  test_6:
    runs-on: ubuntu-16.04
    env:
      PLONE_VERSION: 5.2.x
      SOLR_VERSION: 8.2.0
      EXTRA_EGGS: "${{ secrets.EXTRA_EGGS }}"
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "${{ github.workspace }}/buildout-cache"
        key: "${{ runner.os }}-path"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 2.7
#     # 'chrome' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
    - run: unzip chromedriver_linux64.zip
    - run: sudo mv chromedriver /usr/local/bin
    - run: export DISPLAY=:99.0
    - run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - run: mkdir -p ${{ github.workspace }}/buildout-cache/{eggs,downloads}
    - run: virtualenv .
    - run: bin/pip install --upgrade -r requirements.txt
    - run: bin/pip install zest.pocompile
    - run: bin/pocompile src
    - run: sed -ie "s#plone-.\..\.x\.cfg#plone-$PLONE_VERSION.cfg#" buildout.cfg
    - run: sed -ie "s#eggs +=#eggs += $EXTRA_EGGS#" buildout.cfg
    - run: sed -ie "s#solr/.\..\..#solr/$SOLR_VERSION#" base.cfg
    - run: sed -ie "s#solr-.\..\..#solr-$SOLR_VERSION#" base.cfg
    - run: cat base.cfg
    - run: cat buildout.cfg
    - run: bin/buildout -N -t 20
    - run: bin/code-analysis
    - run: if [ -f "bin/black" ]; then bin/black src/ --check ; fi
    - run: bin/coverage run bin/test
    - run: export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all
    - run: pip install -q coveralls python-coveralls==2.5.0
      if: "${{ success() }}"
    - run: coveralls
      if: "${{ success() }}"
  test_7:
    runs-on: ubuntu-16.04
    env:
      PLONE_VERSION: 5.2.x
      SOLR_VERSION: 7.7.2
      EXTRA_EGGS: "${{ secrets.EXTRA_EGGS }}"
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "${{ github.workspace }}/buildout-cache"
        key: "${{ runner.os }}-path"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.7
#     # 'chrome' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
    - run: unzip chromedriver_linux64.zip
    - run: sudo mv chromedriver /usr/local/bin
    - run: export DISPLAY=:99.0
    - run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - run: mkdir -p ${{ github.workspace }}/buildout-cache/{eggs,downloads}
    - run: virtualenv .
    - run: bin/pip install --upgrade -r requirements.txt
    - run: bin/pip install zest.pocompile
    - run: bin/pocompile src
    - run: sed -ie "s#plone-.\..\.x\.cfg#plone-$PLONE_VERSION.cfg#" buildout.cfg
    - run: sed -ie "s#eggs +=#eggs += $EXTRA_EGGS#" buildout.cfg
    - run: sed -ie "s#solr/.\..\..#solr/$SOLR_VERSION#" base.cfg
    - run: sed -ie "s#solr-.\..\..#solr-$SOLR_VERSION#" base.cfg
    - run: cat base.cfg
    - run: cat buildout.cfg
    - run: bin/buildout -N -t 20
    - run: bin/code-analysis
    - run: if [ -f "bin/black" ]; then bin/black src/ --check ; fi
    - run: bin/coverage run bin/test
    - run: export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all
    - run: pip install -q coveralls python-coveralls==2.5.0
      if: "${{ success() }}"
    - run: coveralls
      if: "${{ success() }}"
  test_8:
    runs-on: ubuntu-16.04
    env:
      PLONE_VERSION: 5.2.x
      SOLR_VERSION: 8.2.0
      EXTRA_EGGS: "${{ secrets.EXTRA_EGGS }}"
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "${{ github.workspace }}/buildout-cache"
        key: "${{ runner.os }}-path"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.7
#     # 'chrome' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
    - run: unzip chromedriver_linux64.zip
    - run: sudo mv chromedriver /usr/local/bin
    - run: export DISPLAY=:99.0
    - run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - run: mkdir -p ${{ github.workspace }}/buildout-cache/{eggs,downloads}
    - run: virtualenv .
    - run: bin/pip install --upgrade -r requirements.txt
    - run: bin/pip install zest.pocompile
    - run: bin/pocompile src
    - run: sed -ie "s#plone-.\..\.x\.cfg#plone-$PLONE_VERSION.cfg#" buildout.cfg
    - run: sed -ie "s#eggs +=#eggs += $EXTRA_EGGS#" buildout.cfg
    - run: sed -ie "s#solr/.\..\..#solr/$SOLR_VERSION#" base.cfg
    - run: sed -ie "s#solr-.\..\..#solr-$SOLR_VERSION#" base.cfg
    - run: cat base.cfg
    - run: cat buildout.cfg
    - run: bin/buildout -N -t 20
    - run: bin/code-analysis
    - run: if [ -f "bin/black" ]; then bin/black src/ --check ; fi
    - run: bin/coverage run bin/test
    - run: export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all
    - run: pip install -q coveralls python-coveralls==2.5.0
      if: "${{ success() }}"
    - run: coveralls
      if: "${{ success() }}"
  test_9:
    runs-on: ubuntu-16.04
    env:
      PLONE_VERSION: 5.2.x
      SOLR_VERSION: 7.7.2
      EXTRA_EGGS: "${{ secrets.EXTRA_EGGS }}"
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "${{ github.workspace }}/buildout-cache"
        key: "${{ runner.os }}-path"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.8
#     # 'chrome' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
    - run: unzip chromedriver_linux64.zip
    - run: sudo mv chromedriver /usr/local/bin
    - run: export DISPLAY=:99.0
    - run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - run: mkdir -p ${{ github.workspace }}/buildout-cache/{eggs,downloads}
    - run: virtualenv .
    - run: bin/pip install --upgrade -r requirements.txt
    - run: bin/pip install zest.pocompile
    - run: bin/pocompile src
    - run: sed -ie "s#plone-.\..\.x\.cfg#plone-$PLONE_VERSION.cfg#" buildout.cfg
    - run: sed -ie "s#eggs +=#eggs += $EXTRA_EGGS#" buildout.cfg
    - run: sed -ie "s#solr/.\..\..#solr/$SOLR_VERSION#" base.cfg
    - run: sed -ie "s#solr-.\..\..#solr-$SOLR_VERSION#" base.cfg
    - run: cat base.cfg
    - run: cat buildout.cfg
    - run: bin/buildout -N -t 20
    - run: bin/code-analysis
    - run: if [ -f "bin/black" ]; then bin/black src/ --check ; fi
    - run: bin/coverage run bin/test
    - run: export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all
    - run: pip install -q coveralls python-coveralls==2.5.0
      if: "${{ success() }}"
    - run: coveralls
      if: "${{ success() }}"
  test_10:
    runs-on: ubuntu-16.04
    env:
      PLONE_VERSION: 5.2.x
      SOLR_VERSION: 8.2.0
      EXTRA_EGGS: "${{ secrets.EXTRA_EGGS }}"
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - name: Set up cache
      uses: actions/cache@v3.3.2
      with:
        path: "${{ github.workspace }}/buildout-cache"
        key: "${{ runner.os }}-path"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.8
#     # 'chrome' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
    - run: unzip chromedriver_linux64.zip
    - run: sudo mv chromedriver /usr/local/bin
    - run: export DISPLAY=:99.0
    - run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - run: mkdir -p ${{ github.workspace }}/buildout-cache/{eggs,downloads}
    - run: virtualenv .
    - run: bin/pip install --upgrade -r requirements.txt
    - run: bin/pip install zest.pocompile
    - run: bin/pocompile src
    - run: sed -ie "s#plone-.\..\.x\.cfg#plone-$PLONE_VERSION.cfg#" buildout.cfg
    - run: sed -ie "s#eggs +=#eggs += $EXTRA_EGGS#" buildout.cfg
    - run: sed -ie "s#solr/.\..\..#solr/$SOLR_VERSION#" base.cfg
    - run: sed -ie "s#solr-.\..\..#solr-$SOLR_VERSION#" base.cfg
    - run: cat base.cfg
    - run: cat buildout.cfg
    - run: bin/buildout -N -t 20
    - run: bin/code-analysis
    - run: if [ -f "bin/black" ]; then bin/black src/ --check ; fi
    - run: bin/coverage run bin/test
    - run: export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all
    - run: pip install -q coveralls python-coveralls==2.5.0
      if: "${{ success() }}"
    - run: coveralls
      if: "${{ success() }}"