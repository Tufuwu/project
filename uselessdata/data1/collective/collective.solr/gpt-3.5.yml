name: Python CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/buildout-cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install zest.pocompile

    - name: Setup Chrome
      run: |
        wget "http://chromedriver.storage.googleapis.com/2.44/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin
        export DISPLAY=:99.0
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

    - name: Build and test
      run: |
        sed -ie "s#plone-.\..\.x\.cfg#plone-$PLONE_VERSION.cfg#" buildout.cfg
        sed -ie "s#eggs +=#eggs += $EXTRA_EGGS#" buildout.cfg
        sed -ie "s#solr/.\..\..#solr/$SOLR_VERSION#" base.cfg
        sed -ie "s#solr-.\..\..#solr-$SOLR_VERSION#" base.cfg
        cat base.cfg
        cat buildout.cfg
        bin/buildout -N -t 20

    - name: Code analysis
      run: |
        bin/code-analysis
        if [ -f "bin/black" ]; then bin/black src/ --check ; fi
        bin/coverage run bin/test
        export ROBOTSUITE_PREFIX=ONLYROBOT && bin/test -t ONLYROBOT --all

    - name: Upload coverage
      run: |
        pip install -q coveralls python-coveralls==2.5.0
        coveralls