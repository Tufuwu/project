name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install 'gdal==2.2.3'
        pip install psycopg2==2.7.4
        pip install codecov coverage
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install isort flake8 black
        npm install
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '10'
    - name: Install Chrome
      run: sudo apt-get install -y chromium-browser
    - name: Install PostgreSQL
      run: sudo apt-get install -y postgresql postgresql-contrib postgis
    - name: Install TimescaleDB
      run: |
        sudo apt-get install -y postgresql-10-postgis-2.4
        sudo add-apt-repository -y ppa:timescale/timescaledb-ppa
        sudo apt-get update
        sudo apt-get install -y timescaledb-postgresql-10
        sudo bash -c "echo \"shared_preload_libraries = 'timescaledb'\" >>/etc/postgresql/10/main/postgresql.conf"
        sudo service postgresql restart
    - name: Setup PostgreSQL
      run: |
        sudo -u postgres psql -c "create extension postgis;"
        sudo -u postgres psql -c "create database openmeteo;"
    - name: Copy settings
      run: cp enhydris_project/settings/travis.py enhydris_project/settings/local.py
    - name: Run tests
      env:
        SELENIUM_WEBDRIVER: headless
      run: |
        python manage.py makemigrations --check
        black --check .
        flake8 --max-line-length=88 .
        isort --check-only --diff .
        npm run lint
        coverage run --include="./*" --omit="*/tests/*","*/tests.py","*/migrations/*","./enhydris_project/*" manage.py test -v2
        npm run test
    - name: Upload coverage to Codecov
      run: codecov
