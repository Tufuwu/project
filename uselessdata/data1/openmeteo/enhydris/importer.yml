name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
jobs:
  Python_3_9_unit_tests:
    runs-on: ubuntu-18.04
    env:
      SELENIUM_WEBDRIVER: headless
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.9
#     # 'chrome' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: apt-get -y install gdal-bin libgdal-dev postgresql-10-postgis-2.4
    - run: sudo add-apt-repository -y ppa:timescale/timescaledb-ppa
    - run: sudo apt-get update
    - run: sudo apt-get install -y timescaledb-postgresql-10
    - run: sudo bash -c "echo \"shared_preload_libraries = 'timescaledb'\" >>/etc/postgresql/10/main/postgresql.conf"
    - run: sudo service postgresql restart
    - run: CPLUS_INCLUDE_PATH=/usr/include/gdal C_INCLUDE_PATH=/usr/include/gdal pip install 'gdal==2.2.3'
    - run: pip install psycopg2==2.7.4
    - run: pip install codecov coverage
    - run: wget -O chromedriver_version https://chromedriver.storage.googleapis.com/LATEST_RELEASE_`google-chrome --version|awk '{ print $3 }'|awk -F. '{ print $1 }'`
    - run: wget https://chromedriver.storage.googleapis.com/`cat chromedriver_version`/chromedriver_linux64.zip
    - run: sudo unzip chromedriver_linux64.zip -d /usr/local/bin
    - run: pip install -r requirements.txt
    - run: pip install -r requirements-dev.txt
    - run: pip install isort flake8 black
    - run: nvm install 10
    - run: npm install
    - run: psql -U postgres -c "create extension postgis"
    - run: psql -U postgres -c "create database openmeteo"
    - run: cp enhydris_project/settings/travis.py enhydris_project/settings/local.py
    - run: python manage.py makemigrations --check
    - run: black --check .
    - run: flake8 --max-line-length=88 .
    - run: isort --check-only --diff .
    - run: npm run lint
    - run: coverage run --include="./*" --omit="*/tests/*","*/tests.py","*/migrations/*","./enhydris_project/*" manage.py test -v2
    - run: npm run test
    - run: codecov
      if: "${{ success() }}"
    services:
      postgresql:
        image: postgres:10