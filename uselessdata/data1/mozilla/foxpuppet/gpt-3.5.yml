name: Python CI

on: [push, pull_request]

jobs:
  flake8:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Run flake8
        run: |
          flake8

  docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs
      - name: Build docs
        run: |
          mkdocs build

  nightly:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run nightly tests
        run: |
          tox -e nightly

  dev:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run dev tests
        run: |
          tox -e dev

  beta:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run beta tests
        run: |
          tox -e beta

  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run release tests
        run: |
          tox -e release

  esr:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run esr tests
        run: |
          tox -e esr

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to PyPI
        uses: pypa/gh-action-pypi-publish@release
        with:
          user: davehunt
          password: ${{ secrets.PYPI_API_TOKEN }}
          distributions: 'sdist bdist_wheel'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags')

  geckodriver:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download geckodriver
        run: |
          wget -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux64.tar.gz
          mkdir $HOME/geckodriver && tar xvf /tmp/geckodriver.tar.gz -C $HOME/geckodriver
          export PATH=$HOME/geckodriver:$PATH
      - name: Check Firefox version
        run: firefox --version
      - name: Check geckodriver version
        run: geckodriver --version

```