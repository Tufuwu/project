```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        firefox-version: [nightly, dev, beta, release, esr]
    env:
      GECKODRIVER_VERSION: 0.24.0
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jwm
          pip install tox

      - name: Set up Firefox ${{ matrix.firefox-version }}
        run: |
          if [ "${{ matrix.firefox-version }}" == "nightly" ]; then
            sudo apt-get install -y firefox=latest-nightly
          elif [ "${{ matrix.firefox-version }}" == "dev" ]; then
            sudo apt-get install -y firefox=latest-dev
          elif [ "${{ matrix.firefox-version }}" == "beta" ]; then
            sudo apt-get install -y firefox=latest-beta
          elif [ "${{ matrix.firefox-version }}" == "release" ]; then
            sudo apt-get install -y firefox=latest
          elif [ "${{ matrix.firefox-version }}" == "esr" ]; then
            sudo apt-get install -y firefox=latest-esr
          fi

      - name: Download and set up Geckodriver
        run: |
          wget -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v${GECKODRIVER_VERSION}/geckodriver-v${GECKODRIVER_VERSION}-linux64.tar.gz
          mkdir $HOME/geckodriver && tar xvf /tmp/geckodriver.tar.gz -C $HOME/geckodriver
          echo "$HOME/geckodriver" >> $GITHUB_PATH

      - name: Check Firefox and Geckodriver versions
        run: |
          firefox --version
          geckodriver --version

      - name: Run Tox
        run: tox

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python '3.9'
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install tox

      - name: Run Flake8
        run: tox -e flake8

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python '3.9'
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install tox

      - name: Build Docs
        run: tox -e docs

  deploy:
    if: github.ref == 'refs/tags/*'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python '3.9'
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Deploy to PyPI
        env:
          TWINE_USERNAME: davehunt
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install twine
          python setup.py sdist bdist_wheel
          twine upload dist/*
```