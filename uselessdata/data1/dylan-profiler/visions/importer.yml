name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
env:
  JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
  HADOOP_VERSION: '2.7'
  SPARK_DIRECTORY: "../"
  SPARK_HOME: "../spark/"
  ARROW_PRE_0_15_IPC_FORMAT: '1'
  SPARK_LOCAL_IP: 127.0.0.1
jobs:
  validation:
    runs-on: ubuntu-18.04
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: "${{ matrix.python }}"
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - run: python -m pip install --upgrade pip setuptools wheel
    - run: pip install -r requirements.txt
    - run: pip install -r requirements_test.txt
    - run: pip install "$PIP"
    - run: |
        if [ "$TRAVIS_PYTHON_VERSION" = "3.8" ]; then
          export SPARK_VERSION=3.0.1
        else
          export SPARK_VERSION=2.4.7
        fi
    - run: make install-spark-ci
    - run: python setup.py sdist bdist_wheel
    - run: twine check dist/*
    - run: make install
    - run: pytest -m "not spark_test" tests/
    - run: pytest -m spark_test tests/
    strategy:
      matrix:
        PIP:
        - pandas<1
        - pandas>=1.0.3
        - swifter
        python:
        - '3.6'
        - '3.7'
        - '3.8'
    env:
      PIP: "${{ matrix.PIP }}"
  Linting:
    runs-on: ubuntu-18.04
    env:
      PIP: pandas<1
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
    - run: python -m pip install --upgrade pip setuptools wheel
    - run: pip install -r requirements.txt
    - run: pip install -r requirements_test.txt
    - run: pip install "$PIP"
    - run: |
        if [ "$TRAVIS_PYTHON_VERSION" = "3.8" ]; then
          export SPARK_VERSION=3.0.1
        else
          export SPARK_VERSION=2.4.7
        fi
    - run: make install-spark-ci
    - run: python setup.py sdist bdist_wheel
    - run: twine check dist/*
    - run: make install
    - run: make lint