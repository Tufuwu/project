```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        db: [POSTGRESQL, MYSQL]
    env:
      PYTHONWARNINGS: "default,ignore::PendingDeprecationWarning,ignore::ResourceWarning"
      DB: ${{ matrix.db }}

    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mysql:
        image: mysql:5.5
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install codecov
        pip install -e git+https://github.com/modoboa/modoboa.git#egg=modoboa
        pip install -r requirements.txt
        pip install -r test-requirements.txt
        python setup.py develop

    - name: Run tests
      run: |
        cd test_project
        mkdir -p media/webmail
        coverage run --source ../modoboa_webmail manage.py test modoboa_webmail

    - name: Upload coverage to Codecov
      run: codecov

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && matrix.db == 'POSTGRESQL'
    strategy:
      matrix:
        python-version: ['3.9']
        db: [POSTGRESQL]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test-requirements.txt
        python setup.py develop

    - name: Compile messages
      run: |
        cd modoboa_webmail
        django-admin compilemessages
        cd ..

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: tonio
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        python setup.py sdist bdist_wheel
        twine upload dist/*
```