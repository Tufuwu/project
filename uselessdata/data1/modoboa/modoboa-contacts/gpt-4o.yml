```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        db: [postgresql, mysql]

    services:
      postgres:
        image: postgres:9.6
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
      mysql:
        image: mysql:5.5
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          MYSQL_ROOT_PASSWORD: mysql
          MYSQL_DATABASE: test_db

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install codecov
        pip install -e git+https://github.com/modoboa/modoboa.git@1.x#egg=modoboa
        pip install -r requirements.txt
        pip install -r test-requirements.txt
        python setup.py develop

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'

    - name: Install frontend dependencies
      working-directory: frontend
      run: |
        npm prune
        npm install

    - name: Run tests
      run: |
        npm run test:unit
        cd test_project
        coverage run --source ../modoboa_contacts manage.py test modoboa_contacts

    - name: Upload coverage to Codecov
      run: |
        cd frontend
        codecov
        cd ../test_project
        codecov

  deploy:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        db: [postgresql]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r test-requirements.txt
        python setup.py develop

    - name: Build frontend
      working-directory: frontend
      run: npm run build

    - name: Compile messages
      run: |
        cd modoboa_contacts
        django-admin compilemessages

    - name: Deploy to PyPI
      uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
```