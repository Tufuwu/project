```yaml
name: CI

on:
  push:
    branches:
      - develop
      - 'releases/**'
  pull_request:
    branches:
      - develop
      - 'releases/**'

jobs:
  style-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade -r requirements.txt
          pip install --upgrade black flake8
      - name: Run style checks
        run: |
          black --diff --check .
          flake8

  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade -r requirements.txt
          python setup.py install
          python setup.py build_ext --inplace
          pip list
      - name: Run unit tests
        run: |
          PYTHONPATH=. coverage run $(which pytest)
      - name: Clone Caliper
        run: |
          git clone https://github.com/LLNL/Caliper.git
          cd Caliper
          mkdir build && mkdir install
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=../install ../
          make VERBOSE=1
          make install
          export PATH=${PWD}/../install/bin:${PATH}
          echo -e "PATH=" ${PATH}
          cd ../../
          echo -e "PWD:" ${PWD}
          which cali-query
      - name: Install additional dependencies for Python >= 3.6
        if: ${{ matrix.python-version >= '3.6' }}
        run: |
          pip install --upgrade scikit-build
          pip install --upgrade --no-cache-dir --no-deps -v timemory==3.2.0.dev4 --install-option=--disable-{c,gotcha,tools}
      - name: Run unit tests with coverage
        run: |
          PYTHONPATH=. coverage run $(which pytest)
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: PYTHON_VERSION
          flags: ${{ matrix.python-version }}
```