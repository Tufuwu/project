```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        plone-version: ['5.2.x']
      exclude:
        - python-version: '3.9'
          plone-version: '4.3.x'
        - python-version: '3.9'
          plone-version: '5.1.x'
        - python-version: '3.10'
          plone-version: '4.3.x'
        - python-version: '3.10'
          plone-version: '5.1.x'
        - python-version: '3.11'
          plone-version: '4.3.x'
        - python-version: '3.11'
          plone-version: '5.1.x'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache buildout
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/buildout-cache
          key: ${{ runner.os }}-buildout-${{ matrix.plone-version }}
          restore-keys: |
            ${{ runner.os }}-buildout-

      - name: Install dependencies
        run: |
          mkdir -p $HOME/buildout-cache/{eggs,downloads}
          pip install -r requirements.txt

      - name: Run buildout
        run: |
          sed -ie "s#plone-x.x.x.cfg#plone-${{ matrix.plone-version }}.cfg#" travis.cfg
          buildout -N -t 3 -c travis.cfg

      - name: Run black
        if: success() && steps.build.outputs.black-exists == 'true'
        run: bin/black src/ --check

      - name: Run code analysis
        run: bin/code-analysis

      - name: Run tests
        run: bin/test

      - name: Run test coverage
        run: bin/test-coverage

      - name: Upload coverage to Coveralls
        if: success()
        run: |
          pip install -q coveralls
          coveralls
```