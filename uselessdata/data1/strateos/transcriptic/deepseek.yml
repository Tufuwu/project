```yaml
name: CI

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        toxenv: [docs, lint, py39, py310]
        include:
          - python-version: '3.9'
            toxenv: docs
          - python-version: '3.9'
            toxenv: lint
          - python-version: '3.9'
            toxenv: clean,py39,stats_xml
            deploy: true
          - python-version: '3.10'
            toxenv: py310

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox codecov

    - name: Run tests
      run: tox -v

    - name: Upload coverage to Codecov
      if: success()
      run: codecov

    - name: Debug logs on failure
      if: failure()
      run: |
        more .tox/log/* | cat
        more .tox/*/log/* | cat

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/') && github.ref == 'refs/tags/v*.*.*' && needs.test.outputs.deploy == 'true'
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Build distribution
      run: |
        python setup.py sdist
        python setup.py bdist_wheel

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Automated release created by GitHub Actions.
        draft: false
        prerelease: false
```