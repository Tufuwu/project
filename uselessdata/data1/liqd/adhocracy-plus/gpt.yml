name: CI

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9, 3.10]

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_DB: django
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Install Node.js dependencies
      run: npm install

    - name: Build Node.js project
      run: npm run build

    - name: Install Python dependencies
      run: pip install -r requirements/dev.txt

    - name: Create databases
      run: |
        psql -c 'create database django;' -U postgres
        psql -c 'create database django_test;' -U postgres

    - name: Collect static files
      run: python manage.py collectstatic > /dev/null

    - name: Run tests
      run: py.test --cov

    - name: Check migrations
      run: python manage.py makemigrations --dry-run --check --noinput

    - name: Check import sorting
      run: isort --diff -c adhocracy-plus apps tests

    - name: Run flake8
      run: flake8 adhocracy-plus apps tests --exclude migrations,settings

    - name: Run linting
      run: npm run lint

    - name: Remove static files
      run: rm -rf static/

    - name: Deploy to production
      if: github.ref == 'refs/heads/master'
      env:
        DJANGO_SETTINGS_MODULE: adhocracy-plus.config.settings.travis
      run: scripts/deploy.sh
