```yaml
name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        node-version: ['8']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: |
        npm install
        pip install -r requirements/dev.txt
        pip install coveralls

    - name: Set up PostgreSQL
      run: |
        psql -c 'create database django;' -U postgres
        psql -c 'create database django_test;' -U postgres

    - name: Run tests
      run: |
        py.test --cov
        python manage.py makemigrations --dry-run --check --noinput
        isort --diff -c adhocracy4 tests
        flake8 adhocracy4 tests --exclude migrations,settings
        npm run lint

    - name: Upload coverage to Coveralls
      run: coveralls
      env:
        DJANGO_SETTINGS_MODULE: 'tests.project.travis'
```