name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
jobs:
  Python_3_7_on_Xenial_Linux:
    runs-on: ubuntu-16.04
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.7'
    - run: sudo apt-get update;
    - run: if [[ "${{ runner.os }}" == "linux" ]]; then sudo apt-get build-dep python-scipy; MINICONDA_OS="Linux"; fi
    - run: if [[ -z ${ANACONDA} ]]; then pip install -r tests/requirements.txt; pip install -r requirements.txt; pip install coveralls; else wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh; bash miniconda.sh -b -p ${{ github.workspace }}/miniconda; export PATH="${{ github.workspace }}/miniconda/bin:$PATH"; hash -r; conda config --set always_yes yes --set changeps1 no; export BASE_PYTHON=`python -c 'import sys; version=sys.version_info[:3]; print("{0}.{1}.{2}".format(*version))'`; echo "Base Anaconda Python is $BASE_PYTHON"; echo "Creating Anaconda Python $ANACONDA conda environment"; conda update -n base conda --yes; conda config --add channels conda-forge; conda env create -f tests/requirements.txt -n yellowbrick python=$ANACONDA; source activate yellowbrick; conda install coveralls; fi
    - run: python -m nltk.downloader popular
    - run: make test
    - run: coveralls
      if: "${{ success() }}"
    - uses: rtCamp/action-slack-notify@v2.2.1
      env:
        SLACK_WEBHOOK: "${{ secrets.SLACK_WEBHOOK }}"
  Python_3_8_on_Xenial_Linux:
    runs-on: ubuntu-16.04
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.8'
    - run: sudo apt-get update;
    - run: if [[ "${{ runner.os }}" == "linux" ]]; then sudo apt-get build-dep python-scipy; MINICONDA_OS="Linux"; fi
    - run: if [[ -z ${ANACONDA} ]]; then pip install -r tests/requirements.txt; pip install -r requirements.txt; pip install coveralls; else wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh; bash miniconda.sh -b -p ${{ github.workspace }}/miniconda; export PATH="${{ github.workspace }}/miniconda/bin:$PATH"; hash -r; conda config --set always_yes yes --set changeps1 no; export BASE_PYTHON=`python -c 'import sys; version=sys.version_info[:3]; print("{0}.{1}.{2}".format(*version))'`; echo "Base Anaconda Python is $BASE_PYTHON"; echo "Creating Anaconda Python $ANACONDA conda environment"; conda update -n base conda --yes; conda config --add channels conda-forge; conda env create -f tests/requirements.txt -n yellowbrick python=$ANACONDA; source activate yellowbrick; conda install coveralls; fi
    - run: python -m nltk.downloader popular
    - run: make test
    - run: coveralls
      if: "${{ success() }}"
    - uses: rtCamp/action-slack-notify@v2.2.1
      env:
        SLACK_WEBHOOK: "${{ secrets.SLACK_WEBHOOK }}"
  Miniconda_3_7_on_Xenial_Linux:
    runs-on: ubuntu-16.04
    env:
      ANACONDA: '3.7'
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - run: sudo apt-get update;
    - run: if [[ "${{ runner.os }}" == "linux" ]]; then sudo apt-get build-dep python-scipy; MINICONDA_OS="Linux"; fi
    - run: if [[ -z ${ANACONDA} ]]; then pip install -r tests/requirements.txt; pip install -r requirements.txt; pip install coveralls; else wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh; bash miniconda.sh -b -p ${{ github.workspace }}/miniconda; export PATH="${{ github.workspace }}/miniconda/bin:$PATH"; hash -r; conda config --set always_yes yes --set changeps1 no; export BASE_PYTHON=`python -c 'import sys; version=sys.version_info[:3]; print("{0}.{1}.{2}".format(*version))'`; echo "Base Anaconda Python is $BASE_PYTHON"; echo "Creating Anaconda Python $ANACONDA conda environment"; conda update -n base conda --yes; conda config --add channels conda-forge; conda env create -f tests/requirements.txt -n yellowbrick python=$ANACONDA; source activate yellowbrick; conda install coveralls; fi
    - run: python -m nltk.downloader popular
    - run: make test
    - run: coveralls
      if: "${{ success() }}"
    - uses: rtCamp/action-slack-notify@v2.2.1
      env:
        SLACK_WEBHOOK: "${{ secrets.SLACK_WEBHOOK }}"
  Miniconda_3_8_on_Xenial_Linux:
    runs-on: ubuntu-16.04
    env:
      ANACONDA: '3.8'
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - run: sudo apt-get update;
    - run: if [[ "${{ runner.os }}" == "linux" ]]; then sudo apt-get build-dep python-scipy; MINICONDA_OS="Linux"; fi
    - run: if [[ -z ${ANACONDA} ]]; then pip install -r tests/requirements.txt; pip install -r requirements.txt; pip install coveralls; else wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh; bash miniconda.sh -b -p ${{ github.workspace }}/miniconda; export PATH="${{ github.workspace }}/miniconda/bin:$PATH"; hash -r; conda config --set always_yes yes --set changeps1 no; export BASE_PYTHON=`python -c 'import sys; version=sys.version_info[:3]; print("{0}.{1}.{2}".format(*version))'`; echo "Base Anaconda Python is $BASE_PYTHON"; echo "Creating Anaconda Python $ANACONDA conda environment"; conda update -n base conda --yes; conda config --add channels conda-forge; conda env create -f tests/requirements.txt -n yellowbrick python=$ANACONDA; source activate yellowbrick; conda install coveralls; fi
    - run: python -m nltk.downloader popular
    - run: make test
    - run: coveralls
      if: "${{ success() }}"
    - uses: rtCamp/action-slack-notify@v2.2.1
      env:
        SLACK_WEBHOOK: "${{ secrets.SLACK_WEBHOOK }}"