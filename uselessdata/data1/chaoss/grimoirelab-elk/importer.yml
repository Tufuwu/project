name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
jobs:
  Python_3_6_for_ES_6_1_0:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: curl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.1.0.deb && sudo dpkg -i --force-confnew elasticsearch-6.1.0.deb && sudo service elasticsearch restart
    - run: pip install --upgrade setuptools==49.6.0
    - run: pip install --upgrade pip==18.1
    - run: pip install flake8
    - run: pip install coveralls
    - run: pip install -r "requirements.txt"
    - run: pip install -r "requirements_tests.txt"
    - run: pip install -r requirements.txt
    - run: sleep 20
    - run: flake8 .
    - run: mysqladmin -u root create test_sh
    - run: mysqladmin -u root create test_projects
    - run: mysql -u root test_projects < tests/test_projects.sql
    - run: cd tests
    - run: coverage run --source=grimoire_elk run_tests.py
    - run: coveralls
      if: "${{ success() }}"
    services:
      mysql:
        image: mysql
  Python_3_7_for_ES_6_1_0:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.7'
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: curl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.1.0.deb && sudo dpkg -i --force-confnew elasticsearch-6.1.0.deb && sudo service elasticsearch restart
    - run: pip install --upgrade setuptools==49.6.0
    - run: pip install --upgrade pip==18.1
    - run: pip install flake8
    - run: pip install coveralls
    - run: pip install -r "requirements.txt"
    - run: pip install -r "requirements_tests.txt"
    - run: pip install -r requirements.txt
    - run: sleep 20
    - run: flake8 .
    - run: mysqladmin -u root create test_sh
    - run: mysqladmin -u root create test_projects
    - run: mysql -u root test_projects < tests/test_projects.sql
    - run: cd tests
    - run: coverage run --source=grimoire_elk run_tests.py
    - run: coveralls
      if: "${{ success() }}"
    services:
      mysql:
        image: mysql
  Python_3_8_for_ES_6_1_0:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.8'
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: curl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.1.0.deb && sudo dpkg -i --force-confnew elasticsearch-6.1.0.deb && sudo service elasticsearch restart
    - run: pip install --upgrade setuptools==49.6.0
    - run: pip install --upgrade pip==18.1
    - run: pip install flake8
    - run: pip install coveralls
    - run: pip install -r "requirements.txt"
    - run: pip install -r "requirements_tests.txt"
    - run: pip install -r requirements.txt
    - run: sleep 20
    - run: flake8 .
    - run: mysqladmin -u root create test_sh
    - run: mysqladmin -u root create test_projects
    - run: mysql -u root test_projects < tests/test_projects.sql
    - run: cd tests
    - run: coverage run --source=grimoire_elk run_tests.py
    - run: coveralls
      if: "${{ success() }}"
    services:
      mysql:
        image: mysql
  Python_3_6_for_ES_7_2_0:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: curl -s -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.2.0-amd64.deb
    - run: sudo dpkg -i --force-confnew elasticsearch-7.2.0-amd64.deb
    - run: sudo sed -i.old 's/-Xms1g/-Xms128m/' /etc/elasticsearch/jvm.options
    - run: sudo sed -i.old 's/-Xmx1g/-Xmx128m/' /etc/elasticsearch/jvm.options
    - run: echo -e '-XX:+DisableExplicitGC\n-Djdk.io.permissionsUseCanonicalPath=true\n-Dlog4j.skipJansi=true\n-server\n' | sudo tee -a /etc/elasticsearch/jvm.options
    - run: sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
    - run: sudo systemctl start elasticsearch
    - run: pip install --upgrade setuptools==49.6.0
    - run: pip install --upgrade pip==18.1
    - run: pip install flake8
    - run: pip install coveralls
    - run: pip install -r "requirements.txt"
    - run: pip install -r "requirements_tests.txt"
    - run: pip install -r requirements.txt
    - run: sleep 20
    - run: flake8 .
    - run: mysqladmin -u root create test_sh
    - run: mysqladmin -u root create test_projects
    - run: mysql -u root test_projects < tests/test_projects.sql
    - run: cd tests
    - run: coverage run --source=grimoire_elk run_tests.py
    - run: coveralls
      if: "${{ success() }}"
    services:
      mysql:
        image: mysql
  Python_3_7_for_ES_7_2_0:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.7'
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: curl -s -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.2.0-amd64.deb
    - run: sudo dpkg -i --force-confnew elasticsearch-7.2.0-amd64.deb
    - run: sudo sed -i.old 's/-Xms1g/-Xms128m/' /etc/elasticsearch/jvm.options
    - run: sudo sed -i.old 's/-Xmx1g/-Xmx128m/' /etc/elasticsearch/jvm.options
    - run: echo -e '-XX:+DisableExplicitGC\n-Djdk.io.permissionsUseCanonicalPath=true\n-Dlog4j.skipJansi=true\n-server\n' | sudo tee -a /etc/elasticsearch/jvm.options
    - run: sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
    - run: sudo systemctl start elasticsearch
    - run: pip install --upgrade setuptools==49.6.0
    - run: pip install --upgrade pip==18.1
    - run: pip install flake8
    - run: pip install coveralls
    - run: pip install -r "requirements.txt"
    - run: pip install -r "requirements_tests.txt"
    - run: pip install -r requirements.txt
    - run: sleep 20
    - run: flake8 .
    - run: mysqladmin -u root create test_sh
    - run: mysqladmin -u root create test_projects
    - run: mysql -u root test_projects < tests/test_projects.sql
    - run: cd tests
    - run: coverage run --source=grimoire_elk run_tests.py
    - run: coveralls
      if: "${{ success() }}"
    services:
      mysql:
        image: mysql
  Python_3_8_for_ES_7_2_0:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.8'
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: curl -s -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.2.0-amd64.deb
    - run: sudo dpkg -i --force-confnew elasticsearch-7.2.0-amd64.deb
    - run: sudo sed -i.old 's/-Xms1g/-Xms128m/' /etc/elasticsearch/jvm.options
    - run: sudo sed -i.old 's/-Xmx1g/-Xmx128m/' /etc/elasticsearch/jvm.options
    - run: echo -e '-XX:+DisableExplicitGC\n-Djdk.io.permissionsUseCanonicalPath=true\n-Dlog4j.skipJansi=true\n-server\n' | sudo tee -a /etc/elasticsearch/jvm.options
    - run: sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
    - run: sudo systemctl start elasticsearch
    - run: pip install --upgrade setuptools==49.6.0
    - run: pip install --upgrade pip==18.1
    - run: pip install flake8
    - run: pip install coveralls
    - run: pip install -r "requirements.txt"
    - run: pip install -r "requirements_tests.txt"
    - run: pip install -r requirements.txt
    - run: sleep 20
    - run: flake8 .
    - run: mysqladmin -u root create test_sh
    - run: mysqladmin -u root create test_projects
    - run: mysql -u root test_projects < tests/test_projects.sql
    - run: cd tests
    - run: coverage run --source=grimoire_elk run_tests.py
    - run: coveralls
      if: "${{ success() }}"
    services:
      mysql:
        image: mysql