name: Python package

on:
  push:
    branches:
      - master
      - dev

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install https://github.com/pyro-ppl/pyro-api/archive/master.zip
          python -m pip install numpy
          python -m pip install torch==1.8.0+cpu torchvision==0.9.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          python -m pip install .[test]
          python -m pip install coveralls
          python -m pip freeze
      - name: Lint code
        run: make lint

  docs:
    name: docs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -r docs/requirements.txt
      - name: Generate docs
        run: |
          make docs
          make doctest

  perf:
    name: perf
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -e .[profile]
      - name: Run performance tests
        run: pytest -vs --benchmark-disable tests/perf/test_benchmark.py

  unit_test:
    name: unit test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -e .[profile]
      - name: Run unit tests
        run: pytest -vs --cov=pyro --cov-config .coveragerc --stage unit --durations 20

  examples:
    name: examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -e .[profile]
      - name: Run examples tests
        run: |
          CI=1 pytest -vs --cov=pyro --cov-config .coveragerc --stage test_examples --durations 10
          grep -l smoke_test tutorial/source/*.ipynb | xargs grep -L 'smoke_test = False' \
              | CI=1 xargs pytest -vx --nbval-lax --current-env -W ignore::FutureWarning

  integration_batch_1:
    name: integration batch_1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run integration batch 1 tests
        run: pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_1 --durations 10

  integration_batch_2:
    name: integration batch_2
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run integration batch 2 tests
        run: pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_2 --durations 10

  funsor:
    name: funsor
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -e .[funsor]
      - name: Run funsor tests
        run: |
          pytest -vs --cov=pyro --cov-config .coveragerc --stage funsor --durations 10
          CI=1 pytest -vs --cov=pyro --cov-config .coveragerc --stage test_examples --durations 10 -k funsor

  coveralls:
    name: coveralls
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install coveralls
        run: python -m pip install coveralls
      - name: Upload coverage to coveralls
        run: coveralls