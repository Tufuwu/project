```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        env:
          - DJANGO_VERSION: "Django>=3.0,<3.1"
            RUN_WEB_TESTS: "true"
            BROWSER_TAG: "chrome_latest"
            DEPLOY: "true"
            USE_CUSTOM_MODEL: "true"
          - DJANGO_VERSION: "Django>=3.0,<3.1"
            RUN_WEB_TESTS: "true"
            BROWSER_TAG: "chrome_latest"
            USE_CUSTOM_MODEL: "false"
          - DJANGO_VERSION: "Django>=3.0,<3.1"
            RUN_WEB_TESTS: "false"
            USE_CUSTOM_MODEL: "true"
          - DJANGO_VERSION: "Django>=2.2,<2.3"
            RUN_WEB_TESTS: "false"
            USE_CUSTOM_MODEL: "true"
          - DJANGO_VERSION: "Django>=3.0,<3.1"
            RUN_WEB_TESTS: "false"
            USE_CUSTOM_MODEL: "false"
          - DJANGO_VERSION: "Django>=2.2,<2.3"
            RUN_WEB_TESTS: "false"
            USE_CUSTOM_MODEL: "false"
        exclude:
          - env: 
              DJANGO_VERSION: "Django>=3.0,<3.1"
              RUN_WEB_TESTS: "false"
              USE_CUSTOM_MODEL: "true"
            python-version: '3.9'
          - env: 
              DJANGO_VERSION: "Django>=3.0,<3.1"
              RUN_WEB_TESTS: "false"
              USE_CUSTOM_MODEL: "false"
            python-version: '3.9'
          - env: 
              DJANGO_VERSION: "Django>=3.0,<3.1"
              RUN_WEB_TESTS: "true"
              BROWSER_TAG: "chrome_latest"
              DEPLOY: "true"
              USE_CUSTOM_MODEL: "true"
            python-version: '3.10'
          - env: 
              DJANGO_VERSION: "Django>=3.0,<3.1"
              RUN_WEB_TESTS: "true"
              BROWSER_TAG: "chrome_latest"
              USE_CUSTOM_MODEL: "false"
            python-version: '3.10'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install codecov
          grep -v "^django==" requirements.txt > /tmp/reqs.txt
          pip install -r /tmp/reqs.txt
          pip install "${{ matrix.env.DJANGO_VERSION }}" -U

      - name: Run tests
        run: ./scripts/ci_runtests.sh

      - name: Upload coverage to Codecov
        run: codecov

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && contains(github.ref, 'tags') && matrix.env.DEPLOY == 'true'
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
```