```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10']
        arch: [amd64, ppc64le]
        include:
          - python-version: '3.9'
            arch: amd64
            env: TOXENV=flake8
          - python-version: '3.9'
            arch: amd64
            env: TOXENV=isort
          - python-version: '3.9'
            arch: ppc64le
            env: TOXENV=flake8
          - python-version: '3.9'
            arch: ppc64le
            env: TOXENV=isort
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - name: Install dependencies
        run: pip install tox
      - name: Run lint
        run: tox -e ${{ matrix.env }}

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10']
        arch: [amd64, ppc64le]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - name: Install dependencies
        run: pip install tox coveralls
      - name: Run tests
        run: tox
      - name: Upload coverage to Coveralls
        if: success() && matrix.python-version == '3.9'
        run: |
          if [ -f .coverage ]; then
            coveralls
          fi

  deploy:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: pip install django
      - name: Build and publish
        env:
          TWINE_USERNAME: charettes
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install build twine
          python -m build
          twine upload dist/*
```