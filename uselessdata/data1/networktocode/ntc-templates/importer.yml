name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
jobs:
  lint:
    runs-on: ubuntu-16.04
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: "${{ matrix.python }}"
    - run: pip install -r requirements.txt
    - run: pip install --upgrade pip
    - run: pip install poetry
    - run: poetry install
    - run: poetry run tox -e py36,py37,py38
    strategy:
      matrix:
        python:
        - '3.6'
        - '3.7'
        - '3.8'
  lint_2:
    runs-on: ubuntu-16.04
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
    - run: pip install -r requirements.txt
    - run: pip install --upgrade pip
    - run: pip install poetry
    - run: poetry install
    - run: poetry run tox -e black
    - run: poetry run tox -e flake8
    - run: poetry run tox -e yamllint
  deploy_github:
    needs:
    - lint
    - lint_2
    runs-on: ubuntu-16.04
    if: ${{ github.ref }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
    - run: pip install -r requirements.txt
    - run: pip install --upgrade pip
    - run: pip install poetry
    - run: poetry version ${{ github.ref }}
    - run: poetry build
    - uses: softprops/action-gh-release@v0.1.15
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
      with:
        files: dist/*
      if: "${{ github.event_name == 'push' }}"
  deploy_pypi:
    needs:
    - lint
    - lint_2
    - deploy_github
    runs-on: ubuntu-16.04
    if: ${{ github.ref }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
    - run: pip install -r requirements.txt
    - run: pip install --upgrade pip
    - run: pip install poetry
    - run: echo Deploying the release to PyPI
    - run: poetry version ${{ github.ref }}
    - run: poetry publish --build -u __token__ -p $PYPI_TOKEN
      if: "${{ github.event_name == 'push' }}"