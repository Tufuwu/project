```yaml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        env:
          - MODE=flake8
          - MODE=flake8-strict
          - MODE=docs
          - DJANGO_VERSION=dj22
          - DJANGO_VERSION=dj30
          - DJANGO_VERSION=dj31
          - DJANGO_VERSION=dj32
          - DJANGO_VERSION=djdev
        exclude:
          - python-version: '3.9'
            env: MODE=flake8
          - python-version: '3.9'
            env: MODE=flake8-strict
          - python-version: '3.9'
            env: MODE=flake8-docs
          - python-version: '3.9'
            env: DJANGO_VERSION=dj30
          - python-version: '3.9'
            env: DJANGO_VERSION=dj31
          - python-version: '3.9'
            env: DJANGO_VERSION=dj32
          - python-version: '3.9'
            env: DJANGO_VERSION=djdev
      allow_failures:
        - env: DJANGO_VERSION=djdev
        - env: MODE=flake8-strict

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U wheel virtualenv
          pip install tox coveralls

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y binutils libproj-dev gdal-bin libsqlite3-mod-spatialite

      - name: Run tests
        env:
          DJANGO_VERSION: ${{ matrix.env.DJANGO_VERSION }}
          MODE: ${{ matrix.env.MODE }}
        run: |
          apt list --installed
          coverage erase
          tox -e py${{ matrix.python-version }}-${{ matrix.env.DJANGO_VERSION }}${{ matrix.env.MODE }}

      - name: Coveralls
        if: success()
        run: coveralls
```