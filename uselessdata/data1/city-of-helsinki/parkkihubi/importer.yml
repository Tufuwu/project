name: Tufuwu/test2
on:
  push:
    branches:
    - "**/*"
  pull_request:
concurrency:
#   # This item has no matching transformer
#   maximum_number_of_builds: 0
jobs:
  test:
    runs-on: ubuntu-16.04
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.5'
    - run: apt-get -y install postgresql-10 postgresql-client-10 postgresql-10-postgis-2.4
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: pip install tox-travis
    - run: psql -U postgres -c "create extension postgis"
    - run: tox
    - run: pip install -r requirements-cov.txt && codecov
      if: "${{ success() }}"
    services:
      postgresql:
        image: postgres:10
  test_2:
    runs-on: ubuntu-16.04
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.6'
    - run: apt-get -y install postgresql-10 postgresql-client-10 postgresql-10-postgis-2.4
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: pip install tox-travis
    - run: psql -U postgres -c "create extension postgis"
    - run: tox
    - run: pip install -r requirements-cov.txt && codecov
      if: "${{ success() }}"
    services:
      postgresql:
        image: postgres:10
  test_3:
    runs-on: ubuntu-16.04
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.7'
    - run: apt-get -y install postgresql-10 postgresql-client-10 postgresql-10-postgis-2.4
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: pip install tox-travis
    - run: psql -U postgres -c "create extension postgis"
    - run: tox
    - run: pip install -r requirements-cov.txt && codecov
      if: "${{ success() }}"
    services:
      postgresql:
        image: postgres:10
  test_4:
    runs-on: ubuntu-16.04
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.8'
    - run: apt-get -y install postgresql-10 postgresql-client-10 postgresql-10-postgis-2.4
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: pip install tox-travis
    - run: psql -U postgres -c "create extension postgis"
    - run: tox
    - run: pip install -r requirements-cov.txt && codecov
      if: "${{ success() }}"
    services:
      postgresql:
        image: postgres:10
  Requirements:
    runs-on: ubuntu-16.04
    env:
      TOXENV: requirements
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.5'
    - run: apt-get -y install postgresql-10 postgresql-client-10 postgresql-10-postgis-2.4
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: pip install tox-travis
    - run: psql -U postgres -c "create extension postgis"
    - run: tox
    - run: pip install -r requirements-cov.txt && codecov
      if: "${{ success() }}"
    services:
      postgresql:
        image: postgres:10
  Coding_Style:
    runs-on: ubuntu-16.04
    env:
      TOXENV: style
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.5'
    - run: apt-get -y install postgresql-10 postgresql-client-10 postgresql-10-postgis-2.4
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: pip install tox-travis
    - run: psql -U postgres -c "create extension postgis"
    - run: tox
    - run: pip install -r requirements-cov.txt && codecov
      if: "${{ success() }}"
    services:
      postgresql:
        image: postgres:10
  Sanitizer_Configuration:
    runs-on: ubuntu-16.04
    env:
      TOXENV: sanitizer
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Set up pip cache
      uses: actions/cache@v3.3.2
      with:
        path: "~/.cache/pip"
        key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}"
        restore-keys: "${{ runner.os }}-pip-"
    - uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.5'
    - run: apt-get -y install postgresql-10 postgresql-client-10 postgresql-10-postgis-2.4
#     # 'sudo' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: pip install tox-travis
    - run: psql -U postgres -c "create extension postgis"
    - run: tox
    - run: pip install -r requirements-cov.txt && codecov
      if: "${{ success() }}"
    services:
      postgresql:
        image: postgres:10