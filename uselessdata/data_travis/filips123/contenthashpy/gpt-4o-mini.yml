```yaml
name: CI

on:
  push:
    tags:
      - '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7', 'nightly']
        fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install pylint pytest pytest-cov
          pylint --generate-rcfile > ~/.pylintrc
          sed -i "s/min-similarity-lines=.*/min-similarity-lines=50/g" ~/.pylintrc
          git describe --tags --long --dirty || sed -i "s/setup_requires = .*/version = '0.0.0',/g" setup.py
          pip install -e .

      - name: Run lint
        run: |
          pylint content_hash/*
          pylint example.py

      - name: Run tests
        run: pytest --cov=content_hash

      - name: Scrutinizer Ocular
        if: startsWith(matrix.python-version, '3.7')
        run: |
          pip install scrutinizer-ocular
          ocular

  deploy:
    runs-on: ubuntu-18.04
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Deploy to PyPI
        run: |
          pip install twine
          python setup.py sdist bdist_wheel
          twine upload dist/* -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_PASSWORD }}
```