language: php

# Declare versions of PHP to use. Use one decimal max.
# @link https://docs.travis-ci.com/user/build-configuration/
matrix:
    fast_finish: true

    include:
        # aliased to a recent 7.2.x version
        - php: '7.2'
          env: SNIFF=1
        - php: '7.3'
        - php: '7.4'
        # bleeding edge PHP
        - php: 'nightly'

    allow_failures:
        - php: 'nightly'

before_install:
  - phpenv config-rm xdebug.ini || true
  - composer self-update

# Use this to prepare your build for testing.
# e.g. copy database configurations, environment variables, etc.
# Failures in this section will result in build status 'errored'.
before_script:
    # Speed up build time by disabling Xdebug.
    - phpenv config-rm xdebug.ini || echo 'No xdebug config.'
    # Set up temporary paths.
    - if [[ "$SNIFF" == "1" ]]; then export PHPCS_DIR=/tmp/phpcs; fi
    - if [[ "$SNIFF" == "1" ]]; then export WPCS_DIR=/tmp/wpcs; fi
    - if [[ "$SNIFF" == "1" ]]; then export PHPCOMPAT_DIR=/tmp/phpcompatibility; fi
    - if [[ "$SNIFF" == "1" ]]; then export SNIFFS_DIR=/tmp/sniffs; fi
    # Install PHP_CodeSniffer.
    - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR; fi
    # Install WordPress Coding Standards.
    - if [[ "$SNIFF" == "1" ]]; then git clone -b 2.2.1 --depth 1 https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git $WPCS_DIR; fi
    # Set install path for WordPress Coding Standards.
    - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs --config-set installed_paths $WPCS_DIR,$PHPCOMPAT_DIR,$SNIFFS_DIR; fi
    # After CodeSniffer install you should refresh your path.
    - if [[ "$SNIFF" == "1" ]]; then phpenv rehash; fi
    # Install PHP Compatibility sniffs.
    - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/wimg/PHPCompatibility.git $PHPCOMPAT_DIR; fi
    # Pull in the dudestack phpcs rules.
    - if [[ "$SNIFF" == "1" ]]; then wget https://raw.githubusercontent.com/digitoimistodude/dudestack/dev/phpcs.xml; fi

install:
  - composer install -o --prefer-dist --no-interaction

# Run test script commands.
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
    # Search for PHP syntax errors.
    # - find -L . -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l
    # Run against WordPress Coding Standards.
    # If you use a custom ruleset, change `--standard=WordPress` to point to your ruleset file,
    # for example: `--standard=wpcs.xml`.
    # You can use any of the normal PHPCS command line arguments in the command:
    # https://github.com/squizlabs/PHP_CodeSniffer/wiki/Usage
    - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs -p . --ignore=node_modules,scripts,vendor,content,wp,*/css/* --standard=phpcs.xml; fi
